# Check all resources have required tags

# Based on https://github.com/hashicorp/learn-sentinel-policy-upload/blob/main/restrict-aws-instances-type-and-tag.sentinel

# Imports mock data
import "tfplan/v2" as tfplan
import "strings"

# Get all AWS resources from all modules
ec2_instances = filter tfplan.resource_changes as _, rc {
	strings.has_prefix(rc.type, "aws_autoscaling") and
		(rc.change.actions contains "create" or rc.change.actions is ["update"])
}

# Mandatory Instance Tags
mandatory_tags = [
	"Name",
	"ttl",
	"owner",
	"terraform",
	"purpose",
	"this-tag-does-not-exist",
]

# Rule to enforce tags on all instances
mandatory_instance_tags = rule {
	all ec2_instances as _, instance {
		all mandatory_tags as mt {
			# TODO: check if resource is taggable

			#instance.change.after.tags contains mt or not print("resource:", instance.address, "missing tag:", mt)
			print("resource:", instance.address, "missing tag:", mt) and instance.change.after.tags contains mt
		}
	}
}

# Main rule that requires other rules to be true
main = rule {
	(mandatory_instance_tags) else true
}
