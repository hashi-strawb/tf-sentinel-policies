terraform_version = "1.0.8"

planned_values = {
	"outputs": {},
	"resources": {
		"module.nomad.module.clients.aws_autoscaling_group.autoscaling_group": {
			"address":        "module.nomad.module.clients.aws_autoscaling_group.autoscaling_group",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.nomad.module.clients",
			"name":           "autoscaling_group",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_autoscaling_group",
			"values": {
				"capacity_rebalance":        null,
				"desired_capacity":          1,
				"enabled_metrics":           null,
				"force_delete":              false,
				"force_delete_warm_pool":    false,
				"health_check_grace_period": 300,
				"health_check_type":         "EC2",
				"initial_lifecycle_hook":    [],
				"instance_refresh":          [],
				"launch_template":           [],
				"load_balancers":            null,
				"max_instance_lifetime":     null,
				"max_size":                  1,
				"metrics_granularity":       "1Minute",
				"min_elb_capacity":          null,
				"min_size":                  1,
				"mixed_instances_policy":    [],
				"placement_group":           null,
				"protect_from_scale_in":     false,
				"suspended_processes":       null,
				"tag": [
					{
						"key": "Environment",
						"propagate_at_launch": true,
						"value":               "development",
					},
					{
						"key": "Name",
						"propagate_at_launch": true,
						"value":               "strawb-client",
					},
					{
						"key": "nomad-clients",
						"propagate_at_launch": true,
						"value":               "strawb",
					},
				],
				"tags":              null,
				"target_group_arns": null,
				"termination_policies": [
					"Default",
				],
				"timeouts": null,
				"vpc_zone_identifier": [
					"subnet-25bfee4c",
					"subnet-4fa23f35",
					"subnet-76f0533a",
				],
				"wait_for_capacity_timeout": "10m",
				"wait_for_elb_capacity":     null,
				"warm_pool":                 [],
			},
		},
		"module.nomad.module.clients.aws_iam_instance_profile.instance_profile": {
			"address":        "module.nomad.module.clients.aws_iam_instance_profile.instance_profile",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.nomad.module.clients",
			"name":           "instance_profile",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_instance_profile",
			"values": {
				"name_prefix": "strawb-client",
				"path":        "/",
				"tags":        null,
				"tags_all": {
					"Name": "StrawbTest",
				},
			},
		},
		"module.nomad.module.clients.aws_iam_role.instance_role": {
			"address":        "module.nomad.module.clients.aws_iam_role.instance_role",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.nomad.module.clients",
			"name":           "instance_role",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_role",
			"values": {
				"assume_role_policy":    "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
				"description":           null,
				"force_detach_policies": false,
				"max_session_duration":  3600,
				"name_prefix":           "strawb-client",
				"path":                  "/",
				"permissions_boundary":  null,
				"tags":                  null,
				"tags_all": {
					"Name": "StrawbTest",
				},
			},
		},
		"module.nomad.module.clients.aws_launch_configuration.launch_configuration": {
			"address":        "module.nomad.module.clients.aws_launch_configuration.launch_configuration",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.nomad.module.clients",
			"name":           "launch_configuration",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_launch_configuration",
			"values": {
				"associate_public_ip_address": false,
				"ebs_optimized":               false,
				"enable_monitoring":           true,
				"ephemeral_block_device":      [],
				"image_id":                    "ami-0f5b77f5e53001306",
				"instance_type":               "t3.micro",
				"name_prefix":                 "strawb-client-",
				"placement_tenancy":           "default",
				"root_block_device": [
					{
						"delete_on_termination": true,
						"volume_size":           50,
						"volume_type":           "standard",
					},
				],
				"spot_price":                       null,
				"user_data":                        "26ba1752933a14e5a56d0ef439bbcdf8b5c0842c",
				"user_data_base64":                 null,
				"vpc_classic_link_id":              null,
				"vpc_classic_link_security_groups": null,
			},
		},
		"module.nomad.module.clients.aws_security_group.lc_security_group": {
			"address":        "module.nomad.module.clients.aws_security_group.lc_security_group",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.nomad.module.clients",
			"name":           "lc_security_group",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group",
			"values": {
				"description":            "Security group for the strawb-client launch configuration",
				"name_prefix":            "strawb-client",
				"revoke_rules_on_delete": false,
				"tags": null,
				"tags_all": {
					"Name": "StrawbTest",
				},
				"timeouts": null,
				"vpc_id":   "vpc-6b8dc203",
			},
		},
		"module.nomad.module.clients.aws_security_group_rule.allow_all_outbound": {
			"address":        "module.nomad.module.clients.aws_security_group_rule.allow_all_outbound",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.nomad.module.clients",
			"name":           "allow_all_outbound",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      null,
				"from_port":        0,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "-1",
				"self":             false,
				"to_port":          0,
				"type":             "egress",
			},
		},
		"module.nomad.module.clients.aws_security_group_rule.allow_ssh_inbound[0]": {
			"address":        "module.nomad.module.clients.aws_security_group_rule.allow_ssh_inbound[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.clients",
			"name":           "allow_ssh_inbound",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      null,
				"from_port":        22,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             false,
				"to_port":          22,
				"type":             "ingress",
			},
		},
		"module.nomad.module.clients.module.security_group_rules.aws_security_group_rule.allow_http_inbound[0]": {
			"address":        "module.nomad.module.clients.module.security_group_rules.aws_security_group_rule.allow_http_inbound[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.clients.module.security_group_rules",
			"name":           "allow_http_inbound",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      null,
				"from_port":        4646,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             false,
				"to_port":          4646,
				"type":             "ingress",
			},
		},
		"module.nomad.module.clients.module.security_group_rules.aws_security_group_rule.allow_rpc_inbound[0]": {
			"address":        "module.nomad.module.clients.module.security_group_rules.aws_security_group_rule.allow_rpc_inbound[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.clients.module.security_group_rules",
			"name":           "allow_rpc_inbound",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      null,
				"from_port":        4647,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             false,
				"to_port":          4647,
				"type":             "ingress",
			},
		},
		"module.nomad.module.clients.module.security_group_rules.aws_security_group_rule.allow_serf_tcp_inbound[0]": {
			"address":        "module.nomad.module.clients.module.security_group_rules.aws_security_group_rule.allow_serf_tcp_inbound[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.clients.module.security_group_rules",
			"name":           "allow_serf_tcp_inbound",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      null,
				"from_port":        4648,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             false,
				"to_port":          4648,
				"type":             "ingress",
			},
		},
		"module.nomad.module.clients.module.security_group_rules.aws_security_group_rule.allow_serf_udp_inbound[0]": {
			"address":        "module.nomad.module.clients.module.security_group_rules.aws_security_group_rule.allow_serf_udp_inbound[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.clients.module.security_group_rules",
			"name":           "allow_serf_udp_inbound",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      null,
				"from_port":        4648,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "udp",
				"self":             false,
				"to_port":          4648,
				"type":             "ingress",
			},
		},
		"module.nomad.module.consul_iam_policies.aws_iam_role_policy.auto_discover_cluster[0]": {
			"address":        "module.nomad.module.consul_iam_policies.aws_iam_role_policy.auto_discover_cluster[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.consul_iam_policies",
			"name":           "auto_discover_cluster",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_role_policy",
			"values": {
				"name":        "auto-discover-cluster",
				"name_prefix": null,
				"policy":      "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeTags\",\n        \"ec2:DescribeInstances\",\n        \"autoscaling:DescribeAutoScalingGroups\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
			},
		},
		"module.nomad.module.nomad_security_group_rules.aws_security_group_rule.allow_http_inbound[0]": {
			"address":        "module.nomad.module.nomad_security_group_rules.aws_security_group_rule.allow_http_inbound[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.nomad_security_group_rules",
			"name":           "allow_http_inbound",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      null,
				"from_port":        4646,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             false,
				"to_port":          4646,
				"type":             "ingress",
			},
		},
		"module.nomad.module.nomad_security_group_rules.aws_security_group_rule.allow_rpc_inbound[0]": {
			"address":        "module.nomad.module.nomad_security_group_rules.aws_security_group_rule.allow_rpc_inbound[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.nomad_security_group_rules",
			"name":           "allow_rpc_inbound",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      null,
				"from_port":        4647,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             false,
				"to_port":          4647,
				"type":             "ingress",
			},
		},
		"module.nomad.module.nomad_security_group_rules.aws_security_group_rule.allow_serf_tcp_inbound[0]": {
			"address":        "module.nomad.module.nomad_security_group_rules.aws_security_group_rule.allow_serf_tcp_inbound[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.nomad_security_group_rules",
			"name":           "allow_serf_tcp_inbound",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      null,
				"from_port":        4648,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             false,
				"to_port":          4648,
				"type":             "ingress",
			},
		},
		"module.nomad.module.nomad_security_group_rules.aws_security_group_rule.allow_serf_udp_inbound[0]": {
			"address":        "module.nomad.module.nomad_security_group_rules.aws_security_group_rule.allow_serf_udp_inbound[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.nomad_security_group_rules",
			"name":           "allow_serf_udp_inbound",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      null,
				"from_port":        4648,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "udp",
				"self":             false,
				"to_port":          4648,
				"type":             "ingress",
			},
		},
		"module.nomad.module.servers.aws_autoscaling_group.autoscaling_group": {
			"address":        "module.nomad.module.servers.aws_autoscaling_group.autoscaling_group",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.nomad.module.servers",
			"name":           "autoscaling_group",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_autoscaling_group",
			"values": {
				"capacity_rebalance":        null,
				"desired_capacity":          3,
				"enabled_metrics":           null,
				"force_delete":              false,
				"force_delete_warm_pool":    false,
				"health_check_grace_period": 300,
				"health_check_type":         "EC2",
				"initial_lifecycle_hook":    [],
				"instance_refresh":          [],
				"launch_template":           [],
				"load_balancers":            null,
				"max_instance_lifetime":     null,
				"max_size":                  3,
				"metrics_granularity":       "1Minute",
				"min_elb_capacity":          null,
				"min_size":                  3,
				"mixed_instances_policy":    [],
				"name_prefix":               "strawb-server",
				"placement_group":           null,
				"protect_from_scale_in":     false,
				"suspended_processes":       null,
				"tag": [],
				"tags": [
					{
						"key": "Environment",
						"propagate_at_launch": "true",
						"value":               "development",
					},
					{
						"key": "Name",
						"propagate_at_launch": "true",
						"value":               "strawb-server",
					},
					{
						"key": "nomad-servers",
						"propagate_at_launch": "true",
						"value":               "auto-join",
					},
				],
				"target_group_arns": null,
				"termination_policies": [
					"Default",
				],
				"timeouts": null,
				"vpc_zone_identifier": [
					"subnet-25bfee4c",
					"subnet-4fa23f35",
					"subnet-76f0533a",
				],
				"wait_for_capacity_timeout": "10m",
				"wait_for_elb_capacity":     null,
				"warm_pool":                 [],
			},
		},
		"module.nomad.module.servers.aws_iam_instance_profile.instance_profile[0]": {
			"address":        "module.nomad.module.servers.aws_iam_instance_profile.instance_profile[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.servers",
			"name":           "instance_profile",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_instance_profile",
			"values": {
				"name_prefix": "strawb-server",
				"path":        "/",
				"tags":        null,
				"tags_all": {
					"Name": "StrawbTest",
				},
			},
		},
		"module.nomad.module.servers.aws_iam_role.instance_role[0]": {
			"address":        "module.nomad.module.servers.aws_iam_role.instance_role[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.servers",
			"name":           "instance_role",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_role",
			"values": {
				"assume_role_policy":    "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
				"description":           null,
				"force_detach_policies": false,
				"max_session_duration":  3600,
				"name_prefix":           "strawb-server",
				"path":                  "/",
				"permissions_boundary":  null,
				"tags":                  null,
				"tags_all": {
					"Name": "StrawbTest",
				},
			},
		},
		"module.nomad.module.servers.aws_launch_configuration.launch_configuration": {
			"address":        "module.nomad.module.servers.aws_launch_configuration.launch_configuration",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.nomad.module.servers",
			"name":           "launch_configuration",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_launch_configuration",
			"values": {
				"associate_public_ip_address": false,
				"ebs_optimized":               false,
				"enable_monitoring":           true,
				"ephemeral_block_device":      [],
				"image_id":                    "ami-0f5b77f5e53001306",
				"instance_type":               "t3.micro",
				"name_prefix":                 "strawb-server-",
				"placement_tenancy":           null,
				"root_block_device": [
					{
						"delete_on_termination": true,
						"volume_size":           50,
						"volume_type":           "standard",
					},
				],
				"spot_price":                       null,
				"user_data":                        "cd7b9085e976fe6d57aabd4053ec71dc2d4236ce",
				"user_data_base64":                 null,
				"vpc_classic_link_id":              null,
				"vpc_classic_link_security_groups": null,
			},
		},
		"module.nomad.module.servers.aws_security_group.lc_security_group": {
			"address":        "module.nomad.module.servers.aws_security_group.lc_security_group",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.nomad.module.servers",
			"name":           "lc_security_group",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group",
			"values": {
				"description":            "Security group for the strawb-server launch configuration",
				"name_prefix":            "strawb-server",
				"revoke_rules_on_delete": false,
				"tags": {
					"Name": "strawb-server",
				},
				"tags_all": {
					"Name": "strawb-server",
				},
				"timeouts": null,
				"vpc_id":   "vpc-6b8dc203",
			},
		},
		"module.nomad.module.servers.aws_security_group_rule.allow_all_outbound": {
			"address":        "module.nomad.module.servers.aws_security_group_rule.allow_all_outbound",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.nomad.module.servers",
			"name":           "allow_all_outbound",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      null,
				"from_port":        0,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "-1",
				"self":             false,
				"to_port":          0,
				"type":             "egress",
			},
		},
		"module.nomad.module.servers.aws_security_group_rule.allow_ssh_inbound[0]": {
			"address":        "module.nomad.module.servers.aws_security_group_rule.allow_ssh_inbound[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.servers",
			"name":           "allow_ssh_inbound",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      null,
				"from_port":        22,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             false,
				"to_port":          22,
				"type":             "ingress",
			},
		},
		"module.nomad.module.servers.module.iam_policies.aws_iam_role_policy.auto_discover_cluster[0]": {
			"address":        "module.nomad.module.servers.module.iam_policies.aws_iam_role_policy.auto_discover_cluster[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.servers.module.iam_policies",
			"name":           "auto_discover_cluster",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_iam_role_policy",
			"values": {
				"name":        "auto-discover-cluster",
				"name_prefix": null,
				"policy":      "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeTags\",\n        \"ec2:DescribeInstances\",\n        \"autoscaling:DescribeAutoScalingGroups\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
			},
		},
		"module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_cli_rpc_inbound[0]": {
			"address":        "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_cli_rpc_inbound[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.servers.module.security_group_rules",
			"name":           "allow_cli_rpc_inbound",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      null,
				"from_port":        8400,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             false,
				"to_port":          8400,
				"type":             "ingress",
			},
		},
		"module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_cli_rpc_inbound_from_self": {
			"address":        "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_cli_rpc_inbound_from_self",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.nomad.module.servers.module.security_group_rules",
			"name":           "allow_cli_rpc_inbound_from_self",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks":      null,
				"description":      null,
				"from_port":        8400,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             true,
				"to_port":          8400,
				"type":             "ingress",
			},
		},
		"module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_dns_tcp_inbound[0]": {
			"address":        "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_dns_tcp_inbound[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.servers.module.security_group_rules",
			"name":           "allow_dns_tcp_inbound",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      null,
				"from_port":        8600,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             false,
				"to_port":          8600,
				"type":             "ingress",
			},
		},
		"module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_dns_tcp_inbound_from_self": {
			"address":        "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_dns_tcp_inbound_from_self",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.nomad.module.servers.module.security_group_rules",
			"name":           "allow_dns_tcp_inbound_from_self",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks":      null,
				"description":      null,
				"from_port":        8600,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             true,
				"to_port":          8600,
				"type":             "ingress",
			},
		},
		"module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_dns_udp_inbound[0]": {
			"address":        "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_dns_udp_inbound[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.servers.module.security_group_rules",
			"name":           "allow_dns_udp_inbound",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      null,
				"from_port":        8600,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "udp",
				"self":             false,
				"to_port":          8600,
				"type":             "ingress",
			},
		},
		"module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_dns_udp_inbound_from_self": {
			"address":        "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_dns_udp_inbound_from_self",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.nomad.module.servers.module.security_group_rules",
			"name":           "allow_dns_udp_inbound_from_self",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks":      null,
				"description":      null,
				"from_port":        8600,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "udp",
				"self":             true,
				"to_port":          8600,
				"type":             "ingress",
			},
		},
		"module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_http_api_inbound[0]": {
			"address":        "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_http_api_inbound[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.servers.module.security_group_rules",
			"name":           "allow_http_api_inbound",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      null,
				"from_port":        8500,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             false,
				"to_port":          8500,
				"type":             "ingress",
			},
		},
		"module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_http_api_inbound_from_self": {
			"address":        "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_http_api_inbound_from_self",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.nomad.module.servers.module.security_group_rules",
			"name":           "allow_http_api_inbound_from_self",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks":      null,
				"description":      null,
				"from_port":        8500,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             true,
				"to_port":          8500,
				"type":             "ingress",
			},
		},
		"module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_serf_wan_tcp_inbound[0]": {
			"address":        "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_serf_wan_tcp_inbound[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.servers.module.security_group_rules",
			"name":           "allow_serf_wan_tcp_inbound",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      null,
				"from_port":        8302,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             false,
				"to_port":          8302,
				"type":             "ingress",
			},
		},
		"module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_serf_wan_tcp_inbound_from_self": {
			"address":        "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_serf_wan_tcp_inbound_from_self",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.nomad.module.servers.module.security_group_rules",
			"name":           "allow_serf_wan_tcp_inbound_from_self",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks":      null,
				"description":      null,
				"from_port":        8302,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             true,
				"to_port":          8302,
				"type":             "ingress",
			},
		},
		"module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_serf_wan_udp_inbound[0]": {
			"address":        "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_serf_wan_udp_inbound[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.servers.module.security_group_rules",
			"name":           "allow_serf_wan_udp_inbound",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      null,
				"from_port":        8302,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "udp",
				"self":             false,
				"to_port":          8302,
				"type":             "ingress",
			},
		},
		"module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_serf_wan_udp_inbound_from_self": {
			"address":        "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_serf_wan_udp_inbound_from_self",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.nomad.module.servers.module.security_group_rules",
			"name":           "allow_serf_wan_udp_inbound_from_self",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks":      null,
				"description":      null,
				"from_port":        8302,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "udp",
				"self":             true,
				"to_port":          8302,
				"type":             "ingress",
			},
		},
		"module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_server_rpc_inbound[0]": {
			"address":        "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_server_rpc_inbound[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.servers.module.security_group_rules",
			"name":           "allow_server_rpc_inbound",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      null,
				"from_port":        8300,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             false,
				"to_port":          8300,
				"type":             "ingress",
			},
		},
		"module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_server_rpc_inbound_from_self": {
			"address":        "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_server_rpc_inbound_from_self",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.nomad.module.servers.module.security_group_rules",
			"name":           "allow_server_rpc_inbound_from_self",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks":      null,
				"description":      null,
				"from_port":        8300,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             true,
				"to_port":          8300,
				"type":             "ingress",
			},
		},
		"module.nomad.module.servers.module.security_group_rules.module.client_security_group_rules.aws_security_group_rule.allow_serf_lan_tcp_inbound[0]": {
			"address":        "module.nomad.module.servers.module.security_group_rules.module.client_security_group_rules.aws_security_group_rule.allow_serf_lan_tcp_inbound[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.servers.module.security_group_rules.module.client_security_group_rules",
			"name":           "allow_serf_lan_tcp_inbound",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      null,
				"from_port":        8301,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             false,
				"to_port":          8301,
				"type":             "ingress",
			},
		},
		"module.nomad.module.servers.module.security_group_rules.module.client_security_group_rules.aws_security_group_rule.allow_serf_lan_tcp_inbound_from_self": {
			"address":        "module.nomad.module.servers.module.security_group_rules.module.client_security_group_rules.aws_security_group_rule.allow_serf_lan_tcp_inbound_from_self",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.nomad.module.servers.module.security_group_rules.module.client_security_group_rules",
			"name":           "allow_serf_lan_tcp_inbound_from_self",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks":      null,
				"description":      null,
				"from_port":        8301,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             true,
				"to_port":          8301,
				"type":             "ingress",
			},
		},
		"module.nomad.module.servers.module.security_group_rules.module.client_security_group_rules.aws_security_group_rule.allow_serf_lan_udp_inbound[0]": {
			"address":        "module.nomad.module.servers.module.security_group_rules.module.client_security_group_rules.aws_security_group_rule.allow_serf_lan_udp_inbound[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.servers.module.security_group_rules.module.client_security_group_rules",
			"name":           "allow_serf_lan_udp_inbound",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      null,
				"from_port":        8301,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "udp",
				"self":             false,
				"to_port":          8301,
				"type":             "ingress",
			},
		},
		"module.nomad.module.servers.module.security_group_rules.module.client_security_group_rules.aws_security_group_rule.allow_serf_lan_udp_inbound_from_self": {
			"address":        "module.nomad.module.servers.module.security_group_rules.module.client_security_group_rules.aws_security_group_rule.allow_serf_lan_udp_inbound_from_self",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.nomad.module.servers.module.security_group_rules.module.client_security_group_rules",
			"name":           "allow_serf_lan_udp_inbound_from_self",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group_rule",
			"values": {
				"cidr_blocks":      null,
				"description":      null,
				"from_port":        8301,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "udp",
				"self":             true,
				"to_port":          8301,
				"type":             "ingress",
			},
		},
	},
}

variables = {}

resource_changes = {
	"module.nomad.module.clients.aws_autoscaling_group.autoscaling_group": {
		"address": "module.nomad.module.clients.aws_autoscaling_group.autoscaling_group",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"capacity_rebalance":        null,
				"desired_capacity":          1,
				"enabled_metrics":           null,
				"force_delete":              false,
				"force_delete_warm_pool":    false,
				"health_check_grace_period": 300,
				"health_check_type":         "EC2",
				"initial_lifecycle_hook":    [],
				"instance_refresh":          [],
				"launch_template":           [],
				"load_balancers":            null,
				"max_instance_lifetime":     null,
				"max_size":                  1,
				"metrics_granularity":       "1Minute",
				"min_elb_capacity":          null,
				"min_size":                  1,
				"mixed_instances_policy":    [],
				"placement_group":           null,
				"protect_from_scale_in":     false,
				"suspended_processes":       null,
				"tag": [
					{
						"key": "Environment",
						"propagate_at_launch": true,
						"value":               "development",
					},
					{
						"key": "Name",
						"propagate_at_launch": true,
						"value":               "strawb-client",
					},
					{
						"key": "nomad-clients",
						"propagate_at_launch": true,
						"value":               "strawb",
					},
				],
				"tags":              null,
				"target_group_arns": null,
				"termination_policies": [
					"Default",
				],
				"timeouts": null,
				"vpc_zone_identifier": [
					"subnet-25bfee4c",
					"subnet-4fa23f35",
					"subnet-76f0533a",
				],
				"wait_for_capacity_timeout": "10m",
				"wait_for_elb_capacity":     null,
				"warm_pool":                 [],
			},
			"after_unknown": {
				"arn":                true,
				"availability_zones": true,
				"default_cooldown":   true,
				"id":                 true,
				"initial_lifecycle_hook": [],
				"instance_refresh":       [],
				"launch_configuration":   true,
				"launch_template":        [],
				"mixed_instances_policy": [],
				"name":                    true,
				"name_prefix":             true,
				"service_linked_role_arn": true,
				"tag": [
					{},
					{},
					{},
				],
				"termination_policies": [
					false,
				],
				"vpc_zone_identifier": [
					false,
					false,
					false,
				],
				"warm_pool": [],
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.nomad.module.clients",
		"name":           "autoscaling_group",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_autoscaling_group",
	},
	"module.nomad.module.clients.aws_iam_instance_profile.instance_profile": {
		"address": "module.nomad.module.clients.aws_iam_instance_profile.instance_profile",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"name_prefix": "strawb-client",
				"path":        "/",
				"tags":        null,
				"tags_all": {
					"Name": "StrawbTest",
				},
			},
			"after_unknown": {
				"arn":         true,
				"create_date": true,
				"id":          true,
				"name":        true,
				"role":        true,
				"tags_all":    {},
				"unique_id":   true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.nomad.module.clients",
		"name":           "instance_profile",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_instance_profile",
	},
	"module.nomad.module.clients.aws_iam_role.instance_role": {
		"address": "module.nomad.module.clients.aws_iam_role.instance_role",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"assume_role_policy":    "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
				"description":           null,
				"force_detach_policies": false,
				"max_session_duration":  3600,
				"name_prefix":           "strawb-client",
				"path":                  "/",
				"permissions_boundary":  null,
				"tags":                  null,
				"tags_all": {
					"Name": "StrawbTest",
				},
			},
			"after_unknown": {
				"arn":                 true,
				"create_date":         true,
				"id":                  true,
				"inline_policy":       true,
				"managed_policy_arns": true,
				"name":                true,
				"tags_all":            {},
				"unique_id":           true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.nomad.module.clients",
		"name":           "instance_role",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_role",
	},
	"module.nomad.module.clients.aws_launch_configuration.launch_configuration": {
		"address": "module.nomad.module.clients.aws_launch_configuration.launch_configuration",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"associate_public_ip_address": false,
				"ebs_optimized":               false,
				"enable_monitoring":           true,
				"ephemeral_block_device":      [],
				"image_id":                    "ami-0f5b77f5e53001306",
				"instance_type":               "t3.micro",
				"name_prefix":                 "strawb-client-",
				"placement_tenancy":           "default",
				"root_block_device": [
					{
						"delete_on_termination": true,
						"volume_size":           50,
						"volume_type":           "standard",
					},
				],
				"spot_price":                       null,
				"user_data":                        "26ba1752933a14e5a56d0ef439bbcdf8b5c0842c",
				"user_data_base64":                 null,
				"vpc_classic_link_id":              null,
				"vpc_classic_link_security_groups": null,
			},
			"after_unknown": {
				"arn":                    true,
				"ebs_block_device":       true,
				"ephemeral_block_device": [],
				"iam_instance_profile":   true,
				"id":               true,
				"key_name":         true,
				"metadata_options": true,
				"name":             true,
				"root_block_device": [
					{
						"encrypted":  true,
						"iops":       true,
						"throughput": true,
					},
				],
				"security_groups": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.nomad.module.clients",
		"name":           "launch_configuration",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_launch_configuration",
	},
	"module.nomad.module.clients.aws_security_group.lc_security_group": {
		"address": "module.nomad.module.clients.aws_security_group.lc_security_group",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description":            "Security group for the strawb-client launch configuration",
				"name_prefix":            "strawb-client",
				"revoke_rules_on_delete": false,
				"tags": null,
				"tags_all": {
					"Name": "StrawbTest",
				},
				"timeouts": null,
				"vpc_id":   "vpc-6b8dc203",
			},
			"after_unknown": {
				"arn":      true,
				"egress":   true,
				"id":       true,
				"ingress":  true,
				"name":     true,
				"owner_id": true,
				"tags_all": {},
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.nomad.module.clients",
		"name":           "lc_security_group",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group",
	},
	"module.nomad.module.clients.aws_security_group_rule.allow_all_outbound": {
		"address": "module.nomad.module.clients.aws_security_group_rule.allow_all_outbound",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      null,
				"from_port":        0,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "-1",
				"self":             false,
				"to_port":          0,
				"type":             "egress",
			},
			"after_unknown": {
				"cidr_blocks": [
					false,
				],
				"id":                       true,
				"security_group_id":        true,
				"source_security_group_id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.nomad.module.clients",
		"name":           "allow_all_outbound",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.nomad.module.clients.aws_security_group_rule.allow_ssh_inbound[0]": {
		"address": "module.nomad.module.clients.aws_security_group_rule.allow_ssh_inbound[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      null,
				"from_port":        22,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             false,
				"to_port":          22,
				"type":             "ingress",
			},
			"after_unknown": {
				"cidr_blocks": [
					false,
				],
				"id":                       true,
				"security_group_id":        true,
				"source_security_group_id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.nomad.module.clients",
		"name":           "allow_ssh_inbound",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.nomad.module.clients.module.security_group_rules.aws_security_group_rule.allow_http_inbound[0]": {
		"address": "module.nomad.module.clients.module.security_group_rules.aws_security_group_rule.allow_http_inbound[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      null,
				"from_port":        4646,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             false,
				"to_port":          4646,
				"type":             "ingress",
			},
			"after_unknown": {
				"cidr_blocks": [
					false,
				],
				"id":                       true,
				"security_group_id":        true,
				"source_security_group_id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.nomad.module.clients.module.security_group_rules",
		"name":           "allow_http_inbound",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.nomad.module.clients.module.security_group_rules.aws_security_group_rule.allow_rpc_inbound[0]": {
		"address": "module.nomad.module.clients.module.security_group_rules.aws_security_group_rule.allow_rpc_inbound[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      null,
				"from_port":        4647,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             false,
				"to_port":          4647,
				"type":             "ingress",
			},
			"after_unknown": {
				"cidr_blocks": [
					false,
				],
				"id":                       true,
				"security_group_id":        true,
				"source_security_group_id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.nomad.module.clients.module.security_group_rules",
		"name":           "allow_rpc_inbound",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.nomad.module.clients.module.security_group_rules.aws_security_group_rule.allow_serf_tcp_inbound[0]": {
		"address": "module.nomad.module.clients.module.security_group_rules.aws_security_group_rule.allow_serf_tcp_inbound[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      null,
				"from_port":        4648,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             false,
				"to_port":          4648,
				"type":             "ingress",
			},
			"after_unknown": {
				"cidr_blocks": [
					false,
				],
				"id":                       true,
				"security_group_id":        true,
				"source_security_group_id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.nomad.module.clients.module.security_group_rules",
		"name":           "allow_serf_tcp_inbound",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.nomad.module.clients.module.security_group_rules.aws_security_group_rule.allow_serf_udp_inbound[0]": {
		"address": "module.nomad.module.clients.module.security_group_rules.aws_security_group_rule.allow_serf_udp_inbound[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      null,
				"from_port":        4648,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "udp",
				"self":             false,
				"to_port":          4648,
				"type":             "ingress",
			},
			"after_unknown": {
				"cidr_blocks": [
					false,
				],
				"id":                       true,
				"security_group_id":        true,
				"source_security_group_id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.nomad.module.clients.module.security_group_rules",
		"name":           "allow_serf_udp_inbound",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.nomad.module.consul_iam_policies.aws_iam_role_policy.auto_discover_cluster[0]": {
		"address": "module.nomad.module.consul_iam_policies.aws_iam_role_policy.auto_discover_cluster[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"name":        "auto-discover-cluster",
				"name_prefix": null,
				"policy":      "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeTags\",\n        \"ec2:DescribeInstances\",\n        \"autoscaling:DescribeAutoScalingGroups\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
			},
			"after_unknown": {
				"id":   true,
				"role": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.nomad.module.consul_iam_policies",
		"name":           "auto_discover_cluster",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_role_policy",
	},
	"module.nomad.module.nomad_security_group_rules.aws_security_group_rule.allow_http_inbound[0]": {
		"address": "module.nomad.module.nomad_security_group_rules.aws_security_group_rule.allow_http_inbound[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      null,
				"from_port":        4646,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             false,
				"to_port":          4646,
				"type":             "ingress",
			},
			"after_unknown": {
				"cidr_blocks": [
					false,
				],
				"id":                       true,
				"security_group_id":        true,
				"source_security_group_id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.nomad.module.nomad_security_group_rules",
		"name":           "allow_http_inbound",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.nomad.module.nomad_security_group_rules.aws_security_group_rule.allow_rpc_inbound[0]": {
		"address": "module.nomad.module.nomad_security_group_rules.aws_security_group_rule.allow_rpc_inbound[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      null,
				"from_port":        4647,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             false,
				"to_port":          4647,
				"type":             "ingress",
			},
			"after_unknown": {
				"cidr_blocks": [
					false,
				],
				"id":                       true,
				"security_group_id":        true,
				"source_security_group_id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.nomad.module.nomad_security_group_rules",
		"name":           "allow_rpc_inbound",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.nomad.module.nomad_security_group_rules.aws_security_group_rule.allow_serf_tcp_inbound[0]": {
		"address": "module.nomad.module.nomad_security_group_rules.aws_security_group_rule.allow_serf_tcp_inbound[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      null,
				"from_port":        4648,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             false,
				"to_port":          4648,
				"type":             "ingress",
			},
			"after_unknown": {
				"cidr_blocks": [
					false,
				],
				"id":                       true,
				"security_group_id":        true,
				"source_security_group_id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.nomad.module.nomad_security_group_rules",
		"name":           "allow_serf_tcp_inbound",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.nomad.module.nomad_security_group_rules.aws_security_group_rule.allow_serf_udp_inbound[0]": {
		"address": "module.nomad.module.nomad_security_group_rules.aws_security_group_rule.allow_serf_udp_inbound[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      null,
				"from_port":        4648,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "udp",
				"self":             false,
				"to_port":          4648,
				"type":             "ingress",
			},
			"after_unknown": {
				"cidr_blocks": [
					false,
				],
				"id":                       true,
				"security_group_id":        true,
				"source_security_group_id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.nomad.module.nomad_security_group_rules",
		"name":           "allow_serf_udp_inbound",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.nomad.module.servers.aws_autoscaling_group.autoscaling_group": {
		"address": "module.nomad.module.servers.aws_autoscaling_group.autoscaling_group",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"capacity_rebalance":        null,
				"desired_capacity":          3,
				"enabled_metrics":           null,
				"force_delete":              false,
				"force_delete_warm_pool":    false,
				"health_check_grace_period": 300,
				"health_check_type":         "EC2",
				"initial_lifecycle_hook":    [],
				"instance_refresh":          [],
				"launch_template":           [],
				"load_balancers":            null,
				"max_instance_lifetime":     null,
				"max_size":                  3,
				"metrics_granularity":       "1Minute",
				"min_elb_capacity":          null,
				"min_size":                  3,
				"mixed_instances_policy":    [],
				"name_prefix":               "strawb-server",
				"placement_group":           null,
				"protect_from_scale_in":     false,
				"suspended_processes":       null,
				"tag": [],
				"tags": [
					{
						"key": "Environment",
						"propagate_at_launch": "true",
						"value":               "development",
					},
					{
						"key": "Name",
						"propagate_at_launch": "true",
						"value":               "strawb-server",
					},
					{
						"key": "nomad-servers",
						"propagate_at_launch": "true",
						"value":               "auto-join",
					},
				],
				"target_group_arns": null,
				"termination_policies": [
					"Default",
				],
				"timeouts": null,
				"vpc_zone_identifier": [
					"subnet-25bfee4c",
					"subnet-4fa23f35",
					"subnet-76f0533a",
				],
				"wait_for_capacity_timeout": "10m",
				"wait_for_elb_capacity":     null,
				"warm_pool":                 [],
			},
			"after_unknown": {
				"arn":                true,
				"availability_zones": true,
				"default_cooldown":   true,
				"id":                 true,
				"initial_lifecycle_hook": [],
				"instance_refresh":       [],
				"launch_configuration":   true,
				"launch_template":        [],
				"mixed_instances_policy": [],
				"name": true,
				"service_linked_role_arn": true,
				"tag": [],
				"tags": [
					{},
					{},
					{},
				],
				"termination_policies": [
					false,
				],
				"vpc_zone_identifier": [
					false,
					false,
					false,
				],
				"warm_pool": [],
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.nomad.module.servers",
		"name":           "autoscaling_group",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_autoscaling_group",
	},
	"module.nomad.module.servers.aws_iam_instance_profile.instance_profile[0]": {
		"address": "module.nomad.module.servers.aws_iam_instance_profile.instance_profile[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"name_prefix": "strawb-server",
				"path":        "/",
				"tags":        null,
				"tags_all": {
					"Name": "StrawbTest",
				},
			},
			"after_unknown": {
				"arn":         true,
				"create_date": true,
				"id":          true,
				"name":        true,
				"role":        true,
				"tags_all":    {},
				"unique_id":   true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.nomad.module.servers",
		"name":           "instance_profile",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_instance_profile",
	},
	"module.nomad.module.servers.aws_iam_role.instance_role[0]": {
		"address": "module.nomad.module.servers.aws_iam_role.instance_role[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"assume_role_policy":    "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
				"description":           null,
				"force_detach_policies": false,
				"max_session_duration":  3600,
				"name_prefix":           "strawb-server",
				"path":                  "/",
				"permissions_boundary":  null,
				"tags":                  null,
				"tags_all": {
					"Name": "StrawbTest",
				},
			},
			"after_unknown": {
				"arn":                 true,
				"create_date":         true,
				"id":                  true,
				"inline_policy":       true,
				"managed_policy_arns": true,
				"name":                true,
				"tags_all":            {},
				"unique_id":           true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.nomad.module.servers",
		"name":           "instance_role",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_role",
	},
	"module.nomad.module.servers.aws_launch_configuration.launch_configuration": {
		"address": "module.nomad.module.servers.aws_launch_configuration.launch_configuration",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"associate_public_ip_address": false,
				"ebs_optimized":               false,
				"enable_monitoring":           true,
				"ephemeral_block_device":      [],
				"image_id":                    "ami-0f5b77f5e53001306",
				"instance_type":               "t3.micro",
				"name_prefix":                 "strawb-server-",
				"placement_tenancy":           null,
				"root_block_device": [
					{
						"delete_on_termination": true,
						"volume_size":           50,
						"volume_type":           "standard",
					},
				],
				"spot_price":                       null,
				"user_data":                        "cd7b9085e976fe6d57aabd4053ec71dc2d4236ce",
				"user_data_base64":                 null,
				"vpc_classic_link_id":              null,
				"vpc_classic_link_security_groups": null,
			},
			"after_unknown": {
				"arn":                    true,
				"ebs_block_device":       true,
				"ephemeral_block_device": [],
				"iam_instance_profile":   true,
				"id":               true,
				"key_name":         true,
				"metadata_options": true,
				"name":             true,
				"root_block_device": [
					{
						"encrypted":  true,
						"iops":       true,
						"throughput": true,
					},
				],
				"security_groups": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.nomad.module.servers",
		"name":           "launch_configuration",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_launch_configuration",
	},
	"module.nomad.module.servers.aws_security_group.lc_security_group": {
		"address": "module.nomad.module.servers.aws_security_group.lc_security_group",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description":            "Security group for the strawb-server launch configuration",
				"name_prefix":            "strawb-server",
				"revoke_rules_on_delete": false,
				"tags": {
					"Name": "strawb-server",
				},
				"tags_all": {
					"Name": "strawb-server",
				},
				"timeouts": null,
				"vpc_id":   "vpc-6b8dc203",
			},
			"after_unknown": {
				"arn":      true,
				"egress":   true,
				"id":       true,
				"ingress":  true,
				"name":     true,
				"owner_id": true,
				"tags":     {},
				"tags_all": {},
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.nomad.module.servers",
		"name":           "lc_security_group",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group",
	},
	"module.nomad.module.servers.aws_security_group_rule.allow_all_outbound": {
		"address": "module.nomad.module.servers.aws_security_group_rule.allow_all_outbound",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      null,
				"from_port":        0,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "-1",
				"self":             false,
				"to_port":          0,
				"type":             "egress",
			},
			"after_unknown": {
				"cidr_blocks": [
					false,
				],
				"id":                       true,
				"security_group_id":        true,
				"source_security_group_id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.nomad.module.servers",
		"name":           "allow_all_outbound",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.nomad.module.servers.aws_security_group_rule.allow_ssh_inbound[0]": {
		"address": "module.nomad.module.servers.aws_security_group_rule.allow_ssh_inbound[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      null,
				"from_port":        22,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             false,
				"to_port":          22,
				"type":             "ingress",
			},
			"after_unknown": {
				"cidr_blocks": [
					false,
				],
				"id":                       true,
				"security_group_id":        true,
				"source_security_group_id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.nomad.module.servers",
		"name":           "allow_ssh_inbound",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.nomad.module.servers.module.iam_policies.aws_iam_role_policy.auto_discover_cluster[0]": {
		"address": "module.nomad.module.servers.module.iam_policies.aws_iam_role_policy.auto_discover_cluster[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"name":        "auto-discover-cluster",
				"name_prefix": null,
				"policy":      "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeTags\",\n        \"ec2:DescribeInstances\",\n        \"autoscaling:DescribeAutoScalingGroups\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
			},
			"after_unknown": {
				"id":   true,
				"role": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.nomad.module.servers.module.iam_policies",
		"name":           "auto_discover_cluster",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_iam_role_policy",
	},
	"module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_cli_rpc_inbound[0]": {
		"address": "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_cli_rpc_inbound[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      null,
				"from_port":        8400,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             false,
				"to_port":          8400,
				"type":             "ingress",
			},
			"after_unknown": {
				"cidr_blocks": [
					false,
				],
				"id":                       true,
				"security_group_id":        true,
				"source_security_group_id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.nomad.module.servers.module.security_group_rules",
		"name":           "allow_cli_rpc_inbound",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_cli_rpc_inbound_from_self": {
		"address": "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_cli_rpc_inbound_from_self",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"cidr_blocks":      null,
				"description":      null,
				"from_port":        8400,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             true,
				"to_port":          8400,
				"type":             "ingress",
			},
			"after_unknown": {
				"id":                       true,
				"security_group_id":        true,
				"source_security_group_id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.nomad.module.servers.module.security_group_rules",
		"name":           "allow_cli_rpc_inbound_from_self",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_dns_tcp_inbound[0]": {
		"address": "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_dns_tcp_inbound[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      null,
				"from_port":        8600,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             false,
				"to_port":          8600,
				"type":             "ingress",
			},
			"after_unknown": {
				"cidr_blocks": [
					false,
				],
				"id":                       true,
				"security_group_id":        true,
				"source_security_group_id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.nomad.module.servers.module.security_group_rules",
		"name":           "allow_dns_tcp_inbound",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_dns_tcp_inbound_from_self": {
		"address": "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_dns_tcp_inbound_from_self",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"cidr_blocks":      null,
				"description":      null,
				"from_port":        8600,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             true,
				"to_port":          8600,
				"type":             "ingress",
			},
			"after_unknown": {
				"id":                       true,
				"security_group_id":        true,
				"source_security_group_id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.nomad.module.servers.module.security_group_rules",
		"name":           "allow_dns_tcp_inbound_from_self",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_dns_udp_inbound[0]": {
		"address": "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_dns_udp_inbound[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      null,
				"from_port":        8600,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "udp",
				"self":             false,
				"to_port":          8600,
				"type":             "ingress",
			},
			"after_unknown": {
				"cidr_blocks": [
					false,
				],
				"id":                       true,
				"security_group_id":        true,
				"source_security_group_id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.nomad.module.servers.module.security_group_rules",
		"name":           "allow_dns_udp_inbound",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_dns_udp_inbound_from_self": {
		"address": "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_dns_udp_inbound_from_self",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"cidr_blocks":      null,
				"description":      null,
				"from_port":        8600,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "udp",
				"self":             true,
				"to_port":          8600,
				"type":             "ingress",
			},
			"after_unknown": {
				"id":                       true,
				"security_group_id":        true,
				"source_security_group_id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.nomad.module.servers.module.security_group_rules",
		"name":           "allow_dns_udp_inbound_from_self",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_http_api_inbound[0]": {
		"address": "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_http_api_inbound[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      null,
				"from_port":        8500,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             false,
				"to_port":          8500,
				"type":             "ingress",
			},
			"after_unknown": {
				"cidr_blocks": [
					false,
				],
				"id":                       true,
				"security_group_id":        true,
				"source_security_group_id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.nomad.module.servers.module.security_group_rules",
		"name":           "allow_http_api_inbound",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_http_api_inbound_from_self": {
		"address": "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_http_api_inbound_from_self",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"cidr_blocks":      null,
				"description":      null,
				"from_port":        8500,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             true,
				"to_port":          8500,
				"type":             "ingress",
			},
			"after_unknown": {
				"id":                       true,
				"security_group_id":        true,
				"source_security_group_id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.nomad.module.servers.module.security_group_rules",
		"name":           "allow_http_api_inbound_from_self",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_serf_wan_tcp_inbound[0]": {
		"address": "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_serf_wan_tcp_inbound[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      null,
				"from_port":        8302,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             false,
				"to_port":          8302,
				"type":             "ingress",
			},
			"after_unknown": {
				"cidr_blocks": [
					false,
				],
				"id":                       true,
				"security_group_id":        true,
				"source_security_group_id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.nomad.module.servers.module.security_group_rules",
		"name":           "allow_serf_wan_tcp_inbound",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_serf_wan_tcp_inbound_from_self": {
		"address": "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_serf_wan_tcp_inbound_from_self",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"cidr_blocks":      null,
				"description":      null,
				"from_port":        8302,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             true,
				"to_port":          8302,
				"type":             "ingress",
			},
			"after_unknown": {
				"id":                       true,
				"security_group_id":        true,
				"source_security_group_id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.nomad.module.servers.module.security_group_rules",
		"name":           "allow_serf_wan_tcp_inbound_from_self",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_serf_wan_udp_inbound[0]": {
		"address": "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_serf_wan_udp_inbound[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      null,
				"from_port":        8302,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "udp",
				"self":             false,
				"to_port":          8302,
				"type":             "ingress",
			},
			"after_unknown": {
				"cidr_blocks": [
					false,
				],
				"id":                       true,
				"security_group_id":        true,
				"source_security_group_id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.nomad.module.servers.module.security_group_rules",
		"name":           "allow_serf_wan_udp_inbound",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_serf_wan_udp_inbound_from_self": {
		"address": "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_serf_wan_udp_inbound_from_self",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"cidr_blocks":      null,
				"description":      null,
				"from_port":        8302,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "udp",
				"self":             true,
				"to_port":          8302,
				"type":             "ingress",
			},
			"after_unknown": {
				"id":                       true,
				"security_group_id":        true,
				"source_security_group_id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.nomad.module.servers.module.security_group_rules",
		"name":           "allow_serf_wan_udp_inbound_from_self",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_server_rpc_inbound[0]": {
		"address": "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_server_rpc_inbound[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      null,
				"from_port":        8300,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             false,
				"to_port":          8300,
				"type":             "ingress",
			},
			"after_unknown": {
				"cidr_blocks": [
					false,
				],
				"id":                       true,
				"security_group_id":        true,
				"source_security_group_id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.nomad.module.servers.module.security_group_rules",
		"name":           "allow_server_rpc_inbound",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_server_rpc_inbound_from_self": {
		"address": "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_server_rpc_inbound_from_self",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"cidr_blocks":      null,
				"description":      null,
				"from_port":        8300,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             true,
				"to_port":          8300,
				"type":             "ingress",
			},
			"after_unknown": {
				"id":                       true,
				"security_group_id":        true,
				"source_security_group_id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.nomad.module.servers.module.security_group_rules",
		"name":           "allow_server_rpc_inbound_from_self",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.nomad.module.servers.module.security_group_rules.module.client_security_group_rules.aws_security_group_rule.allow_serf_lan_tcp_inbound[0]": {
		"address": "module.nomad.module.servers.module.security_group_rules.module.client_security_group_rules.aws_security_group_rule.allow_serf_lan_tcp_inbound[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      null,
				"from_port":        8301,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             false,
				"to_port":          8301,
				"type":             "ingress",
			},
			"after_unknown": {
				"cidr_blocks": [
					false,
				],
				"id":                       true,
				"security_group_id":        true,
				"source_security_group_id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.nomad.module.servers.module.security_group_rules.module.client_security_group_rules",
		"name":           "allow_serf_lan_tcp_inbound",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.nomad.module.servers.module.security_group_rules.module.client_security_group_rules.aws_security_group_rule.allow_serf_lan_tcp_inbound_from_self": {
		"address": "module.nomad.module.servers.module.security_group_rules.module.client_security_group_rules.aws_security_group_rule.allow_serf_lan_tcp_inbound_from_self",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"cidr_blocks":      null,
				"description":      null,
				"from_port":        8301,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "tcp",
				"self":             true,
				"to_port":          8301,
				"type":             "ingress",
			},
			"after_unknown": {
				"id":                       true,
				"security_group_id":        true,
				"source_security_group_id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.nomad.module.servers.module.security_group_rules.module.client_security_group_rules",
		"name":           "allow_serf_lan_tcp_inbound_from_self",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.nomad.module.servers.module.security_group_rules.module.client_security_group_rules.aws_security_group_rule.allow_serf_lan_udp_inbound[0]": {
		"address": "module.nomad.module.servers.module.security_group_rules.module.client_security_group_rules.aws_security_group_rule.allow_serf_lan_udp_inbound[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"cidr_blocks": [
					"0.0.0.0/0",
				],
				"description":      null,
				"from_port":        8301,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "udp",
				"self":             false,
				"to_port":          8301,
				"type":             "ingress",
			},
			"after_unknown": {
				"cidr_blocks": [
					false,
				],
				"id":                       true,
				"security_group_id":        true,
				"source_security_group_id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.nomad.module.servers.module.security_group_rules.module.client_security_group_rules",
		"name":           "allow_serf_lan_udp_inbound",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
	"module.nomad.module.servers.module.security_group_rules.module.client_security_group_rules.aws_security_group_rule.allow_serf_lan_udp_inbound_from_self": {
		"address": "module.nomad.module.servers.module.security_group_rules.module.client_security_group_rules.aws_security_group_rule.allow_serf_lan_udp_inbound_from_self",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"cidr_blocks":      null,
				"description":      null,
				"from_port":        8301,
				"ipv6_cidr_blocks": null,
				"prefix_list_ids":  null,
				"protocol":         "udp",
				"self":             true,
				"to_port":          8301,
				"type":             "ingress",
			},
			"after_unknown": {
				"id":                       true,
				"security_group_id":        true,
				"source_security_group_id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.nomad.module.servers.module.security_group_rules.module.client_security_group_rules",
		"name":           "allow_serf_lan_udp_inbound_from_self",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group_rule",
	},
}

output_changes = {}

raw = {
	"configuration": {
		"provider_config": {
			"aws": {
				"expressions": {
					"default_tags": [
						{
							"tags": {
								"constant_value": {
									"Name": "StrawbTest",
								},
							},
						},
					],
					"region": {
						"constant_value": "eu-west-2",
					},
				},
				"name": "aws",
			},
		},
		"root_module": {
			"module_calls": {
				"nomad": {
					"expressions": {
						"cluster_name": {
							"constant_value": "strawb",
						},
						"instance_type": {
							"constant_value": "t3.micro",
						},
						"num_clients": {
							"constant_value": 1,
						},
						"num_servers": {
							"constant_value": 3,
						},
						"server_instance_type": {
							"constant_value": "t3.micro",
						},
					},
					"module": {
						"module_calls": {
							"clients": {
								"expressions": {
									"allowed_inbound_cidr_blocks": {
										"constant_value": [
											"0.0.0.0/0",
										],
									},
									"allowed_ssh_cidr_blocks": {
										"constant_value": [
											"0.0.0.0/0",
										],
									},
									"ami_id": {
										"references": [
											"var.ami_id",
											"data.aws_ami.nomad_consul.image_id",
											"data.aws_ami.nomad_consul",
											"var.ami_id",
										],
									},
									"cluster_name": {
										"references": [
											"var.cluster_name",
										],
									},
									"cluster_tag_key": {
										"constant_value": "nomad-clients",
									},
									"cluster_tag_value": {
										"references": [
											"var.cluster_name",
										],
									},
									"desired_capacity": {
										"references": [
											"var.num_clients",
										],
									},
									"instance_type": {
										"references": [
											"var.instance_type",
										],
									},
									"max_size": {
										"references": [
											"var.num_clients",
										],
									},
									"min_size": {
										"references": [
											"var.num_clients",
										],
									},
									"ssh_key_name": {
										"references": [
											"var.ssh_key_name",
										],
									},
									"subnet_ids": {
										"references": [
											"data.aws_subnet_ids.default.ids",
											"data.aws_subnet_ids.default",
										],
									},
									"tags": {
										"constant_value": [
											{
												"key": "Environment",
												"propagate_at_launch": true,
												"value":               "development",
											},
										],
									},
									"user_data": {
										"references": [
											"data.template_file.user_data_client.rendered",
											"data.template_file.user_data_client",
										],
									},
									"vpc_id": {
										"references": [
											"data.aws_vpc.default.id",
											"data.aws_vpc.default",
										],
									},
								},
								"module": {
									"module_calls": {
										"security_group_rules": {
											"expressions": {
												"allowed_inbound_cidr_blocks": {
													"references": [
														"var.allowed_inbound_cidr_blocks",
													],
												},
												"http_port": {
													"references": [
														"var.http_port",
													],
												},
												"rpc_port": {
													"references": [
														"var.rpc_port",
													],
												},
												"security_group_id": {
													"references": [
														"aws_security_group.lc_security_group.id",
														"aws_security_group.lc_security_group",
													],
												},
												"serf_port": {
													"references": [
														"var.serf_port",
													],
												},
											},
											"module": {
												"resources": [
													{
														"address": "aws_security_group_rule.allow_http_inbound",
														"count_expression": {
															"references": [
																"var.allowed_inbound_cidr_blocks",
															],
														},
														"expressions": {
															"cidr_blocks": {
																"references": [
																	"var.allowed_inbound_cidr_blocks",
																],
															},
															"from_port": {
																"references": [
																	"var.http_port",
																],
															},
															"protocol": {
																"constant_value": "tcp",
															},
															"security_group_id": {
																"references": [
																	"var.security_group_id",
																],
															},
															"to_port": {
																"references": [
																	"var.http_port",
																],
															},
															"type": {
																"constant_value": "ingress",
															},
														},
														"mode":                "managed",
														"name":                "allow_http_inbound",
														"provider_config_key": "security_group_rules:aws",
														"schema_version":      2,
														"type":                "aws_security_group_rule",
													},
													{
														"address": "aws_security_group_rule.allow_rpc_inbound",
														"count_expression": {
															"references": [
																"var.allowed_inbound_cidr_blocks",
															],
														},
														"expressions": {
															"cidr_blocks": {
																"references": [
																	"var.allowed_inbound_cidr_blocks",
																],
															},
															"from_port": {
																"references": [
																	"var.rpc_port",
																],
															},
															"protocol": {
																"constant_value": "tcp",
															},
															"security_group_id": {
																"references": [
																	"var.security_group_id",
																],
															},
															"to_port": {
																"references": [
																	"var.rpc_port",
																],
															},
															"type": {
																"constant_value": "ingress",
															},
														},
														"mode":                "managed",
														"name":                "allow_rpc_inbound",
														"provider_config_key": "security_group_rules:aws",
														"schema_version":      2,
														"type":                "aws_security_group_rule",
													},
													{
														"address": "aws_security_group_rule.allow_serf_tcp_inbound",
														"count_expression": {
															"references": [
																"var.allowed_inbound_cidr_blocks",
															],
														},
														"expressions": {
															"cidr_blocks": {
																"references": [
																	"var.allowed_inbound_cidr_blocks",
																],
															},
															"from_port": {
																"references": [
																	"var.serf_port",
																],
															},
															"protocol": {
																"constant_value": "tcp",
															},
															"security_group_id": {
																"references": [
																	"var.security_group_id",
																],
															},
															"to_port": {
																"references": [
																	"var.serf_port",
																],
															},
															"type": {
																"constant_value": "ingress",
															},
														},
														"mode":                "managed",
														"name":                "allow_serf_tcp_inbound",
														"provider_config_key": "security_group_rules:aws",
														"schema_version":      2,
														"type":                "aws_security_group_rule",
													},
													{
														"address": "aws_security_group_rule.allow_serf_udp_inbound",
														"count_expression": {
															"references": [
																"var.allowed_inbound_cidr_blocks",
															],
														},
														"expressions": {
															"cidr_blocks": {
																"references": [
																	"var.allowed_inbound_cidr_blocks",
																],
															},
															"from_port": {
																"references": [
																	"var.serf_port",
																],
															},
															"protocol": {
																"constant_value": "udp",
															},
															"security_group_id": {
																"references": [
																	"var.security_group_id",
																],
															},
															"to_port": {
																"references": [
																	"var.serf_port",
																],
															},
															"type": {
																"constant_value": "ingress",
															},
														},
														"mode":                "managed",
														"name":                "allow_serf_udp_inbound",
														"provider_config_key": "security_group_rules:aws",
														"schema_version":      2,
														"type":                "aws_security_group_rule",
													},
												],
												"variables": {
													"allowed_inbound_cidr_blocks": {
														"description": "A list of CIDR-formatted IP address ranges from which the EC2 Instances will allow connections to Nomad",
													},
													"http_port": {
														"default":     4646,
														"description": "The port to use for HTTP",
													},
													"rpc_port": {
														"default":     4647,
														"description": "The port to use for RPC",
													},
													"security_group_id": {
														"description": "The ID of the security group to which we should add the Nomad security group rules",
													},
													"serf_port": {
														"default":     4648,
														"description": "The port to use for Serf",
													},
												},
											},
											"source": "../nomad-security-group-rules",
										},
									},
									"outputs": {
										"asg_name": {
											"expression": {
												"references": [
													"aws_autoscaling_group.autoscaling_group.name",
													"aws_autoscaling_group.autoscaling_group",
												],
											},
										},
										"cluster_size": {
											"expression": {
												"references": [
													"aws_autoscaling_group.autoscaling_group.desired_capacity",
													"aws_autoscaling_group.autoscaling_group",
												],
											},
										},
										"cluster_tag_key": {
											"expression": {
												"references": [
													"var.cluster_tag_key",
												],
											},
										},
										"cluster_tag_value": {
											"expression": {
												"references": [
													"var.cluster_tag_value",
												],
											},
										},
										"iam_instance_profile_arn": {
											"expression": {
												"references": [
													"aws_iam_instance_profile.instance_profile.arn",
													"aws_iam_instance_profile.instance_profile",
												],
											},
										},
										"iam_instance_profile_id": {
											"expression": {
												"references": [
													"aws_iam_instance_profile.instance_profile.id",
													"aws_iam_instance_profile.instance_profile",
												],
											},
										},
										"iam_instance_profile_name": {
											"expression": {
												"references": [
													"aws_iam_instance_profile.instance_profile.name",
													"aws_iam_instance_profile.instance_profile",
												],
											},
										},
										"iam_role_arn": {
											"expression": {
												"references": [
													"aws_iam_role.instance_role.arn",
													"aws_iam_role.instance_role",
												],
											},
										},
										"iam_role_id": {
											"expression": {
												"references": [
													"aws_iam_role.instance_role.id",
													"aws_iam_role.instance_role",
												],
											},
										},
										"launch_config_name": {
											"expression": {
												"references": [
													"aws_launch_configuration.launch_configuration.name",
													"aws_launch_configuration.launch_configuration",
												],
											},
										},
										"security_group_id": {
											"expression": {
												"references": [
													"aws_security_group.lc_security_group.id",
													"aws_security_group.lc_security_group",
												],
											},
										},
									},
									"resources": [
										{
											"address": "aws_autoscaling_group.autoscaling_group",
											"expressions": {
												"availability_zones": {
													"references": [
														"var.availability_zones",
													],
												},
												"desired_capacity": {
													"references": [
														"var.desired_capacity",
													],
												},
												"health_check_grace_period": {
													"references": [
														"var.health_check_grace_period",
													],
												},
												"health_check_type": {
													"references": [
														"var.health_check_type",
													],
												},
												"launch_configuration": {
													"references": [
														"aws_launch_configuration.launch_configuration.name",
														"aws_launch_configuration.launch_configuration",
													],
												},
												"max_size": {
													"references": [
														"var.max_size",
													],
												},
												"min_size": {
													"references": [
														"var.min_size",
													],
												},
												"name": {
													"references": [
														"var.asg_name",
													],
												},
												"protect_from_scale_in": {
													"references": [
														"var.protect_from_scale_in",
													],
												},
												"tag": [
													{
														"key": {
															"constant_value": "Name",
														},
														"propagate_at_launch": {
															"constant_value": true,
														},
														"value": {
															"references": [
																"var.cluster_name",
															],
														},
													},
													{
														"key": {
															"references": [
																"var.cluster_tag_key",
															],
														},
														"propagate_at_launch": {
															"constant_value": true,
														},
														"value": {
															"references": [
																"var.cluster_tag_value",
															],
														},
													},
												],
												"termination_policies": {
													"references": [
														"var.termination_policies",
													],
												},
												"vpc_zone_identifier": {
													"references": [
														"var.subnet_ids",
													],
												},
												"wait_for_capacity_timeout": {
													"references": [
														"var.wait_for_capacity_timeout",
													],
												},
											},
											"mode":                "managed",
											"name":                "autoscaling_group",
											"provider_config_key": "clients:aws",
											"schema_version":      0,
											"type":                "aws_autoscaling_group",
										},
										{
											"address": "aws_iam_instance_profile.instance_profile",
											"expressions": {
												"name_prefix": {
													"references": [
														"var.cluster_name",
													],
												},
												"path": {
													"references": [
														"var.instance_profile_path",
													],
												},
												"role": {
													"references": [
														"aws_iam_role.instance_role.name",
														"aws_iam_role.instance_role",
													],
												},
											},
											"mode":                "managed",
											"name":                "instance_profile",
											"provider_config_key": "clients:aws",
											"schema_version":      0,
											"type":                "aws_iam_instance_profile",
										},
										{
											"address": "aws_iam_role.instance_role",
											"expressions": {
												"assume_role_policy": {
													"references": [
														"data.aws_iam_policy_document.instance_role.json",
														"data.aws_iam_policy_document.instance_role",
													],
												},
												"name_prefix": {
													"references": [
														"var.cluster_name",
													],
												},
												"permissions_boundary": {
													"references": [
														"var.iam_permissions_boundary",
													],
												},
											},
											"mode":                "managed",
											"name":                "instance_role",
											"provider_config_key": "clients:aws",
											"schema_version":      0,
											"type":                "aws_iam_role",
										},
										{
											"address": "aws_launch_configuration.launch_configuration",
											"expressions": {
												"associate_public_ip_address": {
													"references": [
														"var.associate_public_ip_address",
													],
												},
												"ebs_optimized": {
													"references": [
														"var.root_volume_ebs_optimized",
													],
												},
												"iam_instance_profile": {
													"references": [
														"aws_iam_instance_profile.instance_profile.name",
														"aws_iam_instance_profile.instance_profile",
													],
												},
												"image_id": {
													"references": [
														"var.ami_id",
													],
												},
												"instance_type": {
													"references": [
														"var.instance_type",
													],
												},
												"key_name": {
													"references": [
														"var.ssh_key_name",
													],
												},
												"name_prefix": {
													"references": [
														"var.cluster_name",
													],
												},
												"placement_tenancy": {
													"references": [
														"var.tenancy",
													],
												},
												"root_block_device": [
													{
														"delete_on_termination": {
															"references": [
																"var.root_volume_delete_on_termination",
															],
														},
														"volume_size": {
															"references": [
																"var.root_volume_size",
															],
														},
														"volume_type": {
															"references": [
																"var.root_volume_type",
															],
														},
													},
												],
												"security_groups": {
													"references": [
														"aws_security_group.lc_security_group.id",
														"aws_security_group.lc_security_group",
														"var.security_groups",
													],
												},
												"user_data": {
													"references": [
														"var.user_data",
													],
												},
											},
											"mode":                "managed",
											"name":                "launch_configuration",
											"provider_config_key": "clients:aws",
											"schema_version":      0,
											"type":                "aws_launch_configuration",
										},
										{
											"address": "aws_security_group.lc_security_group",
											"expressions": {
												"description": {
													"references": [
														"var.cluster_name",
													],
												},
												"name_prefix": {
													"references": [
														"var.cluster_name",
													],
												},
												"vpc_id": {
													"references": [
														"var.vpc_id",
													],
												},
											},
											"mode":                "managed",
											"name":                "lc_security_group",
											"provider_config_key": "clients:aws",
											"schema_version":      1,
											"type":                "aws_security_group",
										},
										{
											"address": "aws_security_group_rule.allow_all_outbound",
											"expressions": {
												"cidr_blocks": {
													"references": [
														"var.allow_outbound_cidr_blocks",
													],
												},
												"from_port": {
													"constant_value": 0,
												},
												"protocol": {
													"constant_value": "-1",
												},
												"security_group_id": {
													"references": [
														"aws_security_group.lc_security_group.id",
														"aws_security_group.lc_security_group",
													],
												},
												"to_port": {
													"constant_value": 0,
												},
												"type": {
													"constant_value": "egress",
												},
											},
											"mode":                "managed",
											"name":                "allow_all_outbound",
											"provider_config_key": "clients:aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.allow_ssh_inbound",
											"count_expression": {
												"references": [
													"var.allowed_ssh_cidr_blocks",
												],
											},
											"expressions": {
												"cidr_blocks": {
													"references": [
														"var.allowed_ssh_cidr_blocks",
													],
												},
												"from_port": {
													"references": [
														"var.ssh_port",
													],
												},
												"protocol": {
													"constant_value": "tcp",
												},
												"security_group_id": {
													"references": [
														"aws_security_group.lc_security_group.id",
														"aws_security_group.lc_security_group",
													],
												},
												"to_port": {
													"references": [
														"var.ssh_port",
													],
												},
												"type": {
													"constant_value": "ingress",
												},
											},
											"mode":                "managed",
											"name":                "allow_ssh_inbound",
											"provider_config_key": "clients:aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "data.aws_iam_policy_document.instance_role",
											"expressions": {
												"statement": [
													{
														"actions": {
															"constant_value": [
																"sts:AssumeRole",
															],
														},
														"effect": {
															"constant_value": "Allow",
														},
														"principals": [
															{
																"identifiers": {
																	"constant_value": [
																		"ec2.amazonaws.com",
																	],
																},
																"type": {
																	"constant_value": "Service",
																},
															},
														],
													},
												],
											},
											"mode":                "data",
											"name":                "instance_role",
											"provider_config_key": "clients:aws",
											"schema_version":      0,
											"type":                "aws_iam_policy_document",
										},
									],
									"variables": {
										"allow_outbound_cidr_blocks": {
											"default": [
												"0.0.0.0/0",
											],
											"description": "Allow outbound traffic to these CIDR blocks.",
										},
										"allowed_inbound_cidr_blocks": {
											"description": "A list of CIDR-formatted IP address ranges from which the EC2 Instances will allow connections to Nomad",
										},
										"allowed_ssh_cidr_blocks": {
											"default":     [],
											"description": "A list of CIDR-formatted IP address ranges from which the EC2 Instances will allow SSH connections",
										},
										"ami_id": {
											"description": "The ID of the AMI to run in this cluster. Should be an AMI that had Nomad installed and configured by the install-nomad module.",
										},
										"asg_name": {
											"default":     "",
											"description": "The name to use for the Auto Scaling Group",
										},
										"associate_public_ip_address": {
											"default":     false,
											"description": "If set to true, associate a public IP address with each EC2 Instance in the cluster.",
										},
										"availability_zones": {
											"description": "The availability zones into which the EC2 Instances should be deployed. We recommend one availability zone per node in the cluster_size variable. At least one of var.subnet_ids or var.availability_zones must be non-empty.",
										},
										"cluster_name": {
											"description": "The name of the Nomad cluster (e.g. nomad-servers-stage). This variable is used to namespace all resources created by this module.",
										},
										"cluster_tag_key": {
											"default":     "nomad-servers",
											"description": "Add a tag with this key and the value var.cluster_tag_value to each Instance in the ASG.",
										},
										"cluster_tag_value": {
											"default":     "auto-join",
											"description": "Add a tag with key var.cluster_tag_key and this value to each Instance in the ASG. This can be used to automatically find other Consul nodes and form a cluster.",
										},
										"desired_capacity": {
											"description": "The desired number of nodes to have in the cluster. If you're using this to run Nomad servers, we strongly recommend setting this to 3 or 5.",
										},
										"ebs_block_devices": {
											"default":     [],
											"description": "List of ebs volume definitions for those ebs_volumes that should be added to the instances created with the EC2 launch-configuration. Each element in the list is a map containing keys defined for ebs_block_device (see: https://www.terraform.io/docs/providers/aws/r/launch_configuration.html#ebs_block_device.",
										},
										"health_check_grace_period": {
											"default":     300,
											"description": "Time, in seconds, after instance comes into service before checking health.",
										},
										"health_check_type": {
											"default":     "EC2",
											"description": "Controls how health checking is done. Must be one of EC2 or ELB.",
										},
										"http_port": {
											"default":     4646,
											"description": "The port to use for HTTP",
										},
										"iam_permissions_boundary": {
											"description": "If set, restricts the created IAM role to the given permissions boundary",
										},
										"instance_profile_path": {
											"default":     "/",
											"description": "Path in which to create the IAM instance profile.",
										},
										"instance_type": {
											"description": "The type of EC2 Instances to run for each node in the cluster (e.g. t2.micro).",
										},
										"max_size": {
											"description": "The maximum number of nodes to have in the cluster. If you're using this to run Nomad servers, we strongly recommend setting this to 3 or 5.",
										},
										"min_size": {
											"description": "The minimum number of nodes to have in the cluster. If you're using this to run Nomad servers, we strongly recommend setting this to 3 or 5.",
										},
										"protect_from_scale_in": {
											"default":     false,
											"description": "(Optional) Allows setting instance protection. The autoscaling group will not select instances with this setting for termination during scale in events.",
										},
										"root_volume_delete_on_termination": {
											"default":     true,
											"description": "Whether the volume should be destroyed on instance termination.",
										},
										"root_volume_ebs_optimized": {
											"default":     false,
											"description": "If true, the launched EC2 instance will be EBS-optimized.",
										},
										"root_volume_size": {
											"default":     50,
											"description": "The size, in GB, of the root EBS volume.",
										},
										"root_volume_type": {
											"default":     "standard",
											"description": "The type of volume. Must be one of: standard, gp2, or io1.",
										},
										"rpc_port": {
											"default":     4647,
											"description": "The port to use for RPC",
										},
										"security_groups": {
											"default":     [],
											"description": "Additional security groups to attach to the EC2 instances",
										},
										"serf_port": {
											"default":     4648,
											"description": "The port to use for Serf",
										},
										"ssh_key_name": {
											"default":     "",
											"description": "The name of an EC2 Key Pair that can be used to SSH to the EC2 Instances in this cluster. Set to an empty string to not associate a Key Pair.",
										},
										"ssh_port": {
											"default":     22,
											"description": "The port used for SSH connections",
										},
										"subnet_ids": {
											"description": "The subnet IDs into which the EC2 Instances should be deployed. We recommend one subnet ID per node in the cluster_size variable. At least one of var.subnet_ids or var.availability_zones must be non-empty.",
										},
										"tags": {
											"default":     [],
											"description": "List of extra tag blocks added to the autoscaling group configuration. Each element in the list is a map containing keys 'key', 'value', and 'propagate_at_launch' mapped to the respective values.",
										},
										"tenancy": {
											"default":     "default",
											"description": "The tenancy of the instance. Must be one of: default or dedicated.",
										},
										"termination_policies": {
											"default":     "Default",
											"description": "A list of policies to decide how the instances in the auto scale group should be terminated. The allowed values are OldestInstance, NewestInstance, OldestLaunchConfiguration, ClosestToNextInstanceHour, Default.",
										},
										"user_data": {
											"description": "A User Data script to execute while the server is booting. We remmend passing in a bash script that executes the run-nomad script, which should have been installed in the AMI by the install-nomad module.",
										},
										"vpc_id": {
											"description": "The ID of the VPC in which to deploy the cluster",
										},
										"wait_for_capacity_timeout": {
											"default":     "10m",
											"description": "A maximum duration that Terraform should wait for ASG instances to be healthy before timing out. Setting this to '0' causes Terraform to skip all Capacity Waiting behavior.",
										},
									},
								},
								"source": "./modules/nomad-cluster",
							},
							"consul_iam_policies": {
								"expressions": {
									"iam_role_id": {
										"references": [
											"module.clients.iam_role_id",
											"module.clients",
										],
									},
								},
								"module": {
									"resources": [
										{
											"address": "aws_iam_role_policy.auto_discover_cluster",
											"count_expression": {
												"references": [
													"var.enabled",
												],
											},
											"expressions": {
												"name": {
													"constant_value": "auto-discover-cluster",
												},
												"policy": {
													"references": [
														"data.aws_iam_policy_document.auto_discover_cluster.json",
														"data.aws_iam_policy_document.auto_discover_cluster",
													],
												},
												"role": {
													"references": [
														"var.iam_role_id",
													],
												},
											},
											"mode":                "managed",
											"name":                "auto_discover_cluster",
											"provider_config_key": "consul_iam_policies:aws",
											"schema_version":      0,
											"type":                "aws_iam_role_policy",
										},
										{
											"address": "data.aws_iam_policy_document.auto_discover_cluster",
											"expressions": {
												"statement": [
													{
														"actions": {
															"constant_value": [
																"ec2:DescribeInstances",
																"ec2:DescribeTags",
																"autoscaling:DescribeAutoScalingGroups",
															],
														},
														"effect": {
															"constant_value": "Allow",
														},
														"resources": {
															"constant_value": [
																"*",
															],
														},
													},
												],
											},
											"mode":                "data",
											"name":                "auto_discover_cluster",
											"provider_config_key": "consul_iam_policies:aws",
											"schema_version":      0,
											"type":                "aws_iam_policy_document",
										},
									],
									"variables": {
										"enabled": {
											"default":     true,
											"description": "Give the option to disable this module if required",
										},
										"iam_role_id": {
											"description": "The ID of the IAM Role to which these IAM policies should be attached",
										},
									},
								},
								"source": "github.com/hashicorp/terraform-aws-consul//modules/consul-iam-policies?ref=v0.8.0",
							},
							"nomad_security_group_rules": {
								"expressions": {
									"allowed_inbound_cidr_blocks": {
										"constant_value": [
											"0.0.0.0/0",
										],
									},
									"security_group_id": {
										"references": [
											"module.servers.security_group_id",
											"module.servers",
										],
									},
								},
								"module": {
									"resources": [
										{
											"address": "aws_security_group_rule.allow_http_inbound",
											"count_expression": {
												"references": [
													"var.allowed_inbound_cidr_blocks",
												],
											},
											"expressions": {
												"cidr_blocks": {
													"references": [
														"var.allowed_inbound_cidr_blocks",
													],
												},
												"from_port": {
													"references": [
														"var.http_port",
													],
												},
												"protocol": {
													"constant_value": "tcp",
												},
												"security_group_id": {
													"references": [
														"var.security_group_id",
													],
												},
												"to_port": {
													"references": [
														"var.http_port",
													],
												},
												"type": {
													"constant_value": "ingress",
												},
											},
											"mode":                "managed",
											"name":                "allow_http_inbound",
											"provider_config_key": "nomad_security_group_rules:aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.allow_rpc_inbound",
											"count_expression": {
												"references": [
													"var.allowed_inbound_cidr_blocks",
												],
											},
											"expressions": {
												"cidr_blocks": {
													"references": [
														"var.allowed_inbound_cidr_blocks",
													],
												},
												"from_port": {
													"references": [
														"var.rpc_port",
													],
												},
												"protocol": {
													"constant_value": "tcp",
												},
												"security_group_id": {
													"references": [
														"var.security_group_id",
													],
												},
												"to_port": {
													"references": [
														"var.rpc_port",
													],
												},
												"type": {
													"constant_value": "ingress",
												},
											},
											"mode":                "managed",
											"name":                "allow_rpc_inbound",
											"provider_config_key": "nomad_security_group_rules:aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.allow_serf_tcp_inbound",
											"count_expression": {
												"references": [
													"var.allowed_inbound_cidr_blocks",
												],
											},
											"expressions": {
												"cidr_blocks": {
													"references": [
														"var.allowed_inbound_cidr_blocks",
													],
												},
												"from_port": {
													"references": [
														"var.serf_port",
													],
												},
												"protocol": {
													"constant_value": "tcp",
												},
												"security_group_id": {
													"references": [
														"var.security_group_id",
													],
												},
												"to_port": {
													"references": [
														"var.serf_port",
													],
												},
												"type": {
													"constant_value": "ingress",
												},
											},
											"mode":                "managed",
											"name":                "allow_serf_tcp_inbound",
											"provider_config_key": "nomad_security_group_rules:aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.allow_serf_udp_inbound",
											"count_expression": {
												"references": [
													"var.allowed_inbound_cidr_blocks",
												],
											},
											"expressions": {
												"cidr_blocks": {
													"references": [
														"var.allowed_inbound_cidr_blocks",
													],
												},
												"from_port": {
													"references": [
														"var.serf_port",
													],
												},
												"protocol": {
													"constant_value": "udp",
												},
												"security_group_id": {
													"references": [
														"var.security_group_id",
													],
												},
												"to_port": {
													"references": [
														"var.serf_port",
													],
												},
												"type": {
													"constant_value": "ingress",
												},
											},
											"mode":                "managed",
											"name":                "allow_serf_udp_inbound",
											"provider_config_key": "nomad_security_group_rules:aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
									],
									"variables": {
										"allowed_inbound_cidr_blocks": {
											"description": "A list of CIDR-formatted IP address ranges from which the EC2 Instances will allow connections to Nomad",
										},
										"http_port": {
											"default":     4646,
											"description": "The port to use for HTTP",
										},
										"rpc_port": {
											"default":     4647,
											"description": "The port to use for RPC",
										},
										"security_group_id": {
											"description": "The ID of the security group to which we should add the Nomad security group rules",
										},
										"serf_port": {
											"default":     4648,
											"description": "The port to use for Serf",
										},
									},
								},
								"source": "./modules/nomad-security-group-rules",
							},
							"servers": {
								"expressions": {
									"allowed_inbound_cidr_blocks": {
										"constant_value": [
											"0.0.0.0/0",
										],
									},
									"allowed_ssh_cidr_blocks": {
										"constant_value": [
											"0.0.0.0/0",
										],
									},
									"ami_id": {
										"references": [
											"var.ami_id",
											"data.aws_ami.nomad_consul.image_id",
											"data.aws_ami.nomad_consul",
											"var.ami_id",
										],
									},
									"cluster_name": {
										"references": [
											"var.cluster_name",
										],
									},
									"cluster_size": {
										"references": [
											"var.num_servers",
										],
									},
									"cluster_tag_key": {
										"references": [
											"var.cluster_tag_key",
										],
									},
									"cluster_tag_value": {
										"references": [
											"var.cluster_tag_value",
										],
									},
									"instance_type": {
										"references": [
											"var.server_instance_type",
										],
									},
									"ssh_key_name": {
										"references": [
											"var.ssh_key_name",
										],
									},
									"subnet_ids": {
										"references": [
											"data.aws_subnet_ids.default.ids",
											"data.aws_subnet_ids.default",
										],
									},
									"tags": {
										"constant_value": [
											{
												"key": "Environment",
												"propagate_at_launch": true,
												"value":               "development",
											},
										],
									},
									"user_data": {
										"references": [
											"data.template_file.user_data_server.rendered",
											"data.template_file.user_data_server",
										],
									},
									"vpc_id": {
										"references": [
											"data.aws_vpc.default.id",
											"data.aws_vpc.default",
										],
									},
								},
								"module": {
									"module_calls": {
										"iam_policies": {
											"expressions": {
												"enabled": {
													"references": [
														"var.enable_iam_setup",
													],
												},
												"iam_role_id": {
													"references": [
														"aws_iam_role.instance_role",
													],
												},
											},
											"module": {
												"resources": [
													{
														"address": "aws_iam_role_policy.auto_discover_cluster",
														"count_expression": {
															"references": [
																"var.enabled",
															],
														},
														"expressions": {
															"name": {
																"constant_value": "auto-discover-cluster",
															},
															"policy": {
																"references": [
																	"data.aws_iam_policy_document.auto_discover_cluster.json",
																	"data.aws_iam_policy_document.auto_discover_cluster",
																],
															},
															"role": {
																"references": [
																	"var.iam_role_id",
																],
															},
														},
														"mode":                "managed",
														"name":                "auto_discover_cluster",
														"provider_config_key": "iam_policies:aws",
														"schema_version":      0,
														"type":                "aws_iam_role_policy",
													},
													{
														"address": "data.aws_iam_policy_document.auto_discover_cluster",
														"expressions": {
															"statement": [
																{
																	"actions": {
																		"constant_value": [
																			"ec2:DescribeInstances",
																			"ec2:DescribeTags",
																			"autoscaling:DescribeAutoScalingGroups",
																		],
																	},
																	"effect": {
																		"constant_value": "Allow",
																	},
																	"resources": {
																		"constant_value": [
																			"*",
																		],
																	},
																},
															],
														},
														"mode":                "data",
														"name":                "auto_discover_cluster",
														"provider_config_key": "iam_policies:aws",
														"schema_version":      0,
														"type":                "aws_iam_policy_document",
													},
												],
												"variables": {
													"enabled": {
														"default":     true,
														"description": "Give the option to disable this module if required",
													},
													"iam_role_id": {
														"description": "The ID of the IAM Role to which these IAM policies should be attached",
													},
												},
											},
											"source": "../consul-iam-policies",
										},
										"security_group_rules": {
											"expressions": {
												"allowed_inbound_cidr_blocks": {
													"references": [
														"var.allowed_inbound_cidr_blocks",
													],
												},
												"allowed_inbound_security_group_count": {
													"references": [
														"var.allowed_inbound_security_group_count",
													],
												},
												"allowed_inbound_security_group_ids": {
													"references": [
														"var.allowed_inbound_security_group_ids",
													],
												},
												"cli_rpc_port": {
													"references": [
														"var.cli_rpc_port",
													],
												},
												"dns_port": {
													"references": [
														"var.dns_port",
													],
												},
												"http_api_port": {
													"references": [
														"var.http_api_port",
													],
												},
												"security_group_id": {
													"references": [
														"aws_security_group.lc_security_group.id",
														"aws_security_group.lc_security_group",
													],
												},
												"serf_lan_port": {
													"references": [
														"var.serf_lan_port",
													],
												},
												"serf_wan_port": {
													"references": [
														"var.serf_wan_port",
													],
												},
												"server_rpc_port": {
													"references": [
														"var.server_rpc_port",
													],
												},
											},
											"module": {
												"module_calls": {
													"client_security_group_rules": {
														"expressions": {
															"allowed_inbound_cidr_blocks": {
																"references": [
																	"var.allowed_inbound_cidr_blocks",
																],
															},
															"allowed_inbound_security_group_count": {
																"references": [
																	"var.allowed_inbound_security_group_count",
																],
															},
															"allowed_inbound_security_group_ids": {
																"references": [
																	"var.allowed_inbound_security_group_ids",
																],
															},
															"security_group_id": {
																"references": [
																	"var.security_group_id",
																],
															},
															"serf_lan_port": {
																"references": [
																	"var.serf_lan_port",
																],
															},
														},
														"module": {
															"resources": [
																{
																	"address": "aws_security_group_rule.allow_serf_lan_tcp_inbound",
																	"count_expression": {
																		"references": [
																			"var.allowed_inbound_cidr_blocks",
																		],
																	},
																	"expressions": {
																		"cidr_blocks": {
																			"references": [
																				"var.allowed_inbound_cidr_blocks",
																			],
																		},
																		"from_port": {
																			"references": [
																				"var.serf_lan_port",
																			],
																		},
																		"protocol": {
																			"constant_value": "tcp",
																		},
																		"security_group_id": {
																			"references": [
																				"var.security_group_id",
																			],
																		},
																		"to_port": {
																			"references": [
																				"var.serf_lan_port",
																			],
																		},
																		"type": {
																			"constant_value": "ingress",
																		},
																	},
																	"mode":                "managed",
																	"name":                "allow_serf_lan_tcp_inbound",
																	"provider_config_key": "client_security_group_rules:aws",
																	"schema_version":      2,
																	"type":                "aws_security_group_rule",
																},
																{
																	"address": "aws_security_group_rule.allow_serf_lan_tcp_inbound_from_security_group_ids",
																	"count_expression": {
																		"references": [
																			"var.allowed_inbound_security_group_count",
																		],
																	},
																	"expressions": {
																		"from_port": {
																			"references": [
																				"var.serf_lan_port",
																			],
																		},
																		"protocol": {
																			"constant_value": "tcp",
																		},
																		"security_group_id": {
																			"references": [
																				"var.security_group_id",
																			],
																		},
																		"source_security_group_id": {
																			"references": [
																				"var.allowed_inbound_security_group_ids",
																				"count.index",
																			],
																		},
																		"to_port": {
																			"references": [
																				"var.serf_lan_port",
																			],
																		},
																		"type": {
																			"constant_value": "ingress",
																		},
																	},
																	"mode":                "managed",
																	"name":                "allow_serf_lan_tcp_inbound_from_security_group_ids",
																	"provider_config_key": "client_security_group_rules:aws",
																	"schema_version":      2,
																	"type":                "aws_security_group_rule",
																},
																{
																	"address": "aws_security_group_rule.allow_serf_lan_tcp_inbound_from_self",
																	"expressions": {
																		"from_port": {
																			"references": [
																				"var.serf_lan_port",
																			],
																		},
																		"protocol": {
																			"constant_value": "tcp",
																		},
																		"security_group_id": {
																			"references": [
																				"var.security_group_id",
																			],
																		},
																		"self": {
																			"constant_value": true,
																		},
																		"to_port": {
																			"references": [
																				"var.serf_lan_port",
																			],
																		},
																		"type": {
																			"constant_value": "ingress",
																		},
																	},
																	"mode":                "managed",
																	"name":                "allow_serf_lan_tcp_inbound_from_self",
																	"provider_config_key": "client_security_group_rules:aws",
																	"schema_version":      2,
																	"type":                "aws_security_group_rule",
																},
																{
																	"address": "aws_security_group_rule.allow_serf_lan_udp_inbound",
																	"count_expression": {
																		"references": [
																			"var.allowed_inbound_cidr_blocks",
																		],
																	},
																	"expressions": {
																		"cidr_blocks": {
																			"references": [
																				"var.allowed_inbound_cidr_blocks",
																			],
																		},
																		"from_port": {
																			"references": [
																				"var.serf_lan_port",
																			],
																		},
																		"protocol": {
																			"constant_value": "udp",
																		},
																		"security_group_id": {
																			"references": [
																				"var.security_group_id",
																			],
																		},
																		"to_port": {
																			"references": [
																				"var.serf_lan_port",
																			],
																		},
																		"type": {
																			"constant_value": "ingress",
																		},
																	},
																	"mode":                "managed",
																	"name":                "allow_serf_lan_udp_inbound",
																	"provider_config_key": "client_security_group_rules:aws",
																	"schema_version":      2,
																	"type":                "aws_security_group_rule",
																},
																{
																	"address": "aws_security_group_rule.allow_serf_lan_udp_inbound_from_security_group_ids",
																	"count_expression": {
																		"references": [
																			"var.allowed_inbound_security_group_count",
																		],
																	},
																	"expressions": {
																		"from_port": {
																			"references": [
																				"var.serf_lan_port",
																			],
																		},
																		"protocol": {
																			"constant_value": "udp",
																		},
																		"security_group_id": {
																			"references": [
																				"var.security_group_id",
																			],
																		},
																		"source_security_group_id": {
																			"references": [
																				"var.allowed_inbound_security_group_ids",
																				"count.index",
																			],
																		},
																		"to_port": {
																			"references": [
																				"var.serf_lan_port",
																			],
																		},
																		"type": {
																			"constant_value": "ingress",
																		},
																	},
																	"mode":                "managed",
																	"name":                "allow_serf_lan_udp_inbound_from_security_group_ids",
																	"provider_config_key": "client_security_group_rules:aws",
																	"schema_version":      2,
																	"type":                "aws_security_group_rule",
																},
																{
																	"address": "aws_security_group_rule.allow_serf_lan_udp_inbound_from_self",
																	"expressions": {
																		"from_port": {
																			"references": [
																				"var.serf_lan_port",
																			],
																		},
																		"protocol": {
																			"constant_value": "udp",
																		},
																		"security_group_id": {
																			"references": [
																				"var.security_group_id",
																			],
																		},
																		"self": {
																			"constant_value": true,
																		},
																		"to_port": {
																			"references": [
																				"var.serf_lan_port",
																			],
																		},
																		"type": {
																			"constant_value": "ingress",
																		},
																	},
																	"mode":                "managed",
																	"name":                "allow_serf_lan_udp_inbound_from_self",
																	"provider_config_key": "client_security_group_rules:aws",
																	"schema_version":      2,
																	"type":                "aws_security_group_rule",
																},
															],
															"variables": {
																"allowed_inbound_cidr_blocks": {
																	"default":     [],
																	"description": "A list of CIDR-formatted IP address ranges from which the EC2 Instances will allow connections to Consul",
																},
																"allowed_inbound_security_group_count": {
																	"default":     0,
																	"description": "The number of entries in var.allowed_inbound_security_group_ids. Ideally, this value could be computed dynamically, but we pass this variable to a Terraform resource's 'count' property and Terraform requires that 'count' be computed with literals or data sources only.",
																},
																"allowed_inbound_security_group_ids": {
																	"default":     [],
																	"description": "A list of security group IDs that will be allowed to connect to Consul",
																},
																"security_group_id": {
																	"description": "The ID of the security group to which we should add the Consul security group rules",
																},
																"serf_lan_port": {
																	"default":     8301,
																	"description": "The port used to handle gossip in the LAN. Required by all agents.",
																},
															},
														},
														"source": "../consul-client-security-group-rules",
													},
												},
												"resources": [
													{
														"address": "aws_security_group_rule.allow_cli_rpc_inbound",
														"count_expression": {
															"references": [
																"var.allowed_inbound_cidr_blocks",
															],
														},
														"expressions": {
															"cidr_blocks": {
																"references": [
																	"var.allowed_inbound_cidr_blocks",
																],
															},
															"from_port": {
																"references": [
																	"var.cli_rpc_port",
																],
															},
															"protocol": {
																"constant_value": "tcp",
															},
															"security_group_id": {
																"references": [
																	"var.security_group_id",
																],
															},
															"to_port": {
																"references": [
																	"var.cli_rpc_port",
																],
															},
															"type": {
																"constant_value": "ingress",
															},
														},
														"mode":                "managed",
														"name":                "allow_cli_rpc_inbound",
														"provider_config_key": "security_group_rules:aws",
														"schema_version":      2,
														"type":                "aws_security_group_rule",
													},
													{
														"address": "aws_security_group_rule.allow_cli_rpc_inbound_from_security_group_ids",
														"count_expression": {
															"references": [
																"var.allowed_inbound_security_group_count",
															],
														},
														"expressions": {
															"from_port": {
																"references": [
																	"var.cli_rpc_port",
																],
															},
															"protocol": {
																"constant_value": "tcp",
															},
															"security_group_id": {
																"references": [
																	"var.security_group_id",
																],
															},
															"source_security_group_id": {
																"references": [
																	"var.allowed_inbound_security_group_ids",
																	"count.index",
																],
															},
															"to_port": {
																"references": [
																	"var.cli_rpc_port",
																],
															},
															"type": {
																"constant_value": "ingress",
															},
														},
														"mode":                "managed",
														"name":                "allow_cli_rpc_inbound_from_security_group_ids",
														"provider_config_key": "security_group_rules:aws",
														"schema_version":      2,
														"type":                "aws_security_group_rule",
													},
													{
														"address": "aws_security_group_rule.allow_cli_rpc_inbound_from_self",
														"expressions": {
															"from_port": {
																"references": [
																	"var.cli_rpc_port",
																],
															},
															"protocol": {
																"constant_value": "tcp",
															},
															"security_group_id": {
																"references": [
																	"var.security_group_id",
																],
															},
															"self": {
																"constant_value": true,
															},
															"to_port": {
																"references": [
																	"var.cli_rpc_port",
																],
															},
															"type": {
																"constant_value": "ingress",
															},
														},
														"mode":                "managed",
														"name":                "allow_cli_rpc_inbound_from_self",
														"provider_config_key": "security_group_rules:aws",
														"schema_version":      2,
														"type":                "aws_security_group_rule",
													},
													{
														"address": "aws_security_group_rule.allow_dns_tcp_inbound",
														"count_expression": {
															"references": [
																"var.allowed_inbound_cidr_blocks",
															],
														},
														"expressions": {
															"cidr_blocks": {
																"references": [
																	"var.allowed_inbound_cidr_blocks",
																],
															},
															"from_port": {
																"references": [
																	"var.dns_port",
																],
															},
															"protocol": {
																"constant_value": "tcp",
															},
															"security_group_id": {
																"references": [
																	"var.security_group_id",
																],
															},
															"to_port": {
																"references": [
																	"var.dns_port",
																],
															},
															"type": {
																"constant_value": "ingress",
															},
														},
														"mode":                "managed",
														"name":                "allow_dns_tcp_inbound",
														"provider_config_key": "security_group_rules:aws",
														"schema_version":      2,
														"type":                "aws_security_group_rule",
													},
													{
														"address": "aws_security_group_rule.allow_dns_tcp_inbound_from_security_group_ids",
														"count_expression": {
															"references": [
																"var.allowed_inbound_security_group_count",
															],
														},
														"expressions": {
															"from_port": {
																"references": [
																	"var.dns_port",
																],
															},
															"protocol": {
																"constant_value": "tcp",
															},
															"security_group_id": {
																"references": [
																	"var.security_group_id",
																],
															},
															"source_security_group_id": {
																"references": [
																	"var.allowed_inbound_security_group_ids",
																	"count.index",
																],
															},
															"to_port": {
																"references": [
																	"var.dns_port",
																],
															},
															"type": {
																"constant_value": "ingress",
															},
														},
														"mode":                "managed",
														"name":                "allow_dns_tcp_inbound_from_security_group_ids",
														"provider_config_key": "security_group_rules:aws",
														"schema_version":      2,
														"type":                "aws_security_group_rule",
													},
													{
														"address": "aws_security_group_rule.allow_dns_tcp_inbound_from_self",
														"expressions": {
															"from_port": {
																"references": [
																	"var.dns_port",
																],
															},
															"protocol": {
																"constant_value": "tcp",
															},
															"security_group_id": {
																"references": [
																	"var.security_group_id",
																],
															},
															"self": {
																"constant_value": true,
															},
															"to_port": {
																"references": [
																	"var.dns_port",
																],
															},
															"type": {
																"constant_value": "ingress",
															},
														},
														"mode":                "managed",
														"name":                "allow_dns_tcp_inbound_from_self",
														"provider_config_key": "security_group_rules:aws",
														"schema_version":      2,
														"type":                "aws_security_group_rule",
													},
													{
														"address": "aws_security_group_rule.allow_dns_udp_inbound",
														"count_expression": {
															"references": [
																"var.allowed_inbound_cidr_blocks",
															],
														},
														"expressions": {
															"cidr_blocks": {
																"references": [
																	"var.allowed_inbound_cidr_blocks",
																],
															},
															"from_port": {
																"references": [
																	"var.dns_port",
																],
															},
															"protocol": {
																"constant_value": "udp",
															},
															"security_group_id": {
																"references": [
																	"var.security_group_id",
																],
															},
															"to_port": {
																"references": [
																	"var.dns_port",
																],
															},
															"type": {
																"constant_value": "ingress",
															},
														},
														"mode":                "managed",
														"name":                "allow_dns_udp_inbound",
														"provider_config_key": "security_group_rules:aws",
														"schema_version":      2,
														"type":                "aws_security_group_rule",
													},
													{
														"address": "aws_security_group_rule.allow_dns_udp_inbound_from_security_group_ids",
														"count_expression": {
															"references": [
																"var.allowed_inbound_security_group_count",
															],
														},
														"expressions": {
															"from_port": {
																"references": [
																	"var.dns_port",
																],
															},
															"protocol": {
																"constant_value": "udp",
															},
															"security_group_id": {
																"references": [
																	"var.security_group_id",
																],
															},
															"source_security_group_id": {
																"references": [
																	"var.allowed_inbound_security_group_ids",
																	"count.index",
																],
															},
															"to_port": {
																"references": [
																	"var.dns_port",
																],
															},
															"type": {
																"constant_value": "ingress",
															},
														},
														"mode":                "managed",
														"name":                "allow_dns_udp_inbound_from_security_group_ids",
														"provider_config_key": "security_group_rules:aws",
														"schema_version":      2,
														"type":                "aws_security_group_rule",
													},
													{
														"address": "aws_security_group_rule.allow_dns_udp_inbound_from_self",
														"expressions": {
															"from_port": {
																"references": [
																	"var.dns_port",
																],
															},
															"protocol": {
																"constant_value": "udp",
															},
															"security_group_id": {
																"references": [
																	"var.security_group_id",
																],
															},
															"self": {
																"constant_value": true,
															},
															"to_port": {
																"references": [
																	"var.dns_port",
																],
															},
															"type": {
																"constant_value": "ingress",
															},
														},
														"mode":                "managed",
														"name":                "allow_dns_udp_inbound_from_self",
														"provider_config_key": "security_group_rules:aws",
														"schema_version":      2,
														"type":                "aws_security_group_rule",
													},
													{
														"address": "aws_security_group_rule.allow_http_api_inbound",
														"count_expression": {
															"references": [
																"var.allowed_inbound_cidr_blocks",
															],
														},
														"expressions": {
															"cidr_blocks": {
																"references": [
																	"var.allowed_inbound_cidr_blocks",
																],
															},
															"from_port": {
																"references": [
																	"var.http_api_port",
																],
															},
															"protocol": {
																"constant_value": "tcp",
															},
															"security_group_id": {
																"references": [
																	"var.security_group_id",
																],
															},
															"to_port": {
																"references": [
																	"var.http_api_port",
																],
															},
															"type": {
																"constant_value": "ingress",
															},
														},
														"mode":                "managed",
														"name":                "allow_http_api_inbound",
														"provider_config_key": "security_group_rules:aws",
														"schema_version":      2,
														"type":                "aws_security_group_rule",
													},
													{
														"address": "aws_security_group_rule.allow_http_api_inbound_from_security_group_ids",
														"count_expression": {
															"references": [
																"var.allowed_inbound_security_group_count",
															],
														},
														"expressions": {
															"from_port": {
																"references": [
																	"var.http_api_port",
																],
															},
															"protocol": {
																"constant_value": "tcp",
															},
															"security_group_id": {
																"references": [
																	"var.security_group_id",
																],
															},
															"source_security_group_id": {
																"references": [
																	"var.allowed_inbound_security_group_ids",
																	"count.index",
																],
															},
															"to_port": {
																"references": [
																	"var.http_api_port",
																],
															},
															"type": {
																"constant_value": "ingress",
															},
														},
														"mode":                "managed",
														"name":                "allow_http_api_inbound_from_security_group_ids",
														"provider_config_key": "security_group_rules:aws",
														"schema_version":      2,
														"type":                "aws_security_group_rule",
													},
													{
														"address": "aws_security_group_rule.allow_http_api_inbound_from_self",
														"expressions": {
															"from_port": {
																"references": [
																	"var.http_api_port",
																],
															},
															"protocol": {
																"constant_value": "tcp",
															},
															"security_group_id": {
																"references": [
																	"var.security_group_id",
																],
															},
															"self": {
																"constant_value": true,
															},
															"to_port": {
																"references": [
																	"var.http_api_port",
																],
															},
															"type": {
																"constant_value": "ingress",
															},
														},
														"mode":                "managed",
														"name":                "allow_http_api_inbound_from_self",
														"provider_config_key": "security_group_rules:aws",
														"schema_version":      2,
														"type":                "aws_security_group_rule",
													},
													{
														"address": "aws_security_group_rule.allow_serf_wan_tcp_inbound",
														"count_expression": {
															"references": [
																"var.allowed_inbound_cidr_blocks",
															],
														},
														"expressions": {
															"cidr_blocks": {
																"references": [
																	"var.allowed_inbound_cidr_blocks",
																],
															},
															"from_port": {
																"references": [
																	"var.serf_wan_port",
																],
															},
															"protocol": {
																"constant_value": "tcp",
															},
															"security_group_id": {
																"references": [
																	"var.security_group_id",
																],
															},
															"to_port": {
																"references": [
																	"var.serf_wan_port",
																],
															},
															"type": {
																"constant_value": "ingress",
															},
														},
														"mode":                "managed",
														"name":                "allow_serf_wan_tcp_inbound",
														"provider_config_key": "security_group_rules:aws",
														"schema_version":      2,
														"type":                "aws_security_group_rule",
													},
													{
														"address": "aws_security_group_rule.allow_serf_wan_tcp_inbound_from_security_group_ids",
														"count_expression": {
															"references": [
																"var.allowed_inbound_security_group_count",
															],
														},
														"expressions": {
															"from_port": {
																"references": [
																	"var.serf_wan_port",
																],
															},
															"protocol": {
																"constant_value": "tcp",
															},
															"security_group_id": {
																"references": [
																	"var.security_group_id",
																],
															},
															"source_security_group_id": {
																"references": [
																	"var.allowed_inbound_security_group_ids",
																	"count.index",
																],
															},
															"to_port": {
																"references": [
																	"var.serf_wan_port",
																],
															},
															"type": {
																"constant_value": "ingress",
															},
														},
														"mode":                "managed",
														"name":                "allow_serf_wan_tcp_inbound_from_security_group_ids",
														"provider_config_key": "security_group_rules:aws",
														"schema_version":      2,
														"type":                "aws_security_group_rule",
													},
													{
														"address": "aws_security_group_rule.allow_serf_wan_tcp_inbound_from_self",
														"expressions": {
															"from_port": {
																"references": [
																	"var.serf_wan_port",
																],
															},
															"protocol": {
																"constant_value": "tcp",
															},
															"security_group_id": {
																"references": [
																	"var.security_group_id",
																],
															},
															"self": {
																"constant_value": true,
															},
															"to_port": {
																"references": [
																	"var.serf_wan_port",
																],
															},
															"type": {
																"constant_value": "ingress",
															},
														},
														"mode":                "managed",
														"name":                "allow_serf_wan_tcp_inbound_from_self",
														"provider_config_key": "security_group_rules:aws",
														"schema_version":      2,
														"type":                "aws_security_group_rule",
													},
													{
														"address": "aws_security_group_rule.allow_serf_wan_udp_inbound",
														"count_expression": {
															"references": [
																"var.allowed_inbound_cidr_blocks",
															],
														},
														"expressions": {
															"cidr_blocks": {
																"references": [
																	"var.allowed_inbound_cidr_blocks",
																],
															},
															"from_port": {
																"references": [
																	"var.serf_wan_port",
																],
															},
															"protocol": {
																"constant_value": "udp",
															},
															"security_group_id": {
																"references": [
																	"var.security_group_id",
																],
															},
															"to_port": {
																"references": [
																	"var.serf_wan_port",
																],
															},
															"type": {
																"constant_value": "ingress",
															},
														},
														"mode":                "managed",
														"name":                "allow_serf_wan_udp_inbound",
														"provider_config_key": "security_group_rules:aws",
														"schema_version":      2,
														"type":                "aws_security_group_rule",
													},
													{
														"address": "aws_security_group_rule.allow_serf_wan_udp_inbound_from_security_group_ids",
														"count_expression": {
															"references": [
																"var.allowed_inbound_security_group_count",
															],
														},
														"expressions": {
															"from_port": {
																"references": [
																	"var.serf_wan_port",
																],
															},
															"protocol": {
																"constant_value": "udp",
															},
															"security_group_id": {
																"references": [
																	"var.security_group_id",
																],
															},
															"source_security_group_id": {
																"references": [
																	"var.allowed_inbound_security_group_ids",
																	"count.index",
																],
															},
															"to_port": {
																"references": [
																	"var.serf_wan_port",
																],
															},
															"type": {
																"constant_value": "ingress",
															},
														},
														"mode":                "managed",
														"name":                "allow_serf_wan_udp_inbound_from_security_group_ids",
														"provider_config_key": "security_group_rules:aws",
														"schema_version":      2,
														"type":                "aws_security_group_rule",
													},
													{
														"address": "aws_security_group_rule.allow_serf_wan_udp_inbound_from_self",
														"expressions": {
															"from_port": {
																"references": [
																	"var.serf_wan_port",
																],
															},
															"protocol": {
																"constant_value": "udp",
															},
															"security_group_id": {
																"references": [
																	"var.security_group_id",
																],
															},
															"self": {
																"constant_value": true,
															},
															"to_port": {
																"references": [
																	"var.serf_wan_port",
																],
															},
															"type": {
																"constant_value": "ingress",
															},
														},
														"mode":                "managed",
														"name":                "allow_serf_wan_udp_inbound_from_self",
														"provider_config_key": "security_group_rules:aws",
														"schema_version":      2,
														"type":                "aws_security_group_rule",
													},
													{
														"address": "aws_security_group_rule.allow_server_rpc_inbound",
														"count_expression": {
															"references": [
																"var.allowed_inbound_cidr_blocks",
															],
														},
														"expressions": {
															"cidr_blocks": {
																"references": [
																	"var.allowed_inbound_cidr_blocks",
																],
															},
															"from_port": {
																"references": [
																	"var.server_rpc_port",
																],
															},
															"protocol": {
																"constant_value": "tcp",
															},
															"security_group_id": {
																"references": [
																	"var.security_group_id",
																],
															},
															"to_port": {
																"references": [
																	"var.server_rpc_port",
																],
															},
															"type": {
																"constant_value": "ingress",
															},
														},
														"mode":                "managed",
														"name":                "allow_server_rpc_inbound",
														"provider_config_key": "security_group_rules:aws",
														"schema_version":      2,
														"type":                "aws_security_group_rule",
													},
													{
														"address": "aws_security_group_rule.allow_server_rpc_inbound_from_security_group_ids",
														"count_expression": {
															"references": [
																"var.allowed_inbound_security_group_count",
															],
														},
														"expressions": {
															"from_port": {
																"references": [
																	"var.server_rpc_port",
																],
															},
															"protocol": {
																"constant_value": "tcp",
															},
															"security_group_id": {
																"references": [
																	"var.security_group_id",
																],
															},
															"source_security_group_id": {
																"references": [
																	"var.allowed_inbound_security_group_ids",
																	"count.index",
																],
															},
															"to_port": {
																"references": [
																	"var.server_rpc_port",
																],
															},
															"type": {
																"constant_value": "ingress",
															},
														},
														"mode":                "managed",
														"name":                "allow_server_rpc_inbound_from_security_group_ids",
														"provider_config_key": "security_group_rules:aws",
														"schema_version":      2,
														"type":                "aws_security_group_rule",
													},
													{
														"address": "aws_security_group_rule.allow_server_rpc_inbound_from_self",
														"expressions": {
															"from_port": {
																"references": [
																	"var.server_rpc_port",
																],
															},
															"protocol": {
																"constant_value": "tcp",
															},
															"security_group_id": {
																"references": [
																	"var.security_group_id",
																],
															},
															"self": {
																"constant_value": true,
															},
															"to_port": {
																"references": [
																	"var.server_rpc_port",
																],
															},
															"type": {
																"constant_value": "ingress",
															},
														},
														"mode":                "managed",
														"name":                "allow_server_rpc_inbound_from_self",
														"provider_config_key": "security_group_rules:aws",
														"schema_version":      2,
														"type":                "aws_security_group_rule",
													},
												],
												"variables": {
													"allowed_inbound_cidr_blocks": {
														"default":     [],
														"description": "A list of CIDR-formatted IP address ranges from which the EC2 Instances will allow connections to Consul",
													},
													"allowed_inbound_security_group_count": {
														"default":     0,
														"description": "The number of entries in var.allowed_inbound_security_group_ids. Ideally, this value could be computed dynamically, but we pass this variable to a Terraform resource's 'count' property and Terraform requires that 'count' be computed with literals or data sources only.",
													},
													"allowed_inbound_security_group_ids": {
														"default":     [],
														"description": "A list of security group IDs that will be allowed to connect to Consul",
													},
													"cli_rpc_port": {
														"default":     8400,
														"description": "The port used by all agents to handle RPC from the CLI.",
													},
													"dns_port": {
														"default":     8600,
														"description": "The port used to resolve DNS queries.",
													},
													"http_api_port": {
														"default":     8500,
														"description": "The port used by clients to talk to the HTTP API",
													},
													"security_group_id": {
														"description": "The ID of the security group to which we should add the Consul security group rules",
													},
													"serf_lan_port": {
														"default":     8301,
														"description": "The port used to handle gossip in the LAN. Required by all agents.",
													},
													"serf_wan_port": {
														"default":     8302,
														"description": "The port used by servers to gossip over the WAN to other servers.",
													},
													"server_rpc_port": {
														"default":     8300,
														"description": "The port used by servers to handle incoming requests from other agents.",
													},
												},
											},
											"source": "../consul-security-group-rules",
										},
									},
									"outputs": {
										"asg_name": {
											"description": "This is the name for the autoscaling group generated by the module",
											"expression": {
												"references": [
													"aws_autoscaling_group.autoscaling_group.name",
													"aws_autoscaling_group.autoscaling_group",
												],
											},
										},
										"cluster_size": {
											"description": "This is the desired size of the consul cluster in the autoscaling group",
											"expression": {
												"references": [
													"aws_autoscaling_group.autoscaling_group.desired_capacity",
													"aws_autoscaling_group.autoscaling_group",
												],
											},
										},
										"cluster_tag_key": {
											"description": "This is the tag key used to allow the consul servers to autojoin",
											"expression": {
												"references": [
													"var.cluster_tag_key",
												],
											},
										},
										"cluster_tag_value": {
											"description": "This is the tag value used to allow the consul servers to autojoin",
											"expression": {
												"references": [
													"var.cluster_tag_value",
												],
											},
										},
										"iam_role_arn": {
											"description": "This is the arn of instance role if enable_iam_setup variable is set to true",
											"expression": {
												"references": [
													"aws_iam_role.instance_role",
												],
											},
										},
										"iam_role_id": {
											"description": "This is the id of instance role if enable_iam_setup variable is set to true",
											"expression": {
												"references": [
													"aws_iam_role.instance_role",
												],
											},
										},
										"launch_config_name": {
											"description": "This is the name of the launch_configuration used to bootstrap the cluster instances",
											"expression": {
												"references": [
													"aws_launch_configuration.launch_configuration.name",
													"aws_launch_configuration.launch_configuration",
												],
											},
										},
										"security_group_id": {
											"description": "This is the id of security group that governs ingress and egress for the cluster instances",
											"expression": {
												"references": [
													"aws_security_group.lc_security_group.id",
													"aws_security_group.lc_security_group",
												],
											},
										},
									},
									"resources": [
										{
											"address": "aws_autoscaling_group.autoscaling_group",
											"expressions": {
												"availability_zones": {
													"references": [
														"var.availability_zones",
													],
												},
												"desired_capacity": {
													"references": [
														"var.cluster_size",
													],
												},
												"enabled_metrics": {
													"references": [
														"var.enabled_metrics",
													],
												},
												"health_check_grace_period": {
													"references": [
														"var.health_check_grace_period",
													],
												},
												"health_check_type": {
													"references": [
														"var.health_check_type",
													],
												},
												"launch_configuration": {
													"references": [
														"aws_launch_configuration.launch_configuration.name",
														"aws_launch_configuration.launch_configuration",
													],
												},
												"max_size": {
													"references": [
														"var.cluster_size",
													],
												},
												"min_size": {
													"references": [
														"var.cluster_size",
													],
												},
												"name_prefix": {
													"references": [
														"var.cluster_name",
													],
												},
												"protect_from_scale_in": {
													"references": [
														"var.protect_from_scale_in",
													],
												},
												"service_linked_role_arn": {
													"references": [
														"var.service_linked_role_arn",
													],
												},
												"tags": {
													"references": [
														"var.cluster_name",
														"var.cluster_tag_key",
														"var.cluster_tag_value",
														"var.tags",
													],
												},
												"termination_policies": {
													"references": [
														"var.termination_policies",
													],
												},
												"vpc_zone_identifier": {
													"references": [
														"var.subnet_ids",
													],
												},
												"wait_for_capacity_timeout": {
													"references": [
														"var.wait_for_capacity_timeout",
													],
												},
											},
											"mode":                "managed",
											"name":                "autoscaling_group",
											"provider_config_key": "servers:aws",
											"schema_version":      0,
											"type":                "aws_autoscaling_group",
										},
										{
											"address": "aws_iam_instance_profile.instance_profile",
											"count_expression": {
												"references": [
													"var.enable_iam_setup",
												],
											},
											"expressions": {
												"name_prefix": {
													"references": [
														"var.cluster_name",
													],
												},
												"path": {
													"references": [
														"var.instance_profile_path",
													],
												},
												"role": {
													"references": [
														"aws_iam_role.instance_role",
													],
												},
											},
											"mode":                "managed",
											"name":                "instance_profile",
											"provider_config_key": "servers:aws",
											"schema_version":      0,
											"type":                "aws_iam_instance_profile",
										},
										{
											"address": "aws_iam_role.instance_role",
											"count_expression": {
												"references": [
													"var.enable_iam_setup",
												],
											},
											"expressions": {
												"assume_role_policy": {
													"references": [
														"data.aws_iam_policy_document.instance_role.json",
														"data.aws_iam_policy_document.instance_role",
													],
												},
												"name_prefix": {
													"references": [
														"var.cluster_name",
													],
												},
											},
											"mode":                "managed",
											"name":                "instance_role",
											"provider_config_key": "servers:aws",
											"schema_version":      0,
											"type":                "aws_iam_role",
										},
										{
											"address": "aws_launch_configuration.launch_configuration",
											"expressions": {
												"associate_public_ip_address": {
													"references": [
														"var.associate_public_ip_address",
													],
												},
												"ebs_optimized": {
													"references": [
														"var.root_volume_ebs_optimized",
													],
												},
												"iam_instance_profile": {
													"references": [
														"var.enable_iam_setup",
														"aws_iam_instance_profile.instance_profile",
														"var.iam_instance_profile_name",
													],
												},
												"image_id": {
													"references": [
														"var.ami_id",
													],
												},
												"instance_type": {
													"references": [
														"var.instance_type",
													],
												},
												"key_name": {
													"references": [
														"var.ssh_key_name",
													],
												},
												"name_prefix": {
													"references": [
														"var.cluster_name",
													],
												},
												"placement_tenancy": {
													"references": [
														"var.tenancy",
													],
												},
												"root_block_device": [
													{
														"delete_on_termination": {
															"references": [
																"var.root_volume_delete_on_termination",
															],
														},
														"volume_size": {
															"references": [
																"var.root_volume_size",
															],
														},
														"volume_type": {
															"references": [
																"var.root_volume_type",
															],
														},
													},
												],
												"security_groups": {
													"references": [
														"aws_security_group.lc_security_group.id",
														"aws_security_group.lc_security_group",
														"var.additional_security_group_ids",
													],
												},
												"spot_price": {
													"references": [
														"var.spot_price",
													],
												},
												"user_data": {
													"references": [
														"var.user_data",
													],
												},
											},
											"mode":                "managed",
											"name":                "launch_configuration",
											"provider_config_key": "servers:aws",
											"schema_version":      0,
											"type":                "aws_launch_configuration",
										},
										{
											"address": "aws_security_group.lc_security_group",
											"expressions": {
												"description": {
													"references": [
														"var.cluster_name",
													],
												},
												"name_prefix": {
													"references": [
														"var.cluster_name",
													],
												},
												"tags": {
													"references": [
														"var.cluster_name",
														"var.security_group_tags",
													],
												},
												"vpc_id": {
													"references": [
														"var.vpc_id",
													],
												},
											},
											"mode":                "managed",
											"name":                "lc_security_group",
											"provider_config_key": "servers:aws",
											"schema_version":      1,
											"type":                "aws_security_group",
										},
										{
											"address": "aws_security_group_rule.allow_all_outbound",
											"expressions": {
												"cidr_blocks": {
													"constant_value": [
														"0.0.0.0/0",
													],
												},
												"from_port": {
													"constant_value": 0,
												},
												"protocol": {
													"constant_value": "-1",
												},
												"security_group_id": {
													"references": [
														"aws_security_group.lc_security_group.id",
														"aws_security_group.lc_security_group",
													],
												},
												"to_port": {
													"constant_value": 0,
												},
												"type": {
													"constant_value": "egress",
												},
											},
											"mode":                "managed",
											"name":                "allow_all_outbound",
											"provider_config_key": "servers:aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.allow_ssh_inbound",
											"count_expression": {
												"references": [
													"var.allowed_ssh_cidr_blocks",
												],
											},
											"expressions": {
												"cidr_blocks": {
													"references": [
														"var.allowed_ssh_cidr_blocks",
													],
												},
												"from_port": {
													"references": [
														"var.ssh_port",
													],
												},
												"protocol": {
													"constant_value": "tcp",
												},
												"security_group_id": {
													"references": [
														"aws_security_group.lc_security_group.id",
														"aws_security_group.lc_security_group",
													],
												},
												"to_port": {
													"references": [
														"var.ssh_port",
													],
												},
												"type": {
													"constant_value": "ingress",
												},
											},
											"mode":                "managed",
											"name":                "allow_ssh_inbound",
											"provider_config_key": "servers:aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "aws_security_group_rule.allow_ssh_inbound_from_security_group_ids",
											"count_expression": {
												"references": [
													"var.allowed_ssh_security_group_count",
												],
											},
											"expressions": {
												"from_port": {
													"references": [
														"var.ssh_port",
													],
												},
												"protocol": {
													"constant_value": "tcp",
												},
												"security_group_id": {
													"references": [
														"aws_security_group.lc_security_group.id",
														"aws_security_group.lc_security_group",
													],
												},
												"source_security_group_id": {
													"references": [
														"var.allowed_ssh_security_group_ids",
														"count.index",
													],
												},
												"to_port": {
													"references": [
														"var.ssh_port",
													],
												},
												"type": {
													"constant_value": "ingress",
												},
											},
											"mode":                "managed",
											"name":                "allow_ssh_inbound_from_security_group_ids",
											"provider_config_key": "servers:aws",
											"schema_version":      2,
											"type":                "aws_security_group_rule",
										},
										{
											"address": "data.aws_iam_policy_document.instance_role",
											"expressions": {
												"statement": [
													{
														"actions": {
															"constant_value": [
																"sts:AssumeRole",
															],
														},
														"effect": {
															"constant_value": "Allow",
														},
														"principals": [
															{
																"identifiers": {
																	"constant_value": [
																		"ec2.amazonaws.com",
																	],
																},
																"type": {
																	"constant_value": "Service",
																},
															},
														],
													},
												],
											},
											"mode":                "data",
											"name":                "instance_role",
											"provider_config_key": "servers:aws",
											"schema_version":      0,
											"type":                "aws_iam_policy_document",
										},
									],
									"variables": {
										"additional_security_group_ids": {
											"default":     [],
											"description": "A list of additional security group IDs to add to Consul EC2 Instances",
										},
										"allowed_inbound_cidr_blocks": {
											"description": "A list of CIDR-formatted IP address ranges from which the EC2 Instances will allow connections to Consul",
										},
										"allowed_inbound_security_group_count": {
											"default":     0,
											"description": "The number of entries in var.allowed_inbound_security_group_ids. Ideally, this value could be computed dynamically, but we pass this variable to a Terraform resource's 'count' property and Terraform requires that 'count' be computed with literals or data sources only.",
										},
										"allowed_inbound_security_group_ids": {
											"default":     [],
											"description": "A list of security group IDs that will be allowed to connect to Consul",
										},
										"allowed_ssh_cidr_blocks": {
											"default":     [],
											"description": "A list of CIDR-formatted IP address ranges from which the EC2 Instances will allow SSH connections",
										},
										"allowed_ssh_security_group_count": {
											"default":     0,
											"description": "The number of entries in var.allowed_ssh_security_group_ids. Ideally, this value could be computed dynamically, but we pass this variable to a Terraform resource's 'count' property and Terraform requires that 'count' be computed with literals or data sources only.",
										},
										"allowed_ssh_security_group_ids": {
											"default":     [],
											"description": "A list of security group IDs from which the EC2 Instances will allow SSH connections",
										},
										"ami_id": {
											"description": "The ID of the AMI to run in this cluster. Should be an AMI that had Consul installed and configured by the install-consul module.",
										},
										"associate_public_ip_address": {
											"default":     false,
											"description": "If set to true, associate a public IP address with each EC2 Instance in the cluster.",
										},
										"availability_zones": {
											"description": "The availability zones into which the EC2 Instances should be deployed. We recommend one availability zone per node in the cluster_size variable. At least one of var.subnet_ids or var.availability_zones must be non-empty.",
										},
										"cli_rpc_port": {
											"default":     8400,
											"description": "The port used by all agents to handle RPC from the CLI.",
										},
										"cluster_name": {
											"description": "The name of the Consul cluster (e.g. consul-stage). This variable is used to namespace all resources created by this module.",
										},
										"cluster_size": {
											"default":     3,
											"description": "The number of nodes to have in the Consul cluster. We strongly recommended that you use either 3 or 5.",
										},
										"cluster_tag_key": {
											"default":     "consul-servers",
											"description": "Add a tag with this key and the value var.cluster_tag_value to each Instance in the ASG. This can be used to automatically find other Consul nodes and form a cluster.",
										},
										"cluster_tag_value": {
											"default":     "auto-join",
											"description": "Add a tag with key var.clsuter_tag_key and this value to each Instance in the ASG. This can be used to automatically find other Consul nodes and form a cluster.",
										},
										"dns_port": {
											"default":     8600,
											"description": "The port used to resolve DNS queries.",
										},
										"enable_iam_setup": {
											"default":     true,
											"description": "If true, create the IAM Role, IAM Instance Profile, and IAM Policies. If false, these will not be created, and you can pass in your own IAM Instance Profile via var.iam_instance_profile_name.",
										},
										"enabled_metrics": {
											"default":     [],
											"description": "List of autoscaling group metrics to enable.",
										},
										"health_check_grace_period": {
											"default":     300,
											"description": "Time, in seconds, after instance comes into service before checking health.",
										},
										"health_check_type": {
											"default":     "EC2",
											"description": "Controls how health checking is done. Must be one of EC2 or ELB.",
										},
										"http_api_port": {
											"default":     8500,
											"description": "The port used by clients to talk to the HTTP API",
										},
										"iam_instance_profile_name": {
											"description": "If enable_iam_setup is false then this will be the name of the IAM instance profile to attach",
										},
										"instance_profile_path": {
											"default":     "/",
											"description": "Path in which to create the IAM instance profile.",
										},
										"instance_type": {
											"description": "The type of EC2 Instances to run for each node in the cluster (e.g. t2.micro).",
										},
										"protect_from_scale_in": {
											"default":     false,
											"description": "(Optional) Allows setting instance protection. The autoscaling group will not select instances with this setting for termination during scale in events.",
										},
										"root_volume_delete_on_termination": {
											"default":     true,
											"description": "Whether the volume should be destroyed on instance termination.",
										},
										"root_volume_ebs_optimized": {
											"default":     false,
											"description": "If true, the launched EC2 instance will be EBS-optimized.",
										},
										"root_volume_size": {
											"default":     50,
											"description": "The size, in GB, of the root EBS volume.",
										},
										"root_volume_type": {
											"default":     "standard",
											"description": "The type of volume. Must be one of: standard, gp2, or io1.",
										},
										"security_group_tags": {
											"default":     {},
											"description": "Tags to be applied to the LC security group",
										},
										"serf_lan_port": {
											"default":     8301,
											"description": "The port used to handle gossip in the LAN. Required by all agents.",
										},
										"serf_wan_port": {
											"default":     8302,
											"description": "The port used by servers to gossip over the WAN to other servers.",
										},
										"server_rpc_port": {
											"default":     8300,
											"description": "The port used by servers to handle incoming requests from other agents.",
										},
										"service_linked_role_arn": {
											"description": "The ARN of the service-linked role that the ASG will use to call other AWS services",
										},
										"spot_price": {
											"description": "The maximum hourly price to pay for EC2 Spot Instances.",
										},
										"ssh_key_name": {
											"description": "The name of an EC2 Key Pair that can be used to SSH to the EC2 Instances in this cluster. Set to an empty string to not associate a Key Pair.",
										},
										"ssh_port": {
											"default":     22,
											"description": "The port used for SSH connections",
										},
										"subnet_ids": {
											"description": "The subnet IDs into which the EC2 Instances should be deployed. We recommend one subnet ID per node in the cluster_size variable. At least one of var.subnet_ids or var.availability_zones must be non-empty.",
										},
										"tags": {
											"default":     [],
											"description": "List of extra tag blocks added to the autoscaling group configuration. Each element in the list is a map containing keys 'key', 'value', and 'propagate_at_launch' mapped to the respective values.",
										},
										"tenancy": {
											"description": "The tenancy of the instance. Must be one of: null, default or dedicated. For EC2 Spot Instances only null or dedicated can be used.",
										},
										"termination_policies": {
											"default":     "Default",
											"description": "A list of policies to decide how the instances in the auto scale group should be terminated. The allowed values are OldestInstance, NewestInstance, OldestLaunchConfiguration, ClosestToNextInstanceHour, Default.",
										},
										"user_data": {
											"description": "A User Data script to execute while the server is booting. We recommend passing in a bash script that executes the run-consul script, which should have been installed in the Consul AMI by the install-consul module.",
										},
										"vpc_id": {
											"description": "The ID of the VPC in which to deploy the Consul cluster",
										},
										"wait_for_capacity_timeout": {
											"default":     "10m",
											"description": "A maximum duration that Terraform should wait for ASG instances to be healthy before timing out. Setting this to '0' causes Terraform to skip all Capacity Waiting behavior.",
										},
									},
								},
								"source": "github.com/hashicorp/terraform-aws-consul//modules/consul-cluster?ref=v0.8.0",
							},
						},
						"outputs": {
							"asg_name_clients": {
								"expression": {
									"references": [
										"module.clients.asg_name",
										"module.clients",
									],
								},
							},
							"asg_name_servers": {
								"expression": {
									"references": [
										"module.servers.asg_name",
										"module.servers",
									],
								},
							},
							"aws_region": {
								"expression": {
									"references": [
										"data.aws_region.current.name",
										"data.aws_region.current",
									],
								},
							},
							"iam_role_arn_clients": {
								"expression": {
									"references": [
										"module.clients.iam_role_arn",
										"module.clients",
									],
								},
							},
							"iam_role_arn_servers": {
								"expression": {
									"references": [
										"module.servers.iam_role_arn",
										"module.servers",
									],
								},
							},
							"iam_role_id_clients": {
								"expression": {
									"references": [
										"module.clients.iam_role_id",
										"module.clients",
									],
								},
							},
							"iam_role_id_servers": {
								"expression": {
									"references": [
										"module.servers.iam_role_id",
										"module.servers",
									],
								},
							},
							"launch_config_name_clients": {
								"expression": {
									"references": [
										"module.clients.launch_config_name",
										"module.clients",
									],
								},
							},
							"launch_config_name_servers": {
								"expression": {
									"references": [
										"module.servers.launch_config_name",
										"module.servers",
									],
								},
							},
							"nomad_servers_cluster_tag_key": {
								"expression": {
									"references": [
										"module.servers.cluster_tag_key",
										"module.servers",
									],
								},
							},
							"nomad_servers_cluster_tag_value": {
								"expression": {
									"references": [
										"module.servers.cluster_tag_value",
										"module.servers",
									],
								},
							},
							"num_clients": {
								"expression": {
									"references": [
										"module.clients.cluster_size",
										"module.clients",
									],
								},
							},
							"num_nomad_servers": {
								"expression": {
									"references": [
										"module.servers.cluster_size",
										"module.servers",
									],
								},
							},
							"security_group_id_clients": {
								"expression": {
									"references": [
										"module.clients.security_group_id",
										"module.clients",
									],
								},
							},
							"security_group_id_servers": {
								"expression": {
									"references": [
										"module.servers.security_group_id",
										"module.servers",
									],
								},
							},
						},
						"resources": [
							{
								"address": "data.aws_ami.nomad_consul",
								"expressions": {
									"filter": [
										{
											"name": {
												"constant_value": "virtualization-type",
											},
											"values": {
												"constant_value": [
													"hvm",
												],
											},
										},
										{
											"name": {
												"constant_value": "is-public",
											},
											"values": {
												"constant_value": [
													"true",
												],
											},
										},
										{
											"name": {
												"constant_value": "name",
											},
											"values": {
												"constant_value": [
													"nomad-consul-ubuntu-*",
												],
											},
										},
									],
									"most_recent": {
										"constant_value": true,
									},
									"owners": {
										"constant_value": [
											"562637147889",
										],
									},
								},
								"mode":                "data",
								"name":                "nomad_consul",
								"provider_config_key": "nomad:aws",
								"schema_version":      0,
								"type":                "aws_ami",
							},
							{
								"address":             "data.aws_region.current",
								"mode":                "data",
								"name":                "current",
								"provider_config_key": "nomad:aws",
								"schema_version":      0,
								"type":                "aws_region",
							},
							{
								"address": "data.aws_subnet_ids.default",
								"expressions": {
									"vpc_id": {
										"references": [
											"data.aws_vpc.default.id",
											"data.aws_vpc.default",
										],
									},
								},
								"mode":                "data",
								"name":                "default",
								"provider_config_key": "nomad:aws",
								"schema_version":      0,
								"type":                "aws_subnet_ids",
							},
							{
								"address": "data.aws_vpc.default",
								"expressions": {
									"default": {
										"references": [
											"var.vpc_id",
										],
									},
									"id": {
										"references": [
											"var.vpc_id",
										],
									},
								},
								"mode":                "data",
								"name":                "default",
								"provider_config_key": "nomad:aws",
								"schema_version":      0,
								"type":                "aws_vpc",
							},
							{
								"address": "data.template_file.user_data_client",
								"expressions": {
									"template": {
										"references": [
											"path.module",
										],
									},
									"vars": {
										"references": [
											"var.cluster_tag_key",
											"var.cluster_tag_value",
										],
									},
								},
								"mode":                "data",
								"name":                "user_data_client",
								"provider_config_key": "nomad:template",
								"schema_version":      0,
								"type":                "template_file",
							},
							{
								"address": "data.template_file.user_data_server",
								"expressions": {
									"template": {
										"references": [
											"path.module",
										],
									},
									"vars": {
										"references": [
											"var.cluster_tag_key",
											"var.cluster_tag_value",
											"var.num_servers",
										],
									},
								},
								"mode":                "data",
								"name":                "user_data_server",
								"provider_config_key": "nomad:template",
								"schema_version":      0,
								"type":                "template_file",
							},
						],
						"variables": {
							"ami_id": {
								"description": "The ID of the AMI to run in the cluster. This should be an AMI built from the Packer template under examples/nomad-consul-ami/nomad-consul.json. If no AMI is specified, the template will 'just work' by using the example public AMIs. WARNING! Do not use the example AMIs in a production setting!",
							},
							"cluster_name": {
								"default":     "nomad-example",
								"description": "What to name the cluster and all of its associated resources",
							},
							"cluster_tag_key": {
								"default":     "nomad-servers",
								"description": "The tag the EC2 Instances will look for to automatically discover each other and form a cluster.",
							},
							"cluster_tag_value": {
								"default":     "auto-join",
								"description": "Add a tag with key var.cluster_tag_key and this value to each Instance in the ASG. This can be used to automatically find other Consul nodes and form a cluster.",
							},
							"instance_type": {
								"default":     "t2.micro",
								"description": "What kind of instance type to use for the nomad clients",
							},
							"num_clients": {
								"default":     6,
								"description": "The number of client nodes to deploy. You can deploy as many as you need to run your jobs.",
							},
							"num_servers": {
								"default":     3,
								"description": "The number of server nodes to deploy. We strongly recommend using 3 or 5.",
							},
							"server_instance_type": {
								"default":     "t2.micro",
								"description": "What kind of instance type to use for the nomad servers",
							},
							"ssh_key_name": {
								"default":     "",
								"description": "The name of an EC2 Key Pair that can be used to SSH to the EC2 Instances in this cluster. Set to an empty string to not associate a Key Pair.",
							},
							"vpc_id": {
								"default":     "",
								"description": "The ID of the VPC in which the nodes will be deployed.  Uses default VPC if not supplied.",
							},
						},
					},
					"source":             "hashicorp/nomad/aws",
					"version_constraint": "0.10.0",
				},
			},
		},
	},
	"format_version": "0.2",
	"planned_values": {
		"root_module": {
			"child_modules": [
				{
					"address": "module.nomad",
					"child_modules": [
						{
							"address": "module.nomad.module.servers",
							"child_modules": [
								{
									"address": "module.nomad.module.servers.module.iam_policies",
									"resources": [
										{
											"address":          "module.nomad.module.servers.module.iam_policies.aws_iam_role_policy.auto_discover_cluster[0]",
											"index":            0,
											"mode":             "managed",
											"name":             "auto_discover_cluster",
											"provider_name":    "registry.terraform.io/hashicorp/aws",
											"schema_version":   0,
											"sensitive_values": {},
											"type":             "aws_iam_role_policy",
											"values": {
												"name":        "auto-discover-cluster",
												"name_prefix": null,
												"policy":      "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeTags\",\n        \"ec2:DescribeInstances\",\n        \"autoscaling:DescribeAutoScalingGroups\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
											},
										},
									],
								},
								{
									"address": "module.nomad.module.servers.module.security_group_rules",
									"child_modules": [
										{
											"address": "module.nomad.module.servers.module.security_group_rules.module.client_security_group_rules",
											"resources": [
												{
													"address":        "module.nomad.module.servers.module.security_group_rules.module.client_security_group_rules.aws_security_group_rule.allow_serf_lan_tcp_inbound[0]",
													"index":          0,
													"mode":           "managed",
													"name":           "allow_serf_lan_tcp_inbound",
													"provider_name":  "registry.terraform.io/hashicorp/aws",
													"schema_version": 2,
													"sensitive_values": {
														"cidr_blocks": [
															false,
														],
													},
													"type": "aws_security_group_rule",
													"values": {
														"cidr_blocks": [
															"0.0.0.0/0",
														],
														"description":      null,
														"from_port":        8301,
														"ipv6_cidr_blocks": null,
														"prefix_list_ids":  null,
														"protocol":         "tcp",
														"self":             false,
														"to_port":          8301,
														"type":             "ingress",
													},
												},
												{
													"address":          "module.nomad.module.servers.module.security_group_rules.module.client_security_group_rules.aws_security_group_rule.allow_serf_lan_tcp_inbound_from_self",
													"mode":             "managed",
													"name":             "allow_serf_lan_tcp_inbound_from_self",
													"provider_name":    "registry.terraform.io/hashicorp/aws",
													"schema_version":   2,
													"sensitive_values": {},
													"type":             "aws_security_group_rule",
													"values": {
														"cidr_blocks":      null,
														"description":      null,
														"from_port":        8301,
														"ipv6_cidr_blocks": null,
														"prefix_list_ids":  null,
														"protocol":         "tcp",
														"self":             true,
														"to_port":          8301,
														"type":             "ingress",
													},
												},
												{
													"address":        "module.nomad.module.servers.module.security_group_rules.module.client_security_group_rules.aws_security_group_rule.allow_serf_lan_udp_inbound[0]",
													"index":          0,
													"mode":           "managed",
													"name":           "allow_serf_lan_udp_inbound",
													"provider_name":  "registry.terraform.io/hashicorp/aws",
													"schema_version": 2,
													"sensitive_values": {
														"cidr_blocks": [
															false,
														],
													},
													"type": "aws_security_group_rule",
													"values": {
														"cidr_blocks": [
															"0.0.0.0/0",
														],
														"description":      null,
														"from_port":        8301,
														"ipv6_cidr_blocks": null,
														"prefix_list_ids":  null,
														"protocol":         "udp",
														"self":             false,
														"to_port":          8301,
														"type":             "ingress",
													},
												},
												{
													"address":          "module.nomad.module.servers.module.security_group_rules.module.client_security_group_rules.aws_security_group_rule.allow_serf_lan_udp_inbound_from_self",
													"mode":             "managed",
													"name":             "allow_serf_lan_udp_inbound_from_self",
													"provider_name":    "registry.terraform.io/hashicorp/aws",
													"schema_version":   2,
													"sensitive_values": {},
													"type":             "aws_security_group_rule",
													"values": {
														"cidr_blocks":      null,
														"description":      null,
														"from_port":        8301,
														"ipv6_cidr_blocks": null,
														"prefix_list_ids":  null,
														"protocol":         "udp",
														"self":             true,
														"to_port":          8301,
														"type":             "ingress",
													},
												},
											],
										},
									],
									"resources": [
										{
											"address":        "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_cli_rpc_inbound[0]",
											"index":          0,
											"mode":           "managed",
											"name":           "allow_cli_rpc_inbound",
											"provider_name":  "registry.terraform.io/hashicorp/aws",
											"schema_version": 2,
											"sensitive_values": {
												"cidr_blocks": [
													false,
												],
											},
											"type": "aws_security_group_rule",
											"values": {
												"cidr_blocks": [
													"0.0.0.0/0",
												],
												"description":      null,
												"from_port":        8400,
												"ipv6_cidr_blocks": null,
												"prefix_list_ids":  null,
												"protocol":         "tcp",
												"self":             false,
												"to_port":          8400,
												"type":             "ingress",
											},
										},
										{
											"address":          "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_cli_rpc_inbound_from_self",
											"mode":             "managed",
											"name":             "allow_cli_rpc_inbound_from_self",
											"provider_name":    "registry.terraform.io/hashicorp/aws",
											"schema_version":   2,
											"sensitive_values": {},
											"type":             "aws_security_group_rule",
											"values": {
												"cidr_blocks":      null,
												"description":      null,
												"from_port":        8400,
												"ipv6_cidr_blocks": null,
												"prefix_list_ids":  null,
												"protocol":         "tcp",
												"self":             true,
												"to_port":          8400,
												"type":             "ingress",
											},
										},
										{
											"address":        "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_dns_tcp_inbound[0]",
											"index":          0,
											"mode":           "managed",
											"name":           "allow_dns_tcp_inbound",
											"provider_name":  "registry.terraform.io/hashicorp/aws",
											"schema_version": 2,
											"sensitive_values": {
												"cidr_blocks": [
													false,
												],
											},
											"type": "aws_security_group_rule",
											"values": {
												"cidr_blocks": [
													"0.0.0.0/0",
												],
												"description":      null,
												"from_port":        8600,
												"ipv6_cidr_blocks": null,
												"prefix_list_ids":  null,
												"protocol":         "tcp",
												"self":             false,
												"to_port":          8600,
												"type":             "ingress",
											},
										},
										{
											"address":          "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_dns_tcp_inbound_from_self",
											"mode":             "managed",
											"name":             "allow_dns_tcp_inbound_from_self",
											"provider_name":    "registry.terraform.io/hashicorp/aws",
											"schema_version":   2,
											"sensitive_values": {},
											"type":             "aws_security_group_rule",
											"values": {
												"cidr_blocks":      null,
												"description":      null,
												"from_port":        8600,
												"ipv6_cidr_blocks": null,
												"prefix_list_ids":  null,
												"protocol":         "tcp",
												"self":             true,
												"to_port":          8600,
												"type":             "ingress",
											},
										},
										{
											"address":        "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_dns_udp_inbound[0]",
											"index":          0,
											"mode":           "managed",
											"name":           "allow_dns_udp_inbound",
											"provider_name":  "registry.terraform.io/hashicorp/aws",
											"schema_version": 2,
											"sensitive_values": {
												"cidr_blocks": [
													false,
												],
											},
											"type": "aws_security_group_rule",
											"values": {
												"cidr_blocks": [
													"0.0.0.0/0",
												],
												"description":      null,
												"from_port":        8600,
												"ipv6_cidr_blocks": null,
												"prefix_list_ids":  null,
												"protocol":         "udp",
												"self":             false,
												"to_port":          8600,
												"type":             "ingress",
											},
										},
										{
											"address":          "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_dns_udp_inbound_from_self",
											"mode":             "managed",
											"name":             "allow_dns_udp_inbound_from_self",
											"provider_name":    "registry.terraform.io/hashicorp/aws",
											"schema_version":   2,
											"sensitive_values": {},
											"type":             "aws_security_group_rule",
											"values": {
												"cidr_blocks":      null,
												"description":      null,
												"from_port":        8600,
												"ipv6_cidr_blocks": null,
												"prefix_list_ids":  null,
												"protocol":         "udp",
												"self":             true,
												"to_port":          8600,
												"type":             "ingress",
											},
										},
										{
											"address":        "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_http_api_inbound[0]",
											"index":          0,
											"mode":           "managed",
											"name":           "allow_http_api_inbound",
											"provider_name":  "registry.terraform.io/hashicorp/aws",
											"schema_version": 2,
											"sensitive_values": {
												"cidr_blocks": [
													false,
												],
											},
											"type": "aws_security_group_rule",
											"values": {
												"cidr_blocks": [
													"0.0.0.0/0",
												],
												"description":      null,
												"from_port":        8500,
												"ipv6_cidr_blocks": null,
												"prefix_list_ids":  null,
												"protocol":         "tcp",
												"self":             false,
												"to_port":          8500,
												"type":             "ingress",
											},
										},
										{
											"address":          "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_http_api_inbound_from_self",
											"mode":             "managed",
											"name":             "allow_http_api_inbound_from_self",
											"provider_name":    "registry.terraform.io/hashicorp/aws",
											"schema_version":   2,
											"sensitive_values": {},
											"type":             "aws_security_group_rule",
											"values": {
												"cidr_blocks":      null,
												"description":      null,
												"from_port":        8500,
												"ipv6_cidr_blocks": null,
												"prefix_list_ids":  null,
												"protocol":         "tcp",
												"self":             true,
												"to_port":          8500,
												"type":             "ingress",
											},
										},
										{
											"address":        "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_serf_wan_tcp_inbound[0]",
											"index":          0,
											"mode":           "managed",
											"name":           "allow_serf_wan_tcp_inbound",
											"provider_name":  "registry.terraform.io/hashicorp/aws",
											"schema_version": 2,
											"sensitive_values": {
												"cidr_blocks": [
													false,
												],
											},
											"type": "aws_security_group_rule",
											"values": {
												"cidr_blocks": [
													"0.0.0.0/0",
												],
												"description":      null,
												"from_port":        8302,
												"ipv6_cidr_blocks": null,
												"prefix_list_ids":  null,
												"protocol":         "tcp",
												"self":             false,
												"to_port":          8302,
												"type":             "ingress",
											},
										},
										{
											"address":          "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_serf_wan_tcp_inbound_from_self",
											"mode":             "managed",
											"name":             "allow_serf_wan_tcp_inbound_from_self",
											"provider_name":    "registry.terraform.io/hashicorp/aws",
											"schema_version":   2,
											"sensitive_values": {},
											"type":             "aws_security_group_rule",
											"values": {
												"cidr_blocks":      null,
												"description":      null,
												"from_port":        8302,
												"ipv6_cidr_blocks": null,
												"prefix_list_ids":  null,
												"protocol":         "tcp",
												"self":             true,
												"to_port":          8302,
												"type":             "ingress",
											},
										},
										{
											"address":        "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_serf_wan_udp_inbound[0]",
											"index":          0,
											"mode":           "managed",
											"name":           "allow_serf_wan_udp_inbound",
											"provider_name":  "registry.terraform.io/hashicorp/aws",
											"schema_version": 2,
											"sensitive_values": {
												"cidr_blocks": [
													false,
												],
											},
											"type": "aws_security_group_rule",
											"values": {
												"cidr_blocks": [
													"0.0.0.0/0",
												],
												"description":      null,
												"from_port":        8302,
												"ipv6_cidr_blocks": null,
												"prefix_list_ids":  null,
												"protocol":         "udp",
												"self":             false,
												"to_port":          8302,
												"type":             "ingress",
											},
										},
										{
											"address":          "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_serf_wan_udp_inbound_from_self",
											"mode":             "managed",
											"name":             "allow_serf_wan_udp_inbound_from_self",
											"provider_name":    "registry.terraform.io/hashicorp/aws",
											"schema_version":   2,
											"sensitive_values": {},
											"type":             "aws_security_group_rule",
											"values": {
												"cidr_blocks":      null,
												"description":      null,
												"from_port":        8302,
												"ipv6_cidr_blocks": null,
												"prefix_list_ids":  null,
												"protocol":         "udp",
												"self":             true,
												"to_port":          8302,
												"type":             "ingress",
											},
										},
										{
											"address":        "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_server_rpc_inbound[0]",
											"index":          0,
											"mode":           "managed",
											"name":           "allow_server_rpc_inbound",
											"provider_name":  "registry.terraform.io/hashicorp/aws",
											"schema_version": 2,
											"sensitive_values": {
												"cidr_blocks": [
													false,
												],
											},
											"type": "aws_security_group_rule",
											"values": {
												"cidr_blocks": [
													"0.0.0.0/0",
												],
												"description":      null,
												"from_port":        8300,
												"ipv6_cidr_blocks": null,
												"prefix_list_ids":  null,
												"protocol":         "tcp",
												"self":             false,
												"to_port":          8300,
												"type":             "ingress",
											},
										},
										{
											"address":          "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_server_rpc_inbound_from_self",
											"mode":             "managed",
											"name":             "allow_server_rpc_inbound_from_self",
											"provider_name":    "registry.terraform.io/hashicorp/aws",
											"schema_version":   2,
											"sensitive_values": {},
											"type":             "aws_security_group_rule",
											"values": {
												"cidr_blocks":      null,
												"description":      null,
												"from_port":        8300,
												"ipv6_cidr_blocks": null,
												"prefix_list_ids":  null,
												"protocol":         "tcp",
												"self":             true,
												"to_port":          8300,
												"type":             "ingress",
											},
										},
									],
								},
							],
							"resources": [
								{
									"address":        "module.nomad.module.servers.aws_autoscaling_group.autoscaling_group",
									"mode":           "managed",
									"name":           "autoscaling_group",
									"provider_name":  "registry.terraform.io/hashicorp/aws",
									"schema_version": 0,
									"sensitive_values": {
										"availability_zones":     [],
										"initial_lifecycle_hook": [],
										"instance_refresh":       [],
										"launch_template":        [],
										"mixed_instances_policy": [],
										"tag": [],
										"tags": [
											{},
											{},
											{},
										],
										"termination_policies": [
											false,
										],
										"vpc_zone_identifier": [
											false,
											false,
											false,
										],
										"warm_pool": [],
									},
									"type": "aws_autoscaling_group",
									"values": {
										"capacity_rebalance":        null,
										"desired_capacity":          3,
										"enabled_metrics":           null,
										"force_delete":              false,
										"force_delete_warm_pool":    false,
										"health_check_grace_period": 300,
										"health_check_type":         "EC2",
										"initial_lifecycle_hook":    [],
										"instance_refresh":          [],
										"launch_template":           [],
										"load_balancers":            null,
										"max_instance_lifetime":     null,
										"max_size":                  3,
										"metrics_granularity":       "1Minute",
										"min_elb_capacity":          null,
										"min_size":                  3,
										"mixed_instances_policy":    [],
										"name_prefix":               "strawb-server",
										"placement_group":           null,
										"protect_from_scale_in":     false,
										"suspended_processes":       null,
										"tag": [],
										"tags": [
											{
												"key": "Environment",
												"propagate_at_launch": "true",
												"value":               "development",
											},
											{
												"key": "Name",
												"propagate_at_launch": "true",
												"value":               "strawb-server",
											},
											{
												"key": "nomad-servers",
												"propagate_at_launch": "true",
												"value":               "auto-join",
											},
										],
										"target_group_arns": null,
										"termination_policies": [
											"Default",
										],
										"timeouts": null,
										"vpc_zone_identifier": [
											"subnet-25bfee4c",
											"subnet-4fa23f35",
											"subnet-76f0533a",
										],
										"wait_for_capacity_timeout": "10m",
										"wait_for_elb_capacity":     null,
										"warm_pool":                 [],
									},
								},
								{
									"address":        "module.nomad.module.servers.aws_iam_instance_profile.instance_profile[0]",
									"index":          0,
									"mode":           "managed",
									"name":           "instance_profile",
									"provider_name":  "registry.terraform.io/hashicorp/aws",
									"schema_version": 0,
									"sensitive_values": {
										"tags_all": {},
									},
									"type": "aws_iam_instance_profile",
									"values": {
										"name_prefix": "strawb-server",
										"path":        "/",
										"tags":        null,
										"tags_all": {
											"Name": "StrawbTest",
										},
									},
								},
								{
									"address":        "module.nomad.module.servers.aws_iam_role.instance_role[0]",
									"index":          0,
									"mode":           "managed",
									"name":           "instance_role",
									"provider_name":  "registry.terraform.io/hashicorp/aws",
									"schema_version": 0,
									"sensitive_values": {
										"inline_policy":       [],
										"managed_policy_arns": [],
										"tags_all":            {},
									},
									"type": "aws_iam_role",
									"values": {
										"assume_role_policy":    "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
										"description":           null,
										"force_detach_policies": false,
										"max_session_duration":  3600,
										"name_prefix":           "strawb-server",
										"path":                  "/",
										"permissions_boundary":  null,
										"tags":                  null,
										"tags_all": {
											"Name": "StrawbTest",
										},
									},
								},
								{
									"address":        "module.nomad.module.servers.aws_launch_configuration.launch_configuration",
									"mode":           "managed",
									"name":           "launch_configuration",
									"provider_name":  "registry.terraform.io/hashicorp/aws",
									"schema_version": 0,
									"sensitive_values": {
										"ebs_block_device":       [],
										"ephemeral_block_device": [],
										"metadata_options":       [],
										"root_block_device": [
											{},
										],
										"security_groups": [],
									},
									"type": "aws_launch_configuration",
									"values": {
										"associate_public_ip_address": false,
										"ebs_optimized":               false,
										"enable_monitoring":           true,
										"ephemeral_block_device":      [],
										"image_id":                    "ami-0f5b77f5e53001306",
										"instance_type":               "t3.micro",
										"name_prefix":                 "strawb-server-",
										"placement_tenancy":           null,
										"root_block_device": [
											{
												"delete_on_termination": true,
												"volume_size":           50,
												"volume_type":           "standard",
											},
										],
										"spot_price":                       null,
										"user_data":                        "cd7b9085e976fe6d57aabd4053ec71dc2d4236ce",
										"user_data_base64":                 null,
										"vpc_classic_link_id":              null,
										"vpc_classic_link_security_groups": null,
									},
								},
								{
									"address":        "module.nomad.module.servers.aws_security_group.lc_security_group",
									"mode":           "managed",
									"name":           "lc_security_group",
									"provider_name":  "registry.terraform.io/hashicorp/aws",
									"schema_version": 1,
									"sensitive_values": {
										"egress":   [],
										"ingress":  [],
										"tags":     {},
										"tags_all": {},
									},
									"type": "aws_security_group",
									"values": {
										"description":            "Security group for the strawb-server launch configuration",
										"name_prefix":            "strawb-server",
										"revoke_rules_on_delete": false,
										"tags": {
											"Name": "strawb-server",
										},
										"tags_all": {
											"Name": "strawb-server",
										},
										"timeouts": null,
										"vpc_id":   "vpc-6b8dc203",
									},
								},
								{
									"address":        "module.nomad.module.servers.aws_security_group_rule.allow_all_outbound",
									"mode":           "managed",
									"name":           "allow_all_outbound",
									"provider_name":  "registry.terraform.io/hashicorp/aws",
									"schema_version": 2,
									"sensitive_values": {
										"cidr_blocks": [
											false,
										],
									},
									"type": "aws_security_group_rule",
									"values": {
										"cidr_blocks": [
											"0.0.0.0/0",
										],
										"description":      null,
										"from_port":        0,
										"ipv6_cidr_blocks": null,
										"prefix_list_ids":  null,
										"protocol":         "-1",
										"self":             false,
										"to_port":          0,
										"type":             "egress",
									},
								},
								{
									"address":        "module.nomad.module.servers.aws_security_group_rule.allow_ssh_inbound[0]",
									"index":          0,
									"mode":           "managed",
									"name":           "allow_ssh_inbound",
									"provider_name":  "registry.terraform.io/hashicorp/aws",
									"schema_version": 2,
									"sensitive_values": {
										"cidr_blocks": [
											false,
										],
									},
									"type": "aws_security_group_rule",
									"values": {
										"cidr_blocks": [
											"0.0.0.0/0",
										],
										"description":      null,
										"from_port":        22,
										"ipv6_cidr_blocks": null,
										"prefix_list_ids":  null,
										"protocol":         "tcp",
										"self":             false,
										"to_port":          22,
										"type":             "ingress",
									},
								},
							],
						},
						{
							"address": "module.nomad.module.clients",
							"child_modules": [
								{
									"address": "module.nomad.module.clients.module.security_group_rules",
									"resources": [
										{
											"address":        "module.nomad.module.clients.module.security_group_rules.aws_security_group_rule.allow_http_inbound[0]",
											"index":          0,
											"mode":           "managed",
											"name":           "allow_http_inbound",
											"provider_name":  "registry.terraform.io/hashicorp/aws",
											"schema_version": 2,
											"sensitive_values": {
												"cidr_blocks": [
													false,
												],
											},
											"type": "aws_security_group_rule",
											"values": {
												"cidr_blocks": [
													"0.0.0.0/0",
												],
												"description":      null,
												"from_port":        4646,
												"ipv6_cidr_blocks": null,
												"prefix_list_ids":  null,
												"protocol":         "tcp",
												"self":             false,
												"to_port":          4646,
												"type":             "ingress",
											},
										},
										{
											"address":        "module.nomad.module.clients.module.security_group_rules.aws_security_group_rule.allow_rpc_inbound[0]",
											"index":          0,
											"mode":           "managed",
											"name":           "allow_rpc_inbound",
											"provider_name":  "registry.terraform.io/hashicorp/aws",
											"schema_version": 2,
											"sensitive_values": {
												"cidr_blocks": [
													false,
												],
											},
											"type": "aws_security_group_rule",
											"values": {
												"cidr_blocks": [
													"0.0.0.0/0",
												],
												"description":      null,
												"from_port":        4647,
												"ipv6_cidr_blocks": null,
												"prefix_list_ids":  null,
												"protocol":         "tcp",
												"self":             false,
												"to_port":          4647,
												"type":             "ingress",
											},
										},
										{
											"address":        "module.nomad.module.clients.module.security_group_rules.aws_security_group_rule.allow_serf_tcp_inbound[0]",
											"index":          0,
											"mode":           "managed",
											"name":           "allow_serf_tcp_inbound",
											"provider_name":  "registry.terraform.io/hashicorp/aws",
											"schema_version": 2,
											"sensitive_values": {
												"cidr_blocks": [
													false,
												],
											},
											"type": "aws_security_group_rule",
											"values": {
												"cidr_blocks": [
													"0.0.0.0/0",
												],
												"description":      null,
												"from_port":        4648,
												"ipv6_cidr_blocks": null,
												"prefix_list_ids":  null,
												"protocol":         "tcp",
												"self":             false,
												"to_port":          4648,
												"type":             "ingress",
											},
										},
										{
											"address":        "module.nomad.module.clients.module.security_group_rules.aws_security_group_rule.allow_serf_udp_inbound[0]",
											"index":          0,
											"mode":           "managed",
											"name":           "allow_serf_udp_inbound",
											"provider_name":  "registry.terraform.io/hashicorp/aws",
											"schema_version": 2,
											"sensitive_values": {
												"cidr_blocks": [
													false,
												],
											},
											"type": "aws_security_group_rule",
											"values": {
												"cidr_blocks": [
													"0.0.0.0/0",
												],
												"description":      null,
												"from_port":        4648,
												"ipv6_cidr_blocks": null,
												"prefix_list_ids":  null,
												"protocol":         "udp",
												"self":             false,
												"to_port":          4648,
												"type":             "ingress",
											},
										},
									],
								},
							],
							"resources": [
								{
									"address":        "module.nomad.module.clients.aws_autoscaling_group.autoscaling_group",
									"mode":           "managed",
									"name":           "autoscaling_group",
									"provider_name":  "registry.terraform.io/hashicorp/aws",
									"schema_version": 0,
									"sensitive_values": {
										"availability_zones":     [],
										"initial_lifecycle_hook": [],
										"instance_refresh":       [],
										"launch_template":        [],
										"mixed_instances_policy": [],
										"tag": [
											{},
											{},
											{},
										],
										"termination_policies": [
											false,
										],
										"vpc_zone_identifier": [
											false,
											false,
											false,
										],
										"warm_pool": [],
									},
									"type": "aws_autoscaling_group",
									"values": {
										"capacity_rebalance":        null,
										"desired_capacity":          1,
										"enabled_metrics":           null,
										"force_delete":              false,
										"force_delete_warm_pool":    false,
										"health_check_grace_period": 300,
										"health_check_type":         "EC2",
										"initial_lifecycle_hook":    [],
										"instance_refresh":          [],
										"launch_template":           [],
										"load_balancers":            null,
										"max_instance_lifetime":     null,
										"max_size":                  1,
										"metrics_granularity":       "1Minute",
										"min_elb_capacity":          null,
										"min_size":                  1,
										"mixed_instances_policy":    [],
										"placement_group":           null,
										"protect_from_scale_in":     false,
										"suspended_processes":       null,
										"tag": [
											{
												"key": "Environment",
												"propagate_at_launch": true,
												"value":               "development",
											},
											{
												"key": "Name",
												"propagate_at_launch": true,
												"value":               "strawb-client",
											},
											{
												"key": "nomad-clients",
												"propagate_at_launch": true,
												"value":               "strawb",
											},
										],
										"tags":              null,
										"target_group_arns": null,
										"termination_policies": [
											"Default",
										],
										"timeouts": null,
										"vpc_zone_identifier": [
											"subnet-25bfee4c",
											"subnet-4fa23f35",
											"subnet-76f0533a",
										],
										"wait_for_capacity_timeout": "10m",
										"wait_for_elb_capacity":     null,
										"warm_pool":                 [],
									},
								},
								{
									"address":        "module.nomad.module.clients.aws_iam_instance_profile.instance_profile",
									"mode":           "managed",
									"name":           "instance_profile",
									"provider_name":  "registry.terraform.io/hashicorp/aws",
									"schema_version": 0,
									"sensitive_values": {
										"tags_all": {},
									},
									"type": "aws_iam_instance_profile",
									"values": {
										"name_prefix": "strawb-client",
										"path":        "/",
										"tags":        null,
										"tags_all": {
											"Name": "StrawbTest",
										},
									},
								},
								{
									"address":        "module.nomad.module.clients.aws_iam_role.instance_role",
									"mode":           "managed",
									"name":           "instance_role",
									"provider_name":  "registry.terraform.io/hashicorp/aws",
									"schema_version": 0,
									"sensitive_values": {
										"inline_policy":       [],
										"managed_policy_arns": [],
										"tags_all":            {},
									},
									"type": "aws_iam_role",
									"values": {
										"assume_role_policy":    "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
										"description":           null,
										"force_detach_policies": false,
										"max_session_duration":  3600,
										"name_prefix":           "strawb-client",
										"path":                  "/",
										"permissions_boundary":  null,
										"tags":                  null,
										"tags_all": {
											"Name": "StrawbTest",
										},
									},
								},
								{
									"address":        "module.nomad.module.clients.aws_launch_configuration.launch_configuration",
									"mode":           "managed",
									"name":           "launch_configuration",
									"provider_name":  "registry.terraform.io/hashicorp/aws",
									"schema_version": 0,
									"sensitive_values": {
										"ebs_block_device":       [],
										"ephemeral_block_device": [],
										"metadata_options":       [],
										"root_block_device": [
											{},
										],
										"security_groups": [],
									},
									"type": "aws_launch_configuration",
									"values": {
										"associate_public_ip_address": false,
										"ebs_optimized":               false,
										"enable_monitoring":           true,
										"ephemeral_block_device":      [],
										"image_id":                    "ami-0f5b77f5e53001306",
										"instance_type":               "t3.micro",
										"name_prefix":                 "strawb-client-",
										"placement_tenancy":           "default",
										"root_block_device": [
											{
												"delete_on_termination": true,
												"volume_size":           50,
												"volume_type":           "standard",
											},
										],
										"spot_price":                       null,
										"user_data":                        "26ba1752933a14e5a56d0ef439bbcdf8b5c0842c",
										"user_data_base64":                 null,
										"vpc_classic_link_id":              null,
										"vpc_classic_link_security_groups": null,
									},
								},
								{
									"address":        "module.nomad.module.clients.aws_security_group.lc_security_group",
									"mode":           "managed",
									"name":           "lc_security_group",
									"provider_name":  "registry.terraform.io/hashicorp/aws",
									"schema_version": 1,
									"sensitive_values": {
										"egress":   [],
										"ingress":  [],
										"tags_all": {},
									},
									"type": "aws_security_group",
									"values": {
										"description":            "Security group for the strawb-client launch configuration",
										"name_prefix":            "strawb-client",
										"revoke_rules_on_delete": false,
										"tags": null,
										"tags_all": {
											"Name": "StrawbTest",
										},
										"timeouts": null,
										"vpc_id":   "vpc-6b8dc203",
									},
								},
								{
									"address":        "module.nomad.module.clients.aws_security_group_rule.allow_all_outbound",
									"mode":           "managed",
									"name":           "allow_all_outbound",
									"provider_name":  "registry.terraform.io/hashicorp/aws",
									"schema_version": 2,
									"sensitive_values": {
										"cidr_blocks": [
											false,
										],
									},
									"type": "aws_security_group_rule",
									"values": {
										"cidr_blocks": [
											"0.0.0.0/0",
										],
										"description":      null,
										"from_port":        0,
										"ipv6_cidr_blocks": null,
										"prefix_list_ids":  null,
										"protocol":         "-1",
										"self":             false,
										"to_port":          0,
										"type":             "egress",
									},
								},
								{
									"address":        "module.nomad.module.clients.aws_security_group_rule.allow_ssh_inbound[0]",
									"index":          0,
									"mode":           "managed",
									"name":           "allow_ssh_inbound",
									"provider_name":  "registry.terraform.io/hashicorp/aws",
									"schema_version": 2,
									"sensitive_values": {
										"cidr_blocks": [
											false,
										],
									},
									"type": "aws_security_group_rule",
									"values": {
										"cidr_blocks": [
											"0.0.0.0/0",
										],
										"description":      null,
										"from_port":        22,
										"ipv6_cidr_blocks": null,
										"prefix_list_ids":  null,
										"protocol":         "tcp",
										"self":             false,
										"to_port":          22,
										"type":             "ingress",
									},
								},
							],
						},
						{
							"address": "module.nomad.module.consul_iam_policies",
							"resources": [
								{
									"address":          "module.nomad.module.consul_iam_policies.aws_iam_role_policy.auto_discover_cluster[0]",
									"index":            0,
									"mode":             "managed",
									"name":             "auto_discover_cluster",
									"provider_name":    "registry.terraform.io/hashicorp/aws",
									"schema_version":   0,
									"sensitive_values": {},
									"type":             "aws_iam_role_policy",
									"values": {
										"name":        "auto-discover-cluster",
										"name_prefix": null,
										"policy":      "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeTags\",\n        \"ec2:DescribeInstances\",\n        \"autoscaling:DescribeAutoScalingGroups\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
									},
								},
							],
						},
						{
							"address": "module.nomad.module.nomad_security_group_rules",
							"resources": [
								{
									"address":        "module.nomad.module.nomad_security_group_rules.aws_security_group_rule.allow_http_inbound[0]",
									"index":          0,
									"mode":           "managed",
									"name":           "allow_http_inbound",
									"provider_name":  "registry.terraform.io/hashicorp/aws",
									"schema_version": 2,
									"sensitive_values": {
										"cidr_blocks": [
											false,
										],
									},
									"type": "aws_security_group_rule",
									"values": {
										"cidr_blocks": [
											"0.0.0.0/0",
										],
										"description":      null,
										"from_port":        4646,
										"ipv6_cidr_blocks": null,
										"prefix_list_ids":  null,
										"protocol":         "tcp",
										"self":             false,
										"to_port":          4646,
										"type":             "ingress",
									},
								},
								{
									"address":        "module.nomad.module.nomad_security_group_rules.aws_security_group_rule.allow_rpc_inbound[0]",
									"index":          0,
									"mode":           "managed",
									"name":           "allow_rpc_inbound",
									"provider_name":  "registry.terraform.io/hashicorp/aws",
									"schema_version": 2,
									"sensitive_values": {
										"cidr_blocks": [
											false,
										],
									},
									"type": "aws_security_group_rule",
									"values": {
										"cidr_blocks": [
											"0.0.0.0/0",
										],
										"description":      null,
										"from_port":        4647,
										"ipv6_cidr_blocks": null,
										"prefix_list_ids":  null,
										"protocol":         "tcp",
										"self":             false,
										"to_port":          4647,
										"type":             "ingress",
									},
								},
								{
									"address":        "module.nomad.module.nomad_security_group_rules.aws_security_group_rule.allow_serf_tcp_inbound[0]",
									"index":          0,
									"mode":           "managed",
									"name":           "allow_serf_tcp_inbound",
									"provider_name":  "registry.terraform.io/hashicorp/aws",
									"schema_version": 2,
									"sensitive_values": {
										"cidr_blocks": [
											false,
										],
									},
									"type": "aws_security_group_rule",
									"values": {
										"cidr_blocks": [
											"0.0.0.0/0",
										],
										"description":      null,
										"from_port":        4648,
										"ipv6_cidr_blocks": null,
										"prefix_list_ids":  null,
										"protocol":         "tcp",
										"self":             false,
										"to_port":          4648,
										"type":             "ingress",
									},
								},
								{
									"address":        "module.nomad.module.nomad_security_group_rules.aws_security_group_rule.allow_serf_udp_inbound[0]",
									"index":          0,
									"mode":           "managed",
									"name":           "allow_serf_udp_inbound",
									"provider_name":  "registry.terraform.io/hashicorp/aws",
									"schema_version": 2,
									"sensitive_values": {
										"cidr_blocks": [
											false,
										],
									},
									"type": "aws_security_group_rule",
									"values": {
										"cidr_blocks": [
											"0.0.0.0/0",
										],
										"description":      null,
										"from_port":        4648,
										"ipv6_cidr_blocks": null,
										"prefix_list_ids":  null,
										"protocol":         "udp",
										"self":             false,
										"to_port":          4648,
										"type":             "ingress",
									},
								},
							],
						},
					],
				},
			],
		},
	},
	"prior_state": {
		"format_version":    "0.2",
		"terraform_version": "1.0.8",
		"values": {
			"root_module": {
				"child_modules": [
					{
						"address": "module.nomad",
						"child_modules": [
							{
								"address": "module.nomad.module.clients",
								"resources": [
									{
										"address":        "module.nomad.module.clients.data.aws_iam_policy_document.instance_role",
										"mode":           "data",
										"name":           "instance_role",
										"provider_name":  "registry.terraform.io/hashicorp/aws",
										"schema_version": 0,
										"sensitive_values": {
											"statement": [
												{
													"actions": [
														false,
													],
													"condition":      [],
													"not_actions":    [],
													"not_principals": [],
													"not_resources":  [],
													"principals": [
														{
															"identifiers": [
																false,
															],
														},
													],
													"resources": [],
												},
											],
										},
										"type": "aws_iam_policy_document",
										"values": {
											"id":                        "1903849331",
											"json":                      "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
											"override_json":             null,
											"override_policy_documents": null,
											"policy_id":                 null,
											"source_json":               null,
											"source_policy_documents":   null,
											"statement": [
												{
													"actions": [
														"sts:AssumeRole",
													],
													"condition":      [],
													"effect":         "Allow",
													"not_actions":    [],
													"not_principals": [],
													"not_resources":  [],
													"principals": [
														{
															"identifiers": [
																"ec2.amazonaws.com",
															],
															"type": "Service",
														},
													],
													"resources": [],
													"sid":       "",
												},
											],
											"version": "2012-10-17",
										},
									},
								],
							},
							{
								"address": "module.nomad.module.consul_iam_policies",
								"resources": [
									{
										"address":        "module.nomad.module.consul_iam_policies.data.aws_iam_policy_document.auto_discover_cluster",
										"mode":           "data",
										"name":           "auto_discover_cluster",
										"provider_name":  "registry.terraform.io/hashicorp/aws",
										"schema_version": 0,
										"sensitive_values": {
											"statement": [
												{
													"actions": [
														false,
														false,
														false,
													],
													"condition":      [],
													"not_actions":    [],
													"not_principals": [],
													"not_resources":  [],
													"principals":     [],
													"resources": [
														false,
													],
												},
											],
										},
										"type": "aws_iam_policy_document",
										"values": {
											"id":                        "2069168386",
											"json":                      "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeTags\",\n        \"ec2:DescribeInstances\",\n        \"autoscaling:DescribeAutoScalingGroups\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
											"override_json":             null,
											"override_policy_documents": null,
											"policy_id":                 null,
											"source_json":               null,
											"source_policy_documents":   null,
											"statement": [
												{
													"actions": [
														"autoscaling:DescribeAutoScalingGroups",
														"ec2:DescribeInstances",
														"ec2:DescribeTags",
													],
													"condition":      [],
													"effect":         "Allow",
													"not_actions":    [],
													"not_principals": [],
													"not_resources":  [],
													"principals":     [],
													"resources": [
														"*",
													],
													"sid": "",
												},
											],
											"version": "2012-10-17",
										},
									},
								],
							},
							{
								"address": "module.nomad.module.servers",
								"child_modules": [
									{
										"address": "module.nomad.module.servers.module.iam_policies",
										"resources": [
											{
												"address":        "module.nomad.module.servers.module.iam_policies.data.aws_iam_policy_document.auto_discover_cluster",
												"mode":           "data",
												"name":           "auto_discover_cluster",
												"provider_name":  "registry.terraform.io/hashicorp/aws",
												"schema_version": 0,
												"sensitive_values": {
													"statement": [
														{
															"actions": [
																false,
																false,
																false,
															],
															"condition":      [],
															"not_actions":    [],
															"not_principals": [],
															"not_resources":  [],
															"principals":     [],
															"resources": [
																false,
															],
														},
													],
												},
												"type": "aws_iam_policy_document",
												"values": {
													"id":                        "2069168386",
													"json":                      "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeTags\",\n        \"ec2:DescribeInstances\",\n        \"autoscaling:DescribeAutoScalingGroups\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
													"override_json":             null,
													"override_policy_documents": null,
													"policy_id":                 null,
													"source_json":               null,
													"source_policy_documents":   null,
													"statement": [
														{
															"actions": [
																"autoscaling:DescribeAutoScalingGroups",
																"ec2:DescribeInstances",
																"ec2:DescribeTags",
															],
															"condition":      [],
															"effect":         "Allow",
															"not_actions":    [],
															"not_principals": [],
															"not_resources":  [],
															"principals":     [],
															"resources": [
																"*",
															],
															"sid": "",
														},
													],
													"version": "2012-10-17",
												},
											},
										],
									},
								],
								"resources": [
									{
										"address":        "module.nomad.module.servers.data.aws_iam_policy_document.instance_role",
										"mode":           "data",
										"name":           "instance_role",
										"provider_name":  "registry.terraform.io/hashicorp/aws",
										"schema_version": 0,
										"sensitive_values": {
											"statement": [
												{
													"actions": [
														false,
													],
													"condition":      [],
													"not_actions":    [],
													"not_principals": [],
													"not_resources":  [],
													"principals": [
														{
															"identifiers": [
																false,
															],
														},
													],
													"resources": [],
												},
											],
										},
										"type": "aws_iam_policy_document",
										"values": {
											"id":                        "1903849331",
											"json":                      "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
											"override_json":             null,
											"override_policy_documents": null,
											"policy_id":                 null,
											"source_json":               null,
											"source_policy_documents":   null,
											"statement": [
												{
													"actions": [
														"sts:AssumeRole",
													],
													"condition":      [],
													"effect":         "Allow",
													"not_actions":    [],
													"not_principals": [],
													"not_resources":  [],
													"principals": [
														{
															"identifiers": [
																"ec2.amazonaws.com",
															],
															"type": "Service",
														},
													],
													"resources": [],
													"sid":       "",
												},
											],
											"version": "2012-10-17",
										},
									},
								],
							},
						],
						"resources": [
							{
								"address":        "module.nomad.data.aws_ami.nomad_consul",
								"mode":           "data",
								"name":           "nomad_consul",
								"provider_name":  "registry.terraform.io/hashicorp/aws",
								"schema_version": 0,
								"sensitive_values": {
									"block_device_mappings": [
										{
											"ebs": {},
										},
										{
											"ebs": {},
										},
										{
											"ebs": {},
										},
									],
									"filter": [
										{
											"values": [
												false,
											],
										},
										{
											"values": [
												false,
											],
										},
										{
											"values": [
												false,
											],
										},
									],
									"owners": [
										false,
									],
									"product_codes": [],
									"state_reason":  {},
									"tags":          {},
								},
								"type": "aws_ami",
								"values": {
									"architecture": "x86_64",
									"arn":          "arn:aws:ec2:eu-west-2::image/ami-0f5b77f5e53001306",
									"block_device_mappings": [
										{
											"device_name": "/dev/sda1",
											"ebs": {
												"delete_on_termination": "true",
												"encrypted":             "false",
												"iops":                  "0",
												"snapshot_id":           "snap-04082771d1e1555e4",
												"throughput":            "0",
												"volume_size":           "8",
												"volume_type":           "gp2",
											},
											"no_device":    "",
											"virtual_name": "",
										},
										{
											"device_name":  "/dev/sdb",
											"ebs":          {},
											"no_device":    "",
											"virtual_name": "ephemeral0",
										},
										{
											"device_name":  "/dev/sdc",
											"ebs":          {},
											"no_device":    "",
											"virtual_name": "ephemeral1",
										},
									],
									"creation_date":    "2018-10-02T11:16:55.000Z",
									"description":      "An Ubuntu 16.04 AMI that has Nomad and Consul installed.",
									"ena_support":      true,
									"executable_users": null,
									"filter": [
										{
											"name": "is-public",
											"values": [
												"true",
											],
										},
										{
											"name": "name",
											"values": [
												"nomad-consul-ubuntu-*",
											],
										},
										{
											"name": "virtualization-type",
											"values": [
												"hvm",
											],
										},
									],
									"hypervisor":        "xen",
									"id":                "ami-0f5b77f5e53001306",
									"image_id":          "ami-0f5b77f5e53001306",
									"image_location":    "562637147889/nomad-consul-ubuntu-2018-10-02T11-11-46Z",
									"image_owner_alias": null,
									"image_type":        "machine",
									"kernel_id":         null,
									"most_recent":       true,
									"name":              "nomad-consul-ubuntu-2018-10-02T11-11-46Z",
									"name_regex":        null,
									"owner_id":          "562637147889",
									"owners": [
										"562637147889",
									],
									"platform":          null,
									"platform_details":  "Linux/UNIX",
									"product_codes":     [],
									"public":            true,
									"ramdisk_id":        null,
									"root_device_name":  "/dev/sda1",
									"root_device_type":  "ebs",
									"root_snapshot_id":  "snap-04082771d1e1555e4",
									"sriov_net_support": "simple",
									"state":             "available",
									"state_reason": {
										"code":    "UNSET",
										"message": "UNSET",
									},
									"tags":                {},
									"usage_operation":     "RunInstances",
									"virtualization_type": "hvm",
								},
							},
							{
								"address":          "module.nomad.data.aws_region.current",
								"mode":             "data",
								"name":             "current",
								"provider_name":    "registry.terraform.io/hashicorp/aws",
								"schema_version":   0,
								"sensitive_values": {},
								"type":             "aws_region",
								"values": {
									"description": "Europe (London)",
									"endpoint":    "ec2.eu-west-2.amazonaws.com",
									"id":          "eu-west-2",
									"name":        "eu-west-2",
								},
							},
							{
								"address":        "module.nomad.data.aws_subnet_ids.default",
								"mode":           "data",
								"name":           "default",
								"provider_name":  "registry.terraform.io/hashicorp/aws",
								"schema_version": 0,
								"sensitive_values": {
									"ids": [
										false,
										false,
										false,
									],
								},
								"type": "aws_subnet_ids",
								"values": {
									"filter": null,
									"id":     "vpc-6b8dc203",
									"ids": [
										"subnet-25bfee4c",
										"subnet-4fa23f35",
										"subnet-76f0533a",
									],
									"tags":   null,
									"vpc_id": "vpc-6b8dc203",
								},
							},
							{
								"address":        "module.nomad.data.aws_vpc.default",
								"mode":           "data",
								"name":           "default",
								"provider_name":  "registry.terraform.io/hashicorp/aws",
								"schema_version": 0,
								"sensitive_values": {
									"cidr_block_associations": [
										{},
									],
									"tags": {},
								},
								"type": "aws_vpc",
								"values": {
									"arn":        "arn:aws:ec2:eu-west-2:711129375688:vpc/vpc-6b8dc203",
									"cidr_block": "172.31.0.0/16",
									"cidr_block_associations": [
										{
											"association_id": "vpc-cidr-assoc-2296b14a",
											"cidr_block":     "172.31.0.0/16",
											"state":          "associated",
										},
									],
									"default":              true,
									"dhcp_options_id":      "dopt-ab3117c3",
									"enable_dns_hostnames": true,
									"enable_dns_support":   true,
									"filter":               null,
									"id":                   "vpc-6b8dc203",
									"instance_tenancy":     "default",
									"ipv6_association_id":  null,
									"ipv6_cidr_block":      null,
									"main_route_table_id":  "rtb-fca99194",
									"owner_id":             "711129375688",
									"state":                "available",
									"tags":                 {},
								},
							},
							{
								"address":        "module.nomad.data.template_file.user_data_client",
								"mode":           "data",
								"name":           "user_data_client",
								"provider_name":  "registry.terraform.io/hashicorp/template",
								"schema_version": 0,
								"sensitive_values": {
									"vars": {},
								},
								"type": "template_file",
								"values": {
									"filename": null,
									"id":       "2fe48dd35b2ba83e0abb0d46e72dceca0577faa1b264073be4a5f7bec22e1378",
									"rendered": "#!/bin/bash\n# This script is meant to be run in the User Data of each EC2 Instance while it's booting. The script uses the\n# run-nomad and run-consul scripts to configure and start Nomad and Consul in client mode. Note that this script\n# assumes it's running in an AMI built from the Packer template in examples/nomad-consul-ami/nomad-consul.json.\n\nset -e\n\n# Send the log output from this script to user-data.log, syslog, and the console\n# From: https://alestic.com/2010/12/ec2-user-data-output/\nexec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1\n\n# These variables are passed in via Terraform template interplation\n/opt/consul/bin/run-consul --client --cluster-tag-key \"nomad-servers\" --cluster-tag-value \"auto-join\"\n/opt/nomad/bin/run-nomad --client\n\n",
									"template": "#!/bin/bash\n# This script is meant to be run in the User Data of each EC2 Instance while it's booting. The script uses the\n# run-nomad and run-consul scripts to configure and start Nomad and Consul in client mode. Note that this script\n# assumes it's running in an AMI built from the Packer template in examples/nomad-consul-ami/nomad-consul.json.\n\nset -e\n\n# Send the log output from this script to user-data.log, syslog, and the console\n# From: https://alestic.com/2010/12/ec2-user-data-output/\nexec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1\n\n# These variables are passed in via Terraform template interplation\n/opt/consul/bin/run-consul --client --cluster-tag-key \"${cluster_tag_key}\" --cluster-tag-value \"${cluster_tag_value}\"\n/opt/nomad/bin/run-nomad --client\n\n",
									"vars": {
										"cluster_tag_key":   "nomad-servers",
										"cluster_tag_value": "auto-join",
									},
								},
							},
							{
								"address":        "module.nomad.data.template_file.user_data_server",
								"mode":           "data",
								"name":           "user_data_server",
								"provider_name":  "registry.terraform.io/hashicorp/template",
								"schema_version": 0,
								"sensitive_values": {
									"vars": {},
								},
								"type": "template_file",
								"values": {
									"filename": null,
									"id":       "909e10405d77ec82c547fcae6d2d7efafe8a129bbe37ba18f3da8469508b66b2",
									"rendered": "#!/bin/bash\n# This script is meant to be run in the User Data of each EC2 Instance while it's booting. The script uses the\n# run-nomad and run-consul scripts to configure and start Consul and Nomad in server mode. Note that this script\n# assumes it's running in an AMI built from the Packer template in examples/nomad-consul-ami/nomad-consul.json.\n\nset -e\n\n# Send the log output from this script to user-data.log, syslog, and the console\n# From: https://alestic.com/2010/12/ec2-user-data-output/\nexec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1\n\n# These variables are passed in via Terraform template interplation\n/opt/consul/bin/run-consul --server --cluster-tag-key \"nomad-servers\" --cluster-tag-value \"auto-join\"\n/opt/nomad/bin/run-nomad --server --num-servers \"3\"",
									"template": "#!/bin/bash\n# This script is meant to be run in the User Data of each EC2 Instance while it's booting. The script uses the\n# run-nomad and run-consul scripts to configure and start Consul and Nomad in server mode. Note that this script\n# assumes it's running in an AMI built from the Packer template in examples/nomad-consul-ami/nomad-consul.json.\n\nset -e\n\n# Send the log output from this script to user-data.log, syslog, and the console\n# From: https://alestic.com/2010/12/ec2-user-data-output/\nexec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1\n\n# These variables are passed in via Terraform template interplation\n/opt/consul/bin/run-consul --server --cluster-tag-key \"${cluster_tag_key}\" --cluster-tag-value \"${cluster_tag_value}\"\n/opt/nomad/bin/run-nomad --server --num-servers \"${num_servers}\"",
									"vars": {
										"cluster_tag_key":   "nomad-servers",
										"cluster_tag_value": "auto-join",
										"num_servers":       "3",
									},
								},
							},
						],
					},
				],
			},
		},
	},
	"resource_changes": [
		{
			"address": "module.nomad.module.clients.aws_autoscaling_group.autoscaling_group",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"capacity_rebalance":        null,
					"desired_capacity":          1,
					"enabled_metrics":           null,
					"force_delete":              false,
					"force_delete_warm_pool":    false,
					"health_check_grace_period": 300,
					"health_check_type":         "EC2",
					"initial_lifecycle_hook":    [],
					"instance_refresh":          [],
					"launch_template":           [],
					"load_balancers":            null,
					"max_instance_lifetime":     null,
					"max_size":                  1,
					"metrics_granularity":       "1Minute",
					"min_elb_capacity":          null,
					"min_size":                  1,
					"mixed_instances_policy":    [],
					"placement_group":           null,
					"protect_from_scale_in":     false,
					"suspended_processes":       null,
					"tag": [
						{
							"key": "Environment",
							"propagate_at_launch": true,
							"value":               "development",
						},
						{
							"key": "Name",
							"propagate_at_launch": true,
							"value":               "strawb-client",
						},
						{
							"key": "nomad-clients",
							"propagate_at_launch": true,
							"value":               "strawb",
						},
					],
					"tags":              null,
					"target_group_arns": null,
					"termination_policies": [
						"Default",
					],
					"timeouts": null,
					"vpc_zone_identifier": [
						"subnet-25bfee4c",
						"subnet-4fa23f35",
						"subnet-76f0533a",
					],
					"wait_for_capacity_timeout": "10m",
					"wait_for_elb_capacity":     null,
					"warm_pool":                 [],
				},
				"after_sensitive": {
					"availability_zones":     [],
					"initial_lifecycle_hook": [],
					"instance_refresh":       [],
					"launch_template":        [],
					"mixed_instances_policy": [],
					"tag": [
						{},
						{},
						{},
					],
					"termination_policies": [
						false,
					],
					"vpc_zone_identifier": [
						false,
						false,
						false,
					],
					"warm_pool": [],
				},
				"after_unknown": {
					"arn":                true,
					"availability_zones": true,
					"default_cooldown":   true,
					"id":                 true,
					"initial_lifecycle_hook": [],
					"instance_refresh":       [],
					"launch_configuration":   true,
					"launch_template":        [],
					"mixed_instances_policy": [],
					"name":                    true,
					"name_prefix":             true,
					"service_linked_role_arn": true,
					"tag": [
						{},
						{},
						{},
					],
					"termination_policies": [
						false,
					],
					"vpc_zone_identifier": [
						false,
						false,
						false,
					],
					"warm_pool": [],
				},
				"before":           null,
				"before_sensitive": false,
			},
			"mode":           "managed",
			"module_address": "module.nomad.module.clients",
			"name":           "autoscaling_group",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_autoscaling_group",
		},
		{
			"address": "module.nomad.module.clients.aws_iam_instance_profile.instance_profile",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"name_prefix": "strawb-client",
					"path":        "/",
					"tags":        null,
					"tags_all": {
						"Name": "StrawbTest",
					},
				},
				"after_sensitive": {
					"tags_all": {},
				},
				"after_unknown": {
					"arn":         true,
					"create_date": true,
					"id":          true,
					"name":        true,
					"role":        true,
					"tags_all":    {},
					"unique_id":   true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"mode":           "managed",
			"module_address": "module.nomad.module.clients",
			"name":           "instance_profile",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_instance_profile",
		},
		{
			"address": "module.nomad.module.clients.aws_iam_role.instance_role",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"assume_role_policy":    "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
					"description":           null,
					"force_detach_policies": false,
					"max_session_duration":  3600,
					"name_prefix":           "strawb-client",
					"path":                  "/",
					"permissions_boundary":  null,
					"tags":                  null,
					"tags_all": {
						"Name": "StrawbTest",
					},
				},
				"after_sensitive": {
					"inline_policy":       [],
					"managed_policy_arns": [],
					"tags_all":            {},
				},
				"after_unknown": {
					"arn":                 true,
					"create_date":         true,
					"id":                  true,
					"inline_policy":       true,
					"managed_policy_arns": true,
					"name":                true,
					"tags_all":            {},
					"unique_id":           true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"mode":           "managed",
			"module_address": "module.nomad.module.clients",
			"name":           "instance_role",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_role",
		},
		{
			"address": "module.nomad.module.clients.aws_launch_configuration.launch_configuration",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"associate_public_ip_address": false,
					"ebs_optimized":               false,
					"enable_monitoring":           true,
					"ephemeral_block_device":      [],
					"image_id":                    "ami-0f5b77f5e53001306",
					"instance_type":               "t3.micro",
					"name_prefix":                 "strawb-client-",
					"placement_tenancy":           "default",
					"root_block_device": [
						{
							"delete_on_termination": true,
							"volume_size":           50,
							"volume_type":           "standard",
						},
					],
					"spot_price":                       null,
					"user_data":                        "26ba1752933a14e5a56d0ef439bbcdf8b5c0842c",
					"user_data_base64":                 null,
					"vpc_classic_link_id":              null,
					"vpc_classic_link_security_groups": null,
				},
				"after_sensitive": {
					"ebs_block_device":       [],
					"ephemeral_block_device": [],
					"metadata_options":       [],
					"root_block_device": [
						{},
					],
					"security_groups": [],
				},
				"after_unknown": {
					"arn":                    true,
					"ebs_block_device":       true,
					"ephemeral_block_device": [],
					"iam_instance_profile":   true,
					"id":               true,
					"key_name":         true,
					"metadata_options": true,
					"name":             true,
					"root_block_device": [
						{
							"encrypted":  true,
							"iops":       true,
							"throughput": true,
						},
					],
					"security_groups": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"mode":           "managed",
			"module_address": "module.nomad.module.clients",
			"name":           "launch_configuration",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_launch_configuration",
		},
		{
			"address": "module.nomad.module.clients.aws_security_group.lc_security_group",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description":            "Security group for the strawb-client launch configuration",
					"name_prefix":            "strawb-client",
					"revoke_rules_on_delete": false,
					"tags": null,
					"tags_all": {
						"Name": "StrawbTest",
					},
					"timeouts": null,
					"vpc_id":   "vpc-6b8dc203",
				},
				"after_sensitive": {
					"egress":   [],
					"ingress":  [],
					"tags_all": {},
				},
				"after_unknown": {
					"arn":      true,
					"egress":   true,
					"id":       true,
					"ingress":  true,
					"name":     true,
					"owner_id": true,
					"tags_all": {},
				},
				"before":           null,
				"before_sensitive": false,
			},
			"mode":           "managed",
			"module_address": "module.nomad.module.clients",
			"name":           "lc_security_group",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group",
		},
		{
			"address": "module.nomad.module.clients.aws_security_group_rule.allow_all_outbound",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"cidr_blocks": [
						"0.0.0.0/0",
					],
					"description":      null,
					"from_port":        0,
					"ipv6_cidr_blocks": null,
					"prefix_list_ids":  null,
					"protocol":         "-1",
					"self":             false,
					"to_port":          0,
					"type":             "egress",
				},
				"after_sensitive": {
					"cidr_blocks": [
						false,
					],
				},
				"after_unknown": {
					"cidr_blocks": [
						false,
					],
					"id":                       true,
					"security_group_id":        true,
					"source_security_group_id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"mode":           "managed",
			"module_address": "module.nomad.module.clients",
			"name":           "allow_all_outbound",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.nomad.module.clients.aws_security_group_rule.allow_ssh_inbound[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"cidr_blocks": [
						"0.0.0.0/0",
					],
					"description":      null,
					"from_port":        22,
					"ipv6_cidr_blocks": null,
					"prefix_list_ids":  null,
					"protocol":         "tcp",
					"self":             false,
					"to_port":          22,
					"type":             "ingress",
				},
				"after_sensitive": {
					"cidr_blocks": [
						false,
					],
				},
				"after_unknown": {
					"cidr_blocks": [
						false,
					],
					"id":                       true,
					"security_group_id":        true,
					"source_security_group_id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.clients",
			"name":           "allow_ssh_inbound",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.nomad.module.clients.module.security_group_rules.aws_security_group_rule.allow_http_inbound[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"cidr_blocks": [
						"0.0.0.0/0",
					],
					"description":      null,
					"from_port":        4646,
					"ipv6_cidr_blocks": null,
					"prefix_list_ids":  null,
					"protocol":         "tcp",
					"self":             false,
					"to_port":          4646,
					"type":             "ingress",
				},
				"after_sensitive": {
					"cidr_blocks": [
						false,
					],
				},
				"after_unknown": {
					"cidr_blocks": [
						false,
					],
					"id":                       true,
					"security_group_id":        true,
					"source_security_group_id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.clients.module.security_group_rules",
			"name":           "allow_http_inbound",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.nomad.module.clients.module.security_group_rules.aws_security_group_rule.allow_rpc_inbound[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"cidr_blocks": [
						"0.0.0.0/0",
					],
					"description":      null,
					"from_port":        4647,
					"ipv6_cidr_blocks": null,
					"prefix_list_ids":  null,
					"protocol":         "tcp",
					"self":             false,
					"to_port":          4647,
					"type":             "ingress",
				},
				"after_sensitive": {
					"cidr_blocks": [
						false,
					],
				},
				"after_unknown": {
					"cidr_blocks": [
						false,
					],
					"id":                       true,
					"security_group_id":        true,
					"source_security_group_id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.clients.module.security_group_rules",
			"name":           "allow_rpc_inbound",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.nomad.module.clients.module.security_group_rules.aws_security_group_rule.allow_serf_tcp_inbound[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"cidr_blocks": [
						"0.0.0.0/0",
					],
					"description":      null,
					"from_port":        4648,
					"ipv6_cidr_blocks": null,
					"prefix_list_ids":  null,
					"protocol":         "tcp",
					"self":             false,
					"to_port":          4648,
					"type":             "ingress",
				},
				"after_sensitive": {
					"cidr_blocks": [
						false,
					],
				},
				"after_unknown": {
					"cidr_blocks": [
						false,
					],
					"id":                       true,
					"security_group_id":        true,
					"source_security_group_id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.clients.module.security_group_rules",
			"name":           "allow_serf_tcp_inbound",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.nomad.module.clients.module.security_group_rules.aws_security_group_rule.allow_serf_udp_inbound[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"cidr_blocks": [
						"0.0.0.0/0",
					],
					"description":      null,
					"from_port":        4648,
					"ipv6_cidr_blocks": null,
					"prefix_list_ids":  null,
					"protocol":         "udp",
					"self":             false,
					"to_port":          4648,
					"type":             "ingress",
				},
				"after_sensitive": {
					"cidr_blocks": [
						false,
					],
				},
				"after_unknown": {
					"cidr_blocks": [
						false,
					],
					"id":                       true,
					"security_group_id":        true,
					"source_security_group_id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.clients.module.security_group_rules",
			"name":           "allow_serf_udp_inbound",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.nomad.module.consul_iam_policies.aws_iam_role_policy.auto_discover_cluster[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"name":        "auto-discover-cluster",
					"name_prefix": null,
					"policy":      "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeTags\",\n        \"ec2:DescribeInstances\",\n        \"autoscaling:DescribeAutoScalingGroups\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":   true,
					"role": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.consul_iam_policies",
			"name":           "auto_discover_cluster",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_role_policy",
		},
		{
			"address": "module.nomad.module.nomad_security_group_rules.aws_security_group_rule.allow_http_inbound[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"cidr_blocks": [
						"0.0.0.0/0",
					],
					"description":      null,
					"from_port":        4646,
					"ipv6_cidr_blocks": null,
					"prefix_list_ids":  null,
					"protocol":         "tcp",
					"self":             false,
					"to_port":          4646,
					"type":             "ingress",
				},
				"after_sensitive": {
					"cidr_blocks": [
						false,
					],
				},
				"after_unknown": {
					"cidr_blocks": [
						false,
					],
					"id":                       true,
					"security_group_id":        true,
					"source_security_group_id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.nomad_security_group_rules",
			"name":           "allow_http_inbound",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.nomad.module.nomad_security_group_rules.aws_security_group_rule.allow_rpc_inbound[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"cidr_blocks": [
						"0.0.0.0/0",
					],
					"description":      null,
					"from_port":        4647,
					"ipv6_cidr_blocks": null,
					"prefix_list_ids":  null,
					"protocol":         "tcp",
					"self":             false,
					"to_port":          4647,
					"type":             "ingress",
				},
				"after_sensitive": {
					"cidr_blocks": [
						false,
					],
				},
				"after_unknown": {
					"cidr_blocks": [
						false,
					],
					"id":                       true,
					"security_group_id":        true,
					"source_security_group_id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.nomad_security_group_rules",
			"name":           "allow_rpc_inbound",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.nomad.module.nomad_security_group_rules.aws_security_group_rule.allow_serf_tcp_inbound[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"cidr_blocks": [
						"0.0.0.0/0",
					],
					"description":      null,
					"from_port":        4648,
					"ipv6_cidr_blocks": null,
					"prefix_list_ids":  null,
					"protocol":         "tcp",
					"self":             false,
					"to_port":          4648,
					"type":             "ingress",
				},
				"after_sensitive": {
					"cidr_blocks": [
						false,
					],
				},
				"after_unknown": {
					"cidr_blocks": [
						false,
					],
					"id":                       true,
					"security_group_id":        true,
					"source_security_group_id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.nomad_security_group_rules",
			"name":           "allow_serf_tcp_inbound",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.nomad.module.nomad_security_group_rules.aws_security_group_rule.allow_serf_udp_inbound[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"cidr_blocks": [
						"0.0.0.0/0",
					],
					"description":      null,
					"from_port":        4648,
					"ipv6_cidr_blocks": null,
					"prefix_list_ids":  null,
					"protocol":         "udp",
					"self":             false,
					"to_port":          4648,
					"type":             "ingress",
				},
				"after_sensitive": {
					"cidr_blocks": [
						false,
					],
				},
				"after_unknown": {
					"cidr_blocks": [
						false,
					],
					"id":                       true,
					"security_group_id":        true,
					"source_security_group_id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.nomad_security_group_rules",
			"name":           "allow_serf_udp_inbound",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.nomad.module.servers.aws_autoscaling_group.autoscaling_group",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"capacity_rebalance":        null,
					"desired_capacity":          3,
					"enabled_metrics":           null,
					"force_delete":              false,
					"force_delete_warm_pool":    false,
					"health_check_grace_period": 300,
					"health_check_type":         "EC2",
					"initial_lifecycle_hook":    [],
					"instance_refresh":          [],
					"launch_template":           [],
					"load_balancers":            null,
					"max_instance_lifetime":     null,
					"max_size":                  3,
					"metrics_granularity":       "1Minute",
					"min_elb_capacity":          null,
					"min_size":                  3,
					"mixed_instances_policy":    [],
					"name_prefix":               "strawb-server",
					"placement_group":           null,
					"protect_from_scale_in":     false,
					"suspended_processes":       null,
					"tag": [],
					"tags": [
						{
							"key": "Environment",
							"propagate_at_launch": "true",
							"value":               "development",
						},
						{
							"key": "Name",
							"propagate_at_launch": "true",
							"value":               "strawb-server",
						},
						{
							"key": "nomad-servers",
							"propagate_at_launch": "true",
							"value":               "auto-join",
						},
					],
					"target_group_arns": null,
					"termination_policies": [
						"Default",
					],
					"timeouts": null,
					"vpc_zone_identifier": [
						"subnet-25bfee4c",
						"subnet-4fa23f35",
						"subnet-76f0533a",
					],
					"wait_for_capacity_timeout": "10m",
					"wait_for_elb_capacity":     null,
					"warm_pool":                 [],
				},
				"after_sensitive": {
					"availability_zones":     [],
					"initial_lifecycle_hook": [],
					"instance_refresh":       [],
					"launch_template":        [],
					"mixed_instances_policy": [],
					"tag": [],
					"tags": [
						{},
						{},
						{},
					],
					"termination_policies": [
						false,
					],
					"vpc_zone_identifier": [
						false,
						false,
						false,
					],
					"warm_pool": [],
				},
				"after_unknown": {
					"arn":                true,
					"availability_zones": true,
					"default_cooldown":   true,
					"id":                 true,
					"initial_lifecycle_hook": [],
					"instance_refresh":       [],
					"launch_configuration":   true,
					"launch_template":        [],
					"mixed_instances_policy": [],
					"name": true,
					"service_linked_role_arn": true,
					"tag": [],
					"tags": [
						{},
						{},
						{},
					],
					"termination_policies": [
						false,
					],
					"vpc_zone_identifier": [
						false,
						false,
						false,
					],
					"warm_pool": [],
				},
				"before":           null,
				"before_sensitive": false,
			},
			"mode":           "managed",
			"module_address": "module.nomad.module.servers",
			"name":           "autoscaling_group",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_autoscaling_group",
		},
		{
			"address": "module.nomad.module.servers.aws_iam_instance_profile.instance_profile[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"name_prefix": "strawb-server",
					"path":        "/",
					"tags":        null,
					"tags_all": {
						"Name": "StrawbTest",
					},
				},
				"after_sensitive": {
					"tags_all": {},
				},
				"after_unknown": {
					"arn":         true,
					"create_date": true,
					"id":          true,
					"name":        true,
					"role":        true,
					"tags_all":    {},
					"unique_id":   true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.servers",
			"name":           "instance_profile",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_instance_profile",
		},
		{
			"address": "module.nomad.module.servers.aws_iam_role.instance_role[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"assume_role_policy":    "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
					"description":           null,
					"force_detach_policies": false,
					"max_session_duration":  3600,
					"name_prefix":           "strawb-server",
					"path":                  "/",
					"permissions_boundary":  null,
					"tags":                  null,
					"tags_all": {
						"Name": "StrawbTest",
					},
				},
				"after_sensitive": {
					"inline_policy":       [],
					"managed_policy_arns": [],
					"tags_all":            {},
				},
				"after_unknown": {
					"arn":                 true,
					"create_date":         true,
					"id":                  true,
					"inline_policy":       true,
					"managed_policy_arns": true,
					"name":                true,
					"tags_all":            {},
					"unique_id":           true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.servers",
			"name":           "instance_role",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_role",
		},
		{
			"address": "module.nomad.module.servers.aws_launch_configuration.launch_configuration",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"associate_public_ip_address": false,
					"ebs_optimized":               false,
					"enable_monitoring":           true,
					"ephemeral_block_device":      [],
					"image_id":                    "ami-0f5b77f5e53001306",
					"instance_type":               "t3.micro",
					"name_prefix":                 "strawb-server-",
					"placement_tenancy":           null,
					"root_block_device": [
						{
							"delete_on_termination": true,
							"volume_size":           50,
							"volume_type":           "standard",
						},
					],
					"spot_price":                       null,
					"user_data":                        "cd7b9085e976fe6d57aabd4053ec71dc2d4236ce",
					"user_data_base64":                 null,
					"vpc_classic_link_id":              null,
					"vpc_classic_link_security_groups": null,
				},
				"after_sensitive": {
					"ebs_block_device":       [],
					"ephemeral_block_device": [],
					"metadata_options":       [],
					"root_block_device": [
						{},
					],
					"security_groups": [],
				},
				"after_unknown": {
					"arn":                    true,
					"ebs_block_device":       true,
					"ephemeral_block_device": [],
					"iam_instance_profile":   true,
					"id":               true,
					"key_name":         true,
					"metadata_options": true,
					"name":             true,
					"root_block_device": [
						{
							"encrypted":  true,
							"iops":       true,
							"throughput": true,
						},
					],
					"security_groups": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"mode":           "managed",
			"module_address": "module.nomad.module.servers",
			"name":           "launch_configuration",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_launch_configuration",
		},
		{
			"address": "module.nomad.module.servers.aws_security_group.lc_security_group",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description":            "Security group for the strawb-server launch configuration",
					"name_prefix":            "strawb-server",
					"revoke_rules_on_delete": false,
					"tags": {
						"Name": "strawb-server",
					},
					"tags_all": {
						"Name": "strawb-server",
					},
					"timeouts": null,
					"vpc_id":   "vpc-6b8dc203",
				},
				"after_sensitive": {
					"egress":   [],
					"ingress":  [],
					"tags":     {},
					"tags_all": {},
				},
				"after_unknown": {
					"arn":      true,
					"egress":   true,
					"id":       true,
					"ingress":  true,
					"name":     true,
					"owner_id": true,
					"tags":     {},
					"tags_all": {},
				},
				"before":           null,
				"before_sensitive": false,
			},
			"mode":           "managed",
			"module_address": "module.nomad.module.servers",
			"name":           "lc_security_group",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group",
		},
		{
			"address": "module.nomad.module.servers.aws_security_group_rule.allow_all_outbound",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"cidr_blocks": [
						"0.0.0.0/0",
					],
					"description":      null,
					"from_port":        0,
					"ipv6_cidr_blocks": null,
					"prefix_list_ids":  null,
					"protocol":         "-1",
					"self":             false,
					"to_port":          0,
					"type":             "egress",
				},
				"after_sensitive": {
					"cidr_blocks": [
						false,
					],
				},
				"after_unknown": {
					"cidr_blocks": [
						false,
					],
					"id":                       true,
					"security_group_id":        true,
					"source_security_group_id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"mode":           "managed",
			"module_address": "module.nomad.module.servers",
			"name":           "allow_all_outbound",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.nomad.module.servers.aws_security_group_rule.allow_ssh_inbound[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"cidr_blocks": [
						"0.0.0.0/0",
					],
					"description":      null,
					"from_port":        22,
					"ipv6_cidr_blocks": null,
					"prefix_list_ids":  null,
					"protocol":         "tcp",
					"self":             false,
					"to_port":          22,
					"type":             "ingress",
				},
				"after_sensitive": {
					"cidr_blocks": [
						false,
					],
				},
				"after_unknown": {
					"cidr_blocks": [
						false,
					],
					"id":                       true,
					"security_group_id":        true,
					"source_security_group_id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.servers",
			"name":           "allow_ssh_inbound",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.nomad.module.servers.module.iam_policies.aws_iam_role_policy.auto_discover_cluster[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"name":        "auto-discover-cluster",
					"name_prefix": null,
					"policy":      "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeTags\",\n        \"ec2:DescribeInstances\",\n        \"autoscaling:DescribeAutoScalingGroups\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":   true,
					"role": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.servers.module.iam_policies",
			"name":           "auto_discover_cluster",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_iam_role_policy",
		},
		{
			"address": "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_cli_rpc_inbound[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"cidr_blocks": [
						"0.0.0.0/0",
					],
					"description":      null,
					"from_port":        8400,
					"ipv6_cidr_blocks": null,
					"prefix_list_ids":  null,
					"protocol":         "tcp",
					"self":             false,
					"to_port":          8400,
					"type":             "ingress",
				},
				"after_sensitive": {
					"cidr_blocks": [
						false,
					],
				},
				"after_unknown": {
					"cidr_blocks": [
						false,
					],
					"id":                       true,
					"security_group_id":        true,
					"source_security_group_id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.servers.module.security_group_rules",
			"name":           "allow_cli_rpc_inbound",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_cli_rpc_inbound_from_self",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"cidr_blocks":      null,
					"description":      null,
					"from_port":        8400,
					"ipv6_cidr_blocks": null,
					"prefix_list_ids":  null,
					"protocol":         "tcp",
					"self":             true,
					"to_port":          8400,
					"type":             "ingress",
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":                       true,
					"security_group_id":        true,
					"source_security_group_id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"mode":           "managed",
			"module_address": "module.nomad.module.servers.module.security_group_rules",
			"name":           "allow_cli_rpc_inbound_from_self",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_dns_tcp_inbound[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"cidr_blocks": [
						"0.0.0.0/0",
					],
					"description":      null,
					"from_port":        8600,
					"ipv6_cidr_blocks": null,
					"prefix_list_ids":  null,
					"protocol":         "tcp",
					"self":             false,
					"to_port":          8600,
					"type":             "ingress",
				},
				"after_sensitive": {
					"cidr_blocks": [
						false,
					],
				},
				"after_unknown": {
					"cidr_blocks": [
						false,
					],
					"id":                       true,
					"security_group_id":        true,
					"source_security_group_id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.servers.module.security_group_rules",
			"name":           "allow_dns_tcp_inbound",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_dns_tcp_inbound_from_self",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"cidr_blocks":      null,
					"description":      null,
					"from_port":        8600,
					"ipv6_cidr_blocks": null,
					"prefix_list_ids":  null,
					"protocol":         "tcp",
					"self":             true,
					"to_port":          8600,
					"type":             "ingress",
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":                       true,
					"security_group_id":        true,
					"source_security_group_id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"mode":           "managed",
			"module_address": "module.nomad.module.servers.module.security_group_rules",
			"name":           "allow_dns_tcp_inbound_from_self",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_dns_udp_inbound[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"cidr_blocks": [
						"0.0.0.0/0",
					],
					"description":      null,
					"from_port":        8600,
					"ipv6_cidr_blocks": null,
					"prefix_list_ids":  null,
					"protocol":         "udp",
					"self":             false,
					"to_port":          8600,
					"type":             "ingress",
				},
				"after_sensitive": {
					"cidr_blocks": [
						false,
					],
				},
				"after_unknown": {
					"cidr_blocks": [
						false,
					],
					"id":                       true,
					"security_group_id":        true,
					"source_security_group_id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.servers.module.security_group_rules",
			"name":           "allow_dns_udp_inbound",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_dns_udp_inbound_from_self",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"cidr_blocks":      null,
					"description":      null,
					"from_port":        8600,
					"ipv6_cidr_blocks": null,
					"prefix_list_ids":  null,
					"protocol":         "udp",
					"self":             true,
					"to_port":          8600,
					"type":             "ingress",
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":                       true,
					"security_group_id":        true,
					"source_security_group_id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"mode":           "managed",
			"module_address": "module.nomad.module.servers.module.security_group_rules",
			"name":           "allow_dns_udp_inbound_from_self",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_http_api_inbound[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"cidr_blocks": [
						"0.0.0.0/0",
					],
					"description":      null,
					"from_port":        8500,
					"ipv6_cidr_blocks": null,
					"prefix_list_ids":  null,
					"protocol":         "tcp",
					"self":             false,
					"to_port":          8500,
					"type":             "ingress",
				},
				"after_sensitive": {
					"cidr_blocks": [
						false,
					],
				},
				"after_unknown": {
					"cidr_blocks": [
						false,
					],
					"id":                       true,
					"security_group_id":        true,
					"source_security_group_id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.servers.module.security_group_rules",
			"name":           "allow_http_api_inbound",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_http_api_inbound_from_self",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"cidr_blocks":      null,
					"description":      null,
					"from_port":        8500,
					"ipv6_cidr_blocks": null,
					"prefix_list_ids":  null,
					"protocol":         "tcp",
					"self":             true,
					"to_port":          8500,
					"type":             "ingress",
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":                       true,
					"security_group_id":        true,
					"source_security_group_id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"mode":           "managed",
			"module_address": "module.nomad.module.servers.module.security_group_rules",
			"name":           "allow_http_api_inbound_from_self",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_serf_wan_tcp_inbound[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"cidr_blocks": [
						"0.0.0.0/0",
					],
					"description":      null,
					"from_port":        8302,
					"ipv6_cidr_blocks": null,
					"prefix_list_ids":  null,
					"protocol":         "tcp",
					"self":             false,
					"to_port":          8302,
					"type":             "ingress",
				},
				"after_sensitive": {
					"cidr_blocks": [
						false,
					],
				},
				"after_unknown": {
					"cidr_blocks": [
						false,
					],
					"id":                       true,
					"security_group_id":        true,
					"source_security_group_id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.servers.module.security_group_rules",
			"name":           "allow_serf_wan_tcp_inbound",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_serf_wan_tcp_inbound_from_self",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"cidr_blocks":      null,
					"description":      null,
					"from_port":        8302,
					"ipv6_cidr_blocks": null,
					"prefix_list_ids":  null,
					"protocol":         "tcp",
					"self":             true,
					"to_port":          8302,
					"type":             "ingress",
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":                       true,
					"security_group_id":        true,
					"source_security_group_id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"mode":           "managed",
			"module_address": "module.nomad.module.servers.module.security_group_rules",
			"name":           "allow_serf_wan_tcp_inbound_from_self",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_serf_wan_udp_inbound[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"cidr_blocks": [
						"0.0.0.0/0",
					],
					"description":      null,
					"from_port":        8302,
					"ipv6_cidr_blocks": null,
					"prefix_list_ids":  null,
					"protocol":         "udp",
					"self":             false,
					"to_port":          8302,
					"type":             "ingress",
				},
				"after_sensitive": {
					"cidr_blocks": [
						false,
					],
				},
				"after_unknown": {
					"cidr_blocks": [
						false,
					],
					"id":                       true,
					"security_group_id":        true,
					"source_security_group_id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.servers.module.security_group_rules",
			"name":           "allow_serf_wan_udp_inbound",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_serf_wan_udp_inbound_from_self",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"cidr_blocks":      null,
					"description":      null,
					"from_port":        8302,
					"ipv6_cidr_blocks": null,
					"prefix_list_ids":  null,
					"protocol":         "udp",
					"self":             true,
					"to_port":          8302,
					"type":             "ingress",
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":                       true,
					"security_group_id":        true,
					"source_security_group_id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"mode":           "managed",
			"module_address": "module.nomad.module.servers.module.security_group_rules",
			"name":           "allow_serf_wan_udp_inbound_from_self",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_server_rpc_inbound[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"cidr_blocks": [
						"0.0.0.0/0",
					],
					"description":      null,
					"from_port":        8300,
					"ipv6_cidr_blocks": null,
					"prefix_list_ids":  null,
					"protocol":         "tcp",
					"self":             false,
					"to_port":          8300,
					"type":             "ingress",
				},
				"after_sensitive": {
					"cidr_blocks": [
						false,
					],
				},
				"after_unknown": {
					"cidr_blocks": [
						false,
					],
					"id":                       true,
					"security_group_id":        true,
					"source_security_group_id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.servers.module.security_group_rules",
			"name":           "allow_server_rpc_inbound",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.nomad.module.servers.module.security_group_rules.aws_security_group_rule.allow_server_rpc_inbound_from_self",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"cidr_blocks":      null,
					"description":      null,
					"from_port":        8300,
					"ipv6_cidr_blocks": null,
					"prefix_list_ids":  null,
					"protocol":         "tcp",
					"self":             true,
					"to_port":          8300,
					"type":             "ingress",
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":                       true,
					"security_group_id":        true,
					"source_security_group_id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"mode":           "managed",
			"module_address": "module.nomad.module.servers.module.security_group_rules",
			"name":           "allow_server_rpc_inbound_from_self",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.nomad.module.servers.module.security_group_rules.module.client_security_group_rules.aws_security_group_rule.allow_serf_lan_tcp_inbound[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"cidr_blocks": [
						"0.0.0.0/0",
					],
					"description":      null,
					"from_port":        8301,
					"ipv6_cidr_blocks": null,
					"prefix_list_ids":  null,
					"protocol":         "tcp",
					"self":             false,
					"to_port":          8301,
					"type":             "ingress",
				},
				"after_sensitive": {
					"cidr_blocks": [
						false,
					],
				},
				"after_unknown": {
					"cidr_blocks": [
						false,
					],
					"id":                       true,
					"security_group_id":        true,
					"source_security_group_id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.servers.module.security_group_rules.module.client_security_group_rules",
			"name":           "allow_serf_lan_tcp_inbound",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.nomad.module.servers.module.security_group_rules.module.client_security_group_rules.aws_security_group_rule.allow_serf_lan_tcp_inbound_from_self",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"cidr_blocks":      null,
					"description":      null,
					"from_port":        8301,
					"ipv6_cidr_blocks": null,
					"prefix_list_ids":  null,
					"protocol":         "tcp",
					"self":             true,
					"to_port":          8301,
					"type":             "ingress",
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":                       true,
					"security_group_id":        true,
					"source_security_group_id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"mode":           "managed",
			"module_address": "module.nomad.module.servers.module.security_group_rules.module.client_security_group_rules",
			"name":           "allow_serf_lan_tcp_inbound_from_self",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.nomad.module.servers.module.security_group_rules.module.client_security_group_rules.aws_security_group_rule.allow_serf_lan_udp_inbound[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"cidr_blocks": [
						"0.0.0.0/0",
					],
					"description":      null,
					"from_port":        8301,
					"ipv6_cidr_blocks": null,
					"prefix_list_ids":  null,
					"protocol":         "udp",
					"self":             false,
					"to_port":          8301,
					"type":             "ingress",
				},
				"after_sensitive": {
					"cidr_blocks": [
						false,
					],
				},
				"after_unknown": {
					"cidr_blocks": [
						false,
					],
					"id":                       true,
					"security_group_id":        true,
					"source_security_group_id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.nomad.module.servers.module.security_group_rules.module.client_security_group_rules",
			"name":           "allow_serf_lan_udp_inbound",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
		{
			"address": "module.nomad.module.servers.module.security_group_rules.module.client_security_group_rules.aws_security_group_rule.allow_serf_lan_udp_inbound_from_self",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"cidr_blocks":      null,
					"description":      null,
					"from_port":        8301,
					"ipv6_cidr_blocks": null,
					"prefix_list_ids":  null,
					"protocol":         "udp",
					"self":             true,
					"to_port":          8301,
					"type":             "ingress",
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":                       true,
					"security_group_id":        true,
					"source_security_group_id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"mode":           "managed",
			"module_address": "module.nomad.module.servers.module.security_group_rules.module.client_security_group_rules",
			"name":           "allow_serf_lan_udp_inbound_from_self",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_security_group_rule",
		},
	],
	"terraform_version": "1.0.8",
}
