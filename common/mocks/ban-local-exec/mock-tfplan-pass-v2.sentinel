terraform_version = "1.11.2"

planned_values = {
	"outputs": {
		"ec2_instance_connect_url": {
			"name":      "ec2_instance_connect_url",
			"sensitive": false,
			"value":     "https://eu-west-2.console.aws.amazon.com/ec2/home?region=eu-west-2#ConnectToInstance:instanceId=i-092ab9a8394c1849a",
		},
	},
	"resources": {
		"aws_instance.agent": {
			"address":        "aws_instance.agent",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "agent",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_instance",
			"values": {
				"ami": "ami-0c41542cdc0e23561",
				"arn": "arn:aws:ec2:eu-west-2:564784738291:instance/i-092ab9a8394c1849a",
				"associate_public_ip_address": true,
				"availability_zone":           "eu-west-2a",
				"capacity_reservation_specification": [
					{
						"capacity_reservation_preference": "open",
						"capacity_reservation_target":     [],
					},
				],
				"cpu_core_count": 2,
				"cpu_options": [
					{
						"amd_sev_snp":      "",
						"core_count":       2,
						"threads_per_core": 1,
					},
				],
				"cpu_threads_per_core": 1,
				"credit_specification": [
					{
						"cpu_credits": "unlimited",
					},
				],
				"disable_api_stop":        false,
				"disable_api_termination": false,
				"ebs_block_device":        [],
				"ebs_optimized":           false,
				"enable_primary_ipv6":     null,
				"enclave_options": [
					{
						"enabled": false,
					},
				],
				"ephemeral_block_device":  [],
				"get_password_data":       false,
				"hibernation":             false,
				"host_id":                 "",
				"host_resource_group_arn": null,
				"iam_instance_profile":    "",
				"id": "i-092ab9a8394c1849a",
				"instance_initiated_shutdown_behavior": "stop",
				"instance_lifecycle":                   "",
				"instance_market_options":              [],
				"instance_state":                       "running",
				"instance_type":                        "t4g.nano",
				"ipv6_address_count":                   0,
				"ipv6_addresses":                       [],
				"key_name":                             "",
				"launch_template":                      [],
				"maintenance_options": [
					{
						"auto_recovery": "default",
					},
				],
				"metadata_options": [
					{
						"http_endpoint":               "enabled",
						"http_protocol_ipv6":          "disabled",
						"http_put_response_hop_limit": 2,
						"http_tokens":                 "required",
						"instance_metadata_tags":      "disabled",
					},
				],
				"monitoring":                   false,
				"network_interface":            [],
				"outpost_arn":                  "",
				"password_data":                "",
				"placement_group":              "",
				"placement_partition_number":   0,
				"primary_network_interface_id": "eni-0eeb14909b2c30913",
				"private_dns":                  "ip-10-0-101-104.eu-west-2.compute.internal",
				"private_dns_name_options": [
					{
						"enable_resource_name_dns_a_record":    false,
						"enable_resource_name_dns_aaaa_record": false,
						"hostname_type":                        "ip-name",
					},
				],
				"private_ip": "10.0.101.104",
				"public_dns": "ec2-13-40-68-231.eu-west-2.compute.amazonaws.com",
				"public_ip":  "13.40.68.231",
				"root_block_device": [
					{
						"delete_on_termination": true,
						"device_name":           "/dev/xvda",
						"encrypted":             false,
						"iops":                  3000,
						"kms_key_id":            "",
						"tags": {
							"Name":      "Test TFC Agents",
							"Owner":     "Lucy",
							"Purpose":   "Test TFC Agents",
							"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
							"TTL":       "Ephemeral Workspace",
							"Terraform": "true",
							"Workspace": "tf-agent-pool",
						},
						"tags_all": {
							"Name":      "Test TFC Agents",
							"Owner":     "Lucy",
							"Purpose":   "Test TFC Agents",
							"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
							"TTL":       "Ephemeral Workspace",
							"Terraform": "true",
							"Workspace": "tf-agent-pool",
						},
						"throughput":  125,
						"volume_id":   "vol-01205027ba0d5ab15",
						"volume_size": 8,
						"volume_type": "gp3",
					},
				],
				"secondary_private_ips":    [],
				"security_groups":          [],
				"source_dest_check":        true,
				"spot_instance_request_id": "",
				"subnet_id":                "subnet-0b6efa305ddee152c",
				"tags":                     {},
				"tags_all": {
					"Name":      "Test TFC Agents",
					"Owner":     "Lucy",
					"Purpose":   "Test TFC Agents",
					"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
					"TTL":       "Ephemeral Workspace",
					"Terraform": "true",
					"Workspace": "tf-agent-pool",
				},
				"tenancy":                     "default",
				"timeouts":                    null,
				"user_data":                   "REDACTED_SENSITIVE",
				"user_data_base64":            null,
				"user_data_replace_on_change": false,
				"volume_tags":                 null,
				"vpc_security_group_ids": [
					"sg-0241af841da648da0",
					"sg-077ef699c0cf2cd42",
				],
			},
		},
		"aws_security_group.ec2_instance_connect": {
			"address":        "aws_security_group.ec2_instance_connect",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "ec2_instance_connect",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group",
			"values": {
				"arn":         "arn:aws:ec2:eu-west-2:564784738291:security-group/sg-0241af841da648da0",
				"description": "Allow EC2 Instance Connect to access this host",
				"egress":      [],
				"id":          "sg-0241af841da648da0",
				"ingress": [
					{
						"cidr_blocks": [
							"3.8.37.24/29",
						],
						"description": "",
						"from_port":   22,
						"ipv6_cidr_blocks": [
							"2a05:d01c:4ac:3100::/56",
						],
						"prefix_list_ids": [],
						"protocol":        "tcp",
						"security_groups": [],
						"self":            false,
						"to_port":         22,
					},
				],
				"name":                   "ec2_instance_connect",
				"name_prefix":            "",
				"owner_id":               "564784738291",
				"revoke_rules_on_delete": false,
				"tags": {
					"CreateDate": "2025-03-25-23-23-16",
					"SyncToken":  "1742944996",
				},
				"tags_all": {
					"CreateDate": "2025-03-25-23-23-16",
					"Name":       "Test TFC Agents",
					"Owner":      "Lucy",
					"Purpose":    "Test TFC Agents",
					"Source":     "https://github.com/hashi-strawb/tf-agent-pool",
					"SyncToken":  "1742944996",
					"TTL":        "Ephemeral Workspace",
					"Terraform":  "true",
					"Workspace":  "tf-agent-pool",
				},
				"timeouts": null,
				"vpc_id":   "vpc-0475656c1f1de9f54",
			},
		},
		"aws_security_group.outbound_http": {
			"address":        "aws_security_group.outbound_http",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "outbound_http",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_security_group",
			"values": {
				"arn":         "arn:aws:ec2:eu-west-2:564784738291:security-group/sg-077ef699c0cf2cd42",
				"description": "Allow outbound HTTP(S) access to everywhere",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description": "",
						"from_port":   443,
						"ipv6_cidr_blocks": [
							"::/0",
						],
						"prefix_list_ids": [],
						"protocol":        "tcp",
						"security_groups": [],
						"self":            false,
						"to_port":         443,
					},
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description": "",
						"from_port":   80,
						"ipv6_cidr_blocks": [
							"::/0",
						],
						"prefix_list_ids": [],
						"protocol":        "tcp",
						"security_groups": [],
						"self":            false,
						"to_port":         80,
					},
				],
				"id":                     "sg-077ef699c0cf2cd42",
				"ingress":                [],
				"name":                   "outbound_http",
				"name_prefix":            "",
				"owner_id":               "564784738291",
				"revoke_rules_on_delete": false,
				"tags": {},
				"tags_all": {
					"Name":      "Test TFC Agents",
					"Owner":     "Lucy",
					"Purpose":   "Test TFC Agents",
					"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
					"TTL":       "Ephemeral Workspace",
					"Terraform": "true",
					"Workspace": "tf-agent-pool",
				},
				"timeouts": null,
				"vpc_id":   "vpc-0475656c1f1de9f54",
			},
		},
		"module.vpc.aws_default_network_acl.this[0]": {
			"address":        "module.vpc.aws_default_network_acl.this[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_default_network_acl",
			"values": {
				"arn": "arn:aws:ec2:eu-west-2:564784738291:network-acl/acl-047c9b8117d436487",
				"default_network_acl_id": "acl-047c9b8117d436487",
				"egress": [
					{
						"action":          "allow",
						"cidr_block":      "",
						"from_port":       0,
						"icmp_code":       0,
						"icmp_type":       0,
						"ipv6_cidr_block": "::/0",
						"protocol":        "-1",
						"rule_no":         101,
						"to_port":         0,
					},
					{
						"action":          "allow",
						"cidr_block":      "0.0.0.0/0",
						"from_port":       0,
						"icmp_code":       0,
						"icmp_type":       0,
						"ipv6_cidr_block": "",
						"protocol":        "-1",
						"rule_no":         100,
						"to_port":         0,
					},
				],
				"id": "acl-047c9b8117d436487",
				"ingress": [
					{
						"action":          "allow",
						"cidr_block":      "",
						"from_port":       0,
						"icmp_code":       0,
						"icmp_type":       0,
						"ipv6_cidr_block": "::/0",
						"protocol":        "-1",
						"rule_no":         101,
						"to_port":         0,
					},
					{
						"action":          "allow",
						"cidr_block":      "0.0.0.0/0",
						"from_port":       0,
						"icmp_code":       0,
						"icmp_type":       0,
						"ipv6_cidr_block": "",
						"protocol":        "-1",
						"rule_no":         100,
						"to_port":         0,
					},
				],
				"owner_id": "564784738291",
				"subnet_ids": [
					"subnet-0892042fd9b88c443",
					"subnet-0b6efa305ddee152c",
					"subnet-0b74cf6d52312b7de",
				],
				"tags": {
					"Name": "agent-vpc-default",
				},
				"tags_all": {
					"Name":      "agent-vpc-default",
					"Owner":     "Lucy",
					"Purpose":   "Test TFC Agents",
					"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
					"TTL":       "Ephemeral Workspace",
					"Terraform": "true",
					"Workspace": "tf-agent-pool",
				},
				"vpc_id": "vpc-0475656c1f1de9f54",
			},
		},
		"module.vpc.aws_default_route_table.default[0]": {
			"address":        "module.vpc.aws_default_route_table.default[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "default",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_default_route_table",
			"values": {
				"arn": "arn:aws:ec2:eu-west-2:564784738291:route-table/rtb-087b68f71c1fbb116",
				"default_route_table_id": "rtb-087b68f71c1fbb116",
				"id":               "rtb-087b68f71c1fbb116",
				"owner_id":         "564784738291",
				"propagating_vgws": [],
				"route":            [],
				"tags": {
					"Name": "agent-vpc-default",
				},
				"tags_all": {
					"Name":      "agent-vpc-default",
					"Owner":     "Lucy",
					"Purpose":   "Test TFC Agents",
					"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
					"TTL":       "Ephemeral Workspace",
					"Terraform": "true",
					"Workspace": "tf-agent-pool",
				},
				"timeouts": {
					"create": "5m",
					"update": "5m",
				},
				"vpc_id": "vpc-0475656c1f1de9f54",
			},
		},
		"module.vpc.aws_default_security_group.this[0]": {
			"address":        "module.vpc.aws_default_security_group.this[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_default_security_group",
			"values": {
				"arn":                    "arn:aws:ec2:eu-west-2:564784738291:security-group/sg-02f76aa6f404e5bf1",
				"description":            "default VPC security group",
				"egress":                 [],
				"id":                     "sg-02f76aa6f404e5bf1",
				"ingress":                [],
				"name":                   "default",
				"name_prefix":            "",
				"owner_id":               "564784738291",
				"revoke_rules_on_delete": false,
				"tags": {
					"Name": "agent-vpc-default",
				},
				"tags_all": {
					"Name":      "agent-vpc-default",
					"Owner":     "Lucy",
					"Purpose":   "Test TFC Agents",
					"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
					"TTL":       "Ephemeral Workspace",
					"Terraform": "true",
					"Workspace": "tf-agent-pool",
				},
				"vpc_id": "vpc-0475656c1f1de9f54",
			},
		},
		"module.vpc.aws_internet_gateway.this[0]": {
			"address":        "module.vpc.aws_internet_gateway.this[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_internet_gateway",
			"values": {
				"arn":      "arn:aws:ec2:eu-west-2:564784738291:internet-gateway/igw-0adceafb47eb02050",
				"id":       "igw-0adceafb47eb02050",
				"owner_id": "564784738291",
				"tags": {
					"Name": "agent-vpc",
				},
				"tags_all": {
					"Name":      "agent-vpc",
					"Owner":     "Lucy",
					"Purpose":   "Test TFC Agents",
					"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
					"TTL":       "Ephemeral Workspace",
					"Terraform": "true",
					"Workspace": "tf-agent-pool",
				},
				"timeouts": null,
				"vpc_id":   "vpc-0475656c1f1de9f54",
			},
		},
		"module.vpc.aws_route.public_internet_gateway[0]": {
			"address":        "module.vpc.aws_route.public_internet_gateway[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public_internet_gateway",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_route",
			"values": {
				"carrier_gateway_id":          "",
				"core_network_arn":            "",
				"destination_cidr_block":      "0.0.0.0/0",
				"destination_ipv6_cidr_block": "",
				"destination_prefix_list_id":  "",
				"egress_only_gateway_id":      "",
				"gateway_id":                  "igw-0adceafb47eb02050",
				"id":                          "r-rtb-034dbc5284e92440a1080289494",
				"instance_id":                 "",
				"instance_owner_id":           "",
				"local_gateway_id":            "",
				"nat_gateway_id":              "",
				"network_interface_id":        "",
				"origin":                      "CreateRoute",
				"route_table_id":              "rtb-034dbc5284e92440a",
				"state":                       "active",
				"timeouts": {
					"create": "5m",
					"delete": null,
					"update": null,
				},
				"transit_gateway_id":        "",
				"vpc_endpoint_id":           "",
				"vpc_peering_connection_id": "",
			},
		},
		"module.vpc.aws_route_table.public[0]": {
			"address":        "module.vpc.aws_route_table.public[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_route_table",
			"values": {
				"arn":              "arn:aws:ec2:eu-west-2:564784738291:route-table/rtb-034dbc5284e92440a",
				"id":               "rtb-034dbc5284e92440a",
				"owner_id":         "564784738291",
				"propagating_vgws": [],
				"route": [
					{
						"carrier_gateway_id":         "",
						"cidr_block":                 "0.0.0.0/0",
						"core_network_arn":           "",
						"destination_prefix_list_id": "",
						"egress_only_gateway_id":     "",
						"gateway_id":                 "igw-0adceafb47eb02050",
						"ipv6_cidr_block":            "",
						"local_gateway_id":           "",
						"nat_gateway_id":             "",
						"network_interface_id":       "",
						"transit_gateway_id":         "",
						"vpc_endpoint_id":            "",
						"vpc_peering_connection_id":  "",
					},
				],
				"tags": {
					"Name": "agent-vpc-public",
				},
				"tags_all": {
					"Name":      "agent-vpc-public",
					"Owner":     "Lucy",
					"Purpose":   "Test TFC Agents",
					"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
					"TTL":       "Ephemeral Workspace",
					"Terraform": "true",
					"Workspace": "tf-agent-pool",
				},
				"timeouts": null,
				"vpc_id":   "vpc-0475656c1f1de9f54",
			},
		},
		"module.vpc.aws_route_table_association.public[0]": {
			"address":        "module.vpc.aws_route_table_association.public[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_route_table_association",
			"values": {
				"gateway_id":     "",
				"id":             "rtbassoc-0dab61280ace868b3",
				"route_table_id": "rtb-034dbc5284e92440a",
				"subnet_id":      "subnet-0b6efa305ddee152c",
				"timeouts":       null,
			},
		},
		"module.vpc.aws_route_table_association.public[1]": {
			"address":        "module.vpc.aws_route_table_association.public[1]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          1,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_route_table_association",
			"values": {
				"gateway_id":     "",
				"id":             "rtbassoc-0fd62eb231eb0aef9",
				"route_table_id": "rtb-034dbc5284e92440a",
				"subnet_id":      "subnet-0892042fd9b88c443",
				"timeouts":       null,
			},
		},
		"module.vpc.aws_route_table_association.public[2]": {
			"address":        "module.vpc.aws_route_table_association.public[2]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          2,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_route_table_association",
			"values": {
				"gateway_id":     "",
				"id":             "rtbassoc-0b1e1130e180dc2fe",
				"route_table_id": "rtb-034dbc5284e92440a",
				"subnet_id":      "subnet-0b74cf6d52312b7de",
				"timeouts":       null,
			},
		},
		"module.vpc.aws_subnet.public[0]": {
			"address":        "module.vpc.aws_subnet.public[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_subnet",
			"values": {
				"arn": "arn:aws:ec2:eu-west-2:564784738291:subnet/subnet-0b6efa305ddee152c",
				"assign_ipv6_address_on_creation":                false,
				"availability_zone":                              "eu-west-2a",
				"availability_zone_id":                           "euw2-az2",
				"cidr_block":                                     "10.0.101.0/24",
				"customer_owned_ipv4_pool":                       "",
				"enable_dns64":                                   false,
				"enable_lni_at_device_index":                     0,
				"enable_resource_name_dns_a_record_on_launch":    false,
				"enable_resource_name_dns_aaaa_record_on_launch": false,
				"id":                                  "subnet-0b6efa305ddee152c",
				"ipv6_cidr_block":                     "",
				"ipv6_cidr_block_association_id":      "",
				"ipv6_native":                         false,
				"map_customer_owned_ip_on_launch":     false,
				"map_public_ip_on_launch":             false,
				"outpost_arn":                         "",
				"owner_id":                            "564784738291",
				"private_dns_hostname_type_on_launch": "ip-name",
				"tags": {
					"Name": "agent-vpc-public-eu-west-2a",
				},
				"tags_all": {
					"Name":      "agent-vpc-public-eu-west-2a",
					"Owner":     "Lucy",
					"Purpose":   "Test TFC Agents",
					"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
					"TTL":       "Ephemeral Workspace",
					"Terraform": "true",
					"Workspace": "tf-agent-pool",
				},
				"timeouts": null,
				"vpc_id":   "vpc-0475656c1f1de9f54",
			},
		},
		"module.vpc.aws_subnet.public[1]": {
			"address":        "module.vpc.aws_subnet.public[1]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          1,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_subnet",
			"values": {
				"arn": "arn:aws:ec2:eu-west-2:564784738291:subnet/subnet-0892042fd9b88c443",
				"assign_ipv6_address_on_creation":                false,
				"availability_zone":                              "eu-west-2b",
				"availability_zone_id":                           "euw2-az3",
				"cidr_block":                                     "10.0.102.0/24",
				"customer_owned_ipv4_pool":                       "",
				"enable_dns64":                                   false,
				"enable_lni_at_device_index":                     0,
				"enable_resource_name_dns_a_record_on_launch":    false,
				"enable_resource_name_dns_aaaa_record_on_launch": false,
				"id":                                  "subnet-0892042fd9b88c443",
				"ipv6_cidr_block":                     "",
				"ipv6_cidr_block_association_id":      "",
				"ipv6_native":                         false,
				"map_customer_owned_ip_on_launch":     false,
				"map_public_ip_on_launch":             false,
				"outpost_arn":                         "",
				"owner_id":                            "564784738291",
				"private_dns_hostname_type_on_launch": "ip-name",
				"tags": {
					"Name": "agent-vpc-public-eu-west-2b",
				},
				"tags_all": {
					"Name":      "agent-vpc-public-eu-west-2b",
					"Owner":     "Lucy",
					"Purpose":   "Test TFC Agents",
					"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
					"TTL":       "Ephemeral Workspace",
					"Terraform": "true",
					"Workspace": "tf-agent-pool",
				},
				"timeouts": null,
				"vpc_id":   "vpc-0475656c1f1de9f54",
			},
		},
		"module.vpc.aws_subnet.public[2]": {
			"address":        "module.vpc.aws_subnet.public[2]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          2,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_subnet",
			"values": {
				"arn": "arn:aws:ec2:eu-west-2:564784738291:subnet/subnet-0b74cf6d52312b7de",
				"assign_ipv6_address_on_creation":                false,
				"availability_zone":                              "eu-west-2c",
				"availability_zone_id":                           "euw2-az1",
				"cidr_block":                                     "10.0.103.0/24",
				"customer_owned_ipv4_pool":                       "",
				"enable_dns64":                                   false,
				"enable_lni_at_device_index":                     0,
				"enable_resource_name_dns_a_record_on_launch":    false,
				"enable_resource_name_dns_aaaa_record_on_launch": false,
				"id":                                  "subnet-0b74cf6d52312b7de",
				"ipv6_cidr_block":                     "",
				"ipv6_cidr_block_association_id":      "",
				"ipv6_native":                         false,
				"map_customer_owned_ip_on_launch":     false,
				"map_public_ip_on_launch":             false,
				"outpost_arn":                         "",
				"owner_id":                            "564784738291",
				"private_dns_hostname_type_on_launch": "ip-name",
				"tags": {
					"Name": "agent-vpc-public-eu-west-2c",
				},
				"tags_all": {
					"Name":      "agent-vpc-public-eu-west-2c",
					"Owner":     "Lucy",
					"Purpose":   "Test TFC Agents",
					"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
					"TTL":       "Ephemeral Workspace",
					"Terraform": "true",
					"Workspace": "tf-agent-pool",
				},
				"timeouts": null,
				"vpc_id":   "vpc-0475656c1f1de9f54",
			},
		},
		"module.vpc.aws_vpc.this[0]": {
			"address":        "module.vpc.aws_vpc.this[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_vpc",
			"values": {
				"arn": "arn:aws:ec2:eu-west-2:564784738291:vpc/vpc-0475656c1f1de9f54",
				"assign_generated_ipv6_cidr_block":     false,
				"cidr_block":                           "10.0.0.0/16",
				"default_network_acl_id":               "acl-047c9b8117d436487",
				"default_route_table_id":               "rtb-087b68f71c1fbb116",
				"default_security_group_id":            "sg-02f76aa6f404e5bf1",
				"dhcp_options_id":                      "dopt-0bb7c3f05a56647e9",
				"enable_dns_hostnames":                 true,
				"enable_dns_support":                   true,
				"enable_network_address_usage_metrics": false,
				"id":                                   "vpc-0475656c1f1de9f54",
				"instance_tenancy":                     "default",
				"ipv4_ipam_pool_id":                    null,
				"ipv4_netmask_length":                  null,
				"ipv6_association_id":                  "",
				"ipv6_cidr_block":                      "",
				"ipv6_cidr_block_network_border_group": "",
				"ipv6_ipam_pool_id":                    "",
				"ipv6_netmask_length":                  0,
				"main_route_table_id":                  "rtb-087b68f71c1fbb116",
				"owner_id":                             "564784738291",
				"tags": {
					"Name": "agent-vpc",
				},
				"tags_all": {
					"Name":      "agent-vpc",
					"Owner":     "Lucy",
					"Purpose":   "Test TFC Agents",
					"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
					"TTL":       "Ephemeral Workspace",
					"Terraform": "true",
					"Workspace": "tf-agent-pool",
				},
			},
		},
		"null_resource.exec": {
			"address":        "null_resource.exec",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "exec",
			"provider_name":  "registry.terraform.io/hashicorp/null",
			"tainted":        false,
			"type":           "null_resource",
			"values": {
				"triggers": null,
			},
		},
	},
}

variables = {
	"tfc_agent_token": {
		"name":  "tfc_agent_token",
		"value": "REDACTED_SENSITIVE",
	},
}

resource_changes = {
	"aws_instance.agent": {
		"address": "aws_instance.agent",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"ami": "ami-0c41542cdc0e23561",
				"arn": "arn:aws:ec2:eu-west-2:564784738291:instance/i-092ab9a8394c1849a",
				"associate_public_ip_address": true,
				"availability_zone":           "eu-west-2a",
				"capacity_reservation_specification": [
					{
						"capacity_reservation_preference": "open",
						"capacity_reservation_target":     [],
					},
				],
				"cpu_core_count": 2,
				"cpu_options": [
					{
						"amd_sev_snp":      "",
						"core_count":       2,
						"threads_per_core": 1,
					},
				],
				"cpu_threads_per_core": 1,
				"credit_specification": [
					{
						"cpu_credits": "unlimited",
					},
				],
				"disable_api_stop":        false,
				"disable_api_termination": false,
				"ebs_block_device":        [],
				"ebs_optimized":           false,
				"enable_primary_ipv6":     null,
				"enclave_options": [
					{
						"enabled": false,
					},
				],
				"ephemeral_block_device":  [],
				"get_password_data":       false,
				"hibernation":             false,
				"host_id":                 "",
				"host_resource_group_arn": null,
				"iam_instance_profile":    "",
				"id": "i-092ab9a8394c1849a",
				"instance_initiated_shutdown_behavior": "stop",
				"instance_lifecycle":                   "",
				"instance_market_options":              [],
				"instance_state":                       "running",
				"instance_type":                        "t4g.nano",
				"ipv6_address_count":                   0,
				"ipv6_addresses":                       [],
				"key_name":                             "",
				"launch_template":                      [],
				"maintenance_options": [
					{
						"auto_recovery": "default",
					},
				],
				"metadata_options": [
					{
						"http_endpoint":               "enabled",
						"http_protocol_ipv6":          "disabled",
						"http_put_response_hop_limit": 2,
						"http_tokens":                 "required",
						"instance_metadata_tags":      "disabled",
					},
				],
				"monitoring":                   false,
				"network_interface":            [],
				"outpost_arn":                  "",
				"password_data":                "",
				"placement_group":              "",
				"placement_partition_number":   0,
				"primary_network_interface_id": "eni-0eeb14909b2c30913",
				"private_dns":                  "ip-10-0-101-104.eu-west-2.compute.internal",
				"private_dns_name_options": [
					{
						"enable_resource_name_dns_a_record":    false,
						"enable_resource_name_dns_aaaa_record": false,
						"hostname_type":                        "ip-name",
					},
				],
				"private_ip": "10.0.101.104",
				"public_dns": "ec2-13-40-68-231.eu-west-2.compute.amazonaws.com",
				"public_ip":  "13.40.68.231",
				"root_block_device": [
					{
						"delete_on_termination": true,
						"device_name":           "/dev/xvda",
						"encrypted":             false,
						"iops":                  3000,
						"kms_key_id":            "",
						"tags": {
							"Name":      "Test TFC Agents",
							"Owner":     "Lucy",
							"Purpose":   "Test TFC Agents",
							"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
							"TTL":       "Ephemeral Workspace",
							"Terraform": "true",
							"Workspace": "tf-agent-pool",
						},
						"tags_all": {
							"Name":      "Test TFC Agents",
							"Owner":     "Lucy",
							"Purpose":   "Test TFC Agents",
							"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
							"TTL":       "Ephemeral Workspace",
							"Terraform": "true",
							"Workspace": "tf-agent-pool",
						},
						"throughput":  125,
						"volume_id":   "vol-01205027ba0d5ab15",
						"volume_size": 8,
						"volume_type": "gp3",
					},
				],
				"secondary_private_ips":    [],
				"security_groups":          [],
				"source_dest_check":        true,
				"spot_instance_request_id": "",
				"subnet_id":                "subnet-0b6efa305ddee152c",
				"tags":                     {},
				"tags_all": {
					"Name":      "Test TFC Agents",
					"Owner":     "Lucy",
					"Purpose":   "Test TFC Agents",
					"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
					"TTL":       "Ephemeral Workspace",
					"Terraform": "true",
					"Workspace": "tf-agent-pool",
				},
				"tenancy":                     "default",
				"timeouts":                    null,
				"user_data":                   "REDACTED_SENSITIVE",
				"user_data_base64":            null,
				"user_data_replace_on_change": false,
				"volume_tags":                 null,
				"vpc_security_group_ids": [
					"sg-0241af841da648da0",
					"sg-077ef699c0cf2cd42",
				],
			},
			"after_unknown": {},
			"before": {
				"ami": "ami-0c41542cdc0e23561",
				"arn": "arn:aws:ec2:eu-west-2:564784738291:instance/i-092ab9a8394c1849a",
				"associate_public_ip_address": true,
				"availability_zone":           "eu-west-2a",
				"capacity_reservation_specification": [
					{
						"capacity_reservation_preference": "open",
						"capacity_reservation_target":     [],
					},
				],
				"cpu_core_count": 2,
				"cpu_options": [
					{
						"amd_sev_snp":      "",
						"core_count":       2,
						"threads_per_core": 1,
					},
				],
				"cpu_threads_per_core": 1,
				"credit_specification": [
					{
						"cpu_credits": "unlimited",
					},
				],
				"disable_api_stop":        false,
				"disable_api_termination": false,
				"ebs_block_device":        [],
				"ebs_optimized":           false,
				"enable_primary_ipv6":     null,
				"enclave_options": [
					{
						"enabled": false,
					},
				],
				"ephemeral_block_device":  [],
				"get_password_data":       false,
				"hibernation":             false,
				"host_id":                 "",
				"host_resource_group_arn": null,
				"iam_instance_profile":    "",
				"id": "i-092ab9a8394c1849a",
				"instance_initiated_shutdown_behavior": "stop",
				"instance_lifecycle":                   "",
				"instance_market_options":              [],
				"instance_state":                       "running",
				"instance_type":                        "t4g.nano",
				"ipv6_address_count":                   0,
				"ipv6_addresses":                       [],
				"key_name":                             "",
				"launch_template":                      [],
				"maintenance_options": [
					{
						"auto_recovery": "default",
					},
				],
				"metadata_options": [
					{
						"http_endpoint":               "enabled",
						"http_protocol_ipv6":          "disabled",
						"http_put_response_hop_limit": 2,
						"http_tokens":                 "required",
						"instance_metadata_tags":      "disabled",
					},
				],
				"monitoring":                   false,
				"network_interface":            [],
				"outpost_arn":                  "",
				"password_data":                "",
				"placement_group":              "",
				"placement_partition_number":   0,
				"primary_network_interface_id": "eni-0eeb14909b2c30913",
				"private_dns":                  "ip-10-0-101-104.eu-west-2.compute.internal",
				"private_dns_name_options": [
					{
						"enable_resource_name_dns_a_record":    false,
						"enable_resource_name_dns_aaaa_record": false,
						"hostname_type":                        "ip-name",
					},
				],
				"private_ip": "10.0.101.104",
				"public_dns": "ec2-13-40-68-231.eu-west-2.compute.amazonaws.com",
				"public_ip":  "13.40.68.231",
				"root_block_device": [
					{
						"delete_on_termination": true,
						"device_name":           "/dev/xvda",
						"encrypted":             false,
						"iops":                  3000,
						"kms_key_id":            "",
						"tags": {
							"Name":      "Test TFC Agents",
							"Owner":     "Lucy",
							"Purpose":   "Test TFC Agents",
							"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
							"TTL":       "Ephemeral Workspace",
							"Terraform": "true",
							"Workspace": "tf-agent-pool",
						},
						"tags_all": {
							"Name":      "Test TFC Agents",
							"Owner":     "Lucy",
							"Purpose":   "Test TFC Agents",
							"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
							"TTL":       "Ephemeral Workspace",
							"Terraform": "true",
							"Workspace": "tf-agent-pool",
						},
						"throughput":  125,
						"volume_id":   "vol-01205027ba0d5ab15",
						"volume_size": 8,
						"volume_type": "gp3",
					},
				],
				"secondary_private_ips":    [],
				"security_groups":          [],
				"source_dest_check":        true,
				"spot_instance_request_id": "",
				"subnet_id":                "subnet-0b6efa305ddee152c",
				"tags":                     {},
				"tags_all": {
					"Name":      "Test TFC Agents",
					"Owner":     "Lucy",
					"Purpose":   "Test TFC Agents",
					"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
					"TTL":       "Ephemeral Workspace",
					"Terraform": "true",
					"Workspace": "tf-agent-pool",
				},
				"tenancy":                     "default",
				"timeouts":                    null,
				"user_data":                   "REDACTED_SENSITIVE",
				"user_data_base64":            null,
				"user_data_replace_on_change": false,
				"volume_tags":                 null,
				"vpc_security_group_ids": [
					"sg-0241af841da648da0",
					"sg-077ef699c0cf2cd42",
				],
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "agent",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_instance",
	},
	"aws_security_group.ec2_instance_connect": {
		"address": "aws_security_group.ec2_instance_connect",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"arn":         "arn:aws:ec2:eu-west-2:564784738291:security-group/sg-0241af841da648da0",
				"description": "Allow EC2 Instance Connect to access this host",
				"egress":      [],
				"id":          "sg-0241af841da648da0",
				"ingress": [
					{
						"cidr_blocks": [
							"3.8.37.24/29",
						],
						"description": "",
						"from_port":   22,
						"ipv6_cidr_blocks": [
							"2a05:d01c:4ac:3100::/56",
						],
						"prefix_list_ids": [],
						"protocol":        "tcp",
						"security_groups": [],
						"self":            false,
						"to_port":         22,
					},
				],
				"name":                   "ec2_instance_connect",
				"name_prefix":            "",
				"owner_id":               "564784738291",
				"revoke_rules_on_delete": false,
				"tags": {
					"CreateDate": "2025-03-25-23-23-16",
					"SyncToken":  "1742944996",
				},
				"tags_all": {
					"CreateDate": "2025-03-25-23-23-16",
					"Name":       "Test TFC Agents",
					"Owner":      "Lucy",
					"Purpose":    "Test TFC Agents",
					"Source":     "https://github.com/hashi-strawb/tf-agent-pool",
					"SyncToken":  "1742944996",
					"TTL":        "Ephemeral Workspace",
					"Terraform":  "true",
					"Workspace":  "tf-agent-pool",
				},
				"timeouts": null,
				"vpc_id":   "vpc-0475656c1f1de9f54",
			},
			"after_unknown": {},
			"before": {
				"arn":         "arn:aws:ec2:eu-west-2:564784738291:security-group/sg-0241af841da648da0",
				"description": "Allow EC2 Instance Connect to access this host",
				"egress":      [],
				"id":          "sg-0241af841da648da0",
				"ingress": [
					{
						"cidr_blocks": [
							"3.8.37.24/29",
						],
						"description": "",
						"from_port":   22,
						"ipv6_cidr_blocks": [
							"2a05:d01c:4ac:3100::/56",
						],
						"prefix_list_ids": [],
						"protocol":        "tcp",
						"security_groups": [],
						"self":            false,
						"to_port":         22,
					},
				],
				"name":                   "ec2_instance_connect",
				"name_prefix":            "",
				"owner_id":               "564784738291",
				"revoke_rules_on_delete": false,
				"tags": {
					"CreateDate": "2025-03-25-23-23-16",
					"SyncToken":  "1742944996",
				},
				"tags_all": {
					"CreateDate": "2025-03-25-23-23-16",
					"Name":       "Test TFC Agents",
					"Owner":      "Lucy",
					"Purpose":    "Test TFC Agents",
					"Source":     "https://github.com/hashi-strawb/tf-agent-pool",
					"SyncToken":  "1742944996",
					"TTL":        "Ephemeral Workspace",
					"Terraform":  "true",
					"Workspace":  "tf-agent-pool",
				},
				"timeouts": null,
				"vpc_id":   "vpc-0475656c1f1de9f54",
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "ec2_instance_connect",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group",
	},
	"aws_security_group.outbound_http": {
		"address": "aws_security_group.outbound_http",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"arn":         "arn:aws:ec2:eu-west-2:564784738291:security-group/sg-077ef699c0cf2cd42",
				"description": "Allow outbound HTTP(S) access to everywhere",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description": "",
						"from_port":   443,
						"ipv6_cidr_blocks": [
							"::/0",
						],
						"prefix_list_ids": [],
						"protocol":        "tcp",
						"security_groups": [],
						"self":            false,
						"to_port":         443,
					},
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description": "",
						"from_port":   80,
						"ipv6_cidr_blocks": [
							"::/0",
						],
						"prefix_list_ids": [],
						"protocol":        "tcp",
						"security_groups": [],
						"self":            false,
						"to_port":         80,
					},
				],
				"id":                     "sg-077ef699c0cf2cd42",
				"ingress":                [],
				"name":                   "outbound_http",
				"name_prefix":            "",
				"owner_id":               "564784738291",
				"revoke_rules_on_delete": false,
				"tags": {},
				"tags_all": {
					"Name":      "Test TFC Agents",
					"Owner":     "Lucy",
					"Purpose":   "Test TFC Agents",
					"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
					"TTL":       "Ephemeral Workspace",
					"Terraform": "true",
					"Workspace": "tf-agent-pool",
				},
				"timeouts": null,
				"vpc_id":   "vpc-0475656c1f1de9f54",
			},
			"after_unknown": {},
			"before": {
				"arn":         "arn:aws:ec2:eu-west-2:564784738291:security-group/sg-077ef699c0cf2cd42",
				"description": "Allow outbound HTTP(S) access to everywhere",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description": "",
						"from_port":   443,
						"ipv6_cidr_blocks": [
							"::/0",
						],
						"prefix_list_ids": [],
						"protocol":        "tcp",
						"security_groups": [],
						"self":            false,
						"to_port":         443,
					},
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description": "",
						"from_port":   80,
						"ipv6_cidr_blocks": [
							"::/0",
						],
						"prefix_list_ids": [],
						"protocol":        "tcp",
						"security_groups": [],
						"self":            false,
						"to_port":         80,
					},
				],
				"id":                     "sg-077ef699c0cf2cd42",
				"ingress":                [],
				"name":                   "outbound_http",
				"name_prefix":            "",
				"owner_id":               "564784738291",
				"revoke_rules_on_delete": false,
				"tags": {},
				"tags_all": {
					"Name":      "Test TFC Agents",
					"Owner":     "Lucy",
					"Purpose":   "Test TFC Agents",
					"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
					"TTL":       "Ephemeral Workspace",
					"Terraform": "true",
					"Workspace": "tf-agent-pool",
				},
				"timeouts": null,
				"vpc_id":   "vpc-0475656c1f1de9f54",
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "outbound_http",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group",
	},
	"module.vpc.aws_default_network_acl.this[0]": {
		"address": "module.vpc.aws_default_network_acl.this[0]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"arn": "arn:aws:ec2:eu-west-2:564784738291:network-acl/acl-047c9b8117d436487",
				"default_network_acl_id": "acl-047c9b8117d436487",
				"egress": [
					{
						"action":          "allow",
						"cidr_block":      "",
						"from_port":       0,
						"icmp_code":       0,
						"icmp_type":       0,
						"ipv6_cidr_block": "::/0",
						"protocol":        "-1",
						"rule_no":         101,
						"to_port":         0,
					},
					{
						"action":          "allow",
						"cidr_block":      "0.0.0.0/0",
						"from_port":       0,
						"icmp_code":       0,
						"icmp_type":       0,
						"ipv6_cidr_block": "",
						"protocol":        "-1",
						"rule_no":         100,
						"to_port":         0,
					},
				],
				"id": "acl-047c9b8117d436487",
				"ingress": [
					{
						"action":          "allow",
						"cidr_block":      "",
						"from_port":       0,
						"icmp_code":       0,
						"icmp_type":       0,
						"ipv6_cidr_block": "::/0",
						"protocol":        "-1",
						"rule_no":         101,
						"to_port":         0,
					},
					{
						"action":          "allow",
						"cidr_block":      "0.0.0.0/0",
						"from_port":       0,
						"icmp_code":       0,
						"icmp_type":       0,
						"ipv6_cidr_block": "",
						"protocol":        "-1",
						"rule_no":         100,
						"to_port":         0,
					},
				],
				"owner_id": "564784738291",
				"subnet_ids": [
					"subnet-0892042fd9b88c443",
					"subnet-0b6efa305ddee152c",
					"subnet-0b74cf6d52312b7de",
				],
				"tags": {
					"Name": "agent-vpc-default",
				},
				"tags_all": {
					"Name":      "agent-vpc-default",
					"Owner":     "Lucy",
					"Purpose":   "Test TFC Agents",
					"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
					"TTL":       "Ephemeral Workspace",
					"Terraform": "true",
					"Workspace": "tf-agent-pool",
				},
				"vpc_id": "vpc-0475656c1f1de9f54",
			},
			"after_unknown": {},
			"before": {
				"arn": "arn:aws:ec2:eu-west-2:564784738291:network-acl/acl-047c9b8117d436487",
				"default_network_acl_id": "acl-047c9b8117d436487",
				"egress": [
					{
						"action":          "allow",
						"cidr_block":      "",
						"from_port":       0,
						"icmp_code":       0,
						"icmp_type":       0,
						"ipv6_cidr_block": "::/0",
						"protocol":        "-1",
						"rule_no":         101,
						"to_port":         0,
					},
					{
						"action":          "allow",
						"cidr_block":      "0.0.0.0/0",
						"from_port":       0,
						"icmp_code":       0,
						"icmp_type":       0,
						"ipv6_cidr_block": "",
						"protocol":        "-1",
						"rule_no":         100,
						"to_port":         0,
					},
				],
				"id": "acl-047c9b8117d436487",
				"ingress": [
					{
						"action":          "allow",
						"cidr_block":      "",
						"from_port":       0,
						"icmp_code":       0,
						"icmp_type":       0,
						"ipv6_cidr_block": "::/0",
						"protocol":        "-1",
						"rule_no":         101,
						"to_port":         0,
					},
					{
						"action":          "allow",
						"cidr_block":      "0.0.0.0/0",
						"from_port":       0,
						"icmp_code":       0,
						"icmp_type":       0,
						"ipv6_cidr_block": "",
						"protocol":        "-1",
						"rule_no":         100,
						"to_port":         0,
					},
				],
				"owner_id": "564784738291",
				"subnet_ids": [
					"subnet-0892042fd9b88c443",
					"subnet-0b6efa305ddee152c",
					"subnet-0b74cf6d52312b7de",
				],
				"tags": {
					"Name": "agent-vpc-default",
				},
				"tags_all": {
					"Name":      "agent-vpc-default",
					"Owner":     "Lucy",
					"Purpose":   "Test TFC Agents",
					"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
					"TTL":       "Ephemeral Workspace",
					"Terraform": "true",
					"Workspace": "tf-agent-pool",
				},
				"vpc_id": "vpc-0475656c1f1de9f54",
			},
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "this",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_default_network_acl",
	},
	"module.vpc.aws_default_route_table.default[0]": {
		"address": "module.vpc.aws_default_route_table.default[0]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"arn": "arn:aws:ec2:eu-west-2:564784738291:route-table/rtb-087b68f71c1fbb116",
				"default_route_table_id": "rtb-087b68f71c1fbb116",
				"id":               "rtb-087b68f71c1fbb116",
				"owner_id":         "564784738291",
				"propagating_vgws": [],
				"route":            [],
				"tags": {
					"Name": "agent-vpc-default",
				},
				"tags_all": {
					"Name":      "agent-vpc-default",
					"Owner":     "Lucy",
					"Purpose":   "Test TFC Agents",
					"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
					"TTL":       "Ephemeral Workspace",
					"Terraform": "true",
					"Workspace": "tf-agent-pool",
				},
				"timeouts": {
					"create": "5m",
					"update": "5m",
				},
				"vpc_id": "vpc-0475656c1f1de9f54",
			},
			"after_unknown": {},
			"before": {
				"arn": "arn:aws:ec2:eu-west-2:564784738291:route-table/rtb-087b68f71c1fbb116",
				"default_route_table_id": "rtb-087b68f71c1fbb116",
				"id":               "rtb-087b68f71c1fbb116",
				"owner_id":         "564784738291",
				"propagating_vgws": [],
				"route":            [],
				"tags": {
					"Name": "agent-vpc-default",
				},
				"tags_all": {
					"Name":      "agent-vpc-default",
					"Owner":     "Lucy",
					"Purpose":   "Test TFC Agents",
					"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
					"TTL":       "Ephemeral Workspace",
					"Terraform": "true",
					"Workspace": "tf-agent-pool",
				},
				"timeouts": {
					"create": "5m",
					"update": "5m",
				},
				"vpc_id": "vpc-0475656c1f1de9f54",
			},
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "default",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_default_route_table",
	},
	"module.vpc.aws_default_security_group.this[0]": {
		"address": "module.vpc.aws_default_security_group.this[0]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"arn":                    "arn:aws:ec2:eu-west-2:564784738291:security-group/sg-02f76aa6f404e5bf1",
				"description":            "default VPC security group",
				"egress":                 [],
				"id":                     "sg-02f76aa6f404e5bf1",
				"ingress":                [],
				"name":                   "default",
				"name_prefix":            "",
				"owner_id":               "564784738291",
				"revoke_rules_on_delete": false,
				"tags": {
					"Name": "agent-vpc-default",
				},
				"tags_all": {
					"Name":      "agent-vpc-default",
					"Owner":     "Lucy",
					"Purpose":   "Test TFC Agents",
					"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
					"TTL":       "Ephemeral Workspace",
					"Terraform": "true",
					"Workspace": "tf-agent-pool",
				},
				"vpc_id": "vpc-0475656c1f1de9f54",
			},
			"after_unknown": {},
			"before": {
				"arn":                    "arn:aws:ec2:eu-west-2:564784738291:security-group/sg-02f76aa6f404e5bf1",
				"description":            "default VPC security group",
				"egress":                 [],
				"id":                     "sg-02f76aa6f404e5bf1",
				"ingress":                [],
				"name":                   "default",
				"name_prefix":            "",
				"owner_id":               "564784738291",
				"revoke_rules_on_delete": false,
				"tags": {
					"Name": "agent-vpc-default",
				},
				"tags_all": {
					"Name":      "agent-vpc-default",
					"Owner":     "Lucy",
					"Purpose":   "Test TFC Agents",
					"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
					"TTL":       "Ephemeral Workspace",
					"Terraform": "true",
					"Workspace": "tf-agent-pool",
				},
				"vpc_id": "vpc-0475656c1f1de9f54",
			},
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "this",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_default_security_group",
	},
	"module.vpc.aws_internet_gateway.this[0]": {
		"address": "module.vpc.aws_internet_gateway.this[0]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"arn":      "arn:aws:ec2:eu-west-2:564784738291:internet-gateway/igw-0adceafb47eb02050",
				"id":       "igw-0adceafb47eb02050",
				"owner_id": "564784738291",
				"tags": {
					"Name": "agent-vpc",
				},
				"tags_all": {
					"Name":      "agent-vpc",
					"Owner":     "Lucy",
					"Purpose":   "Test TFC Agents",
					"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
					"TTL":       "Ephemeral Workspace",
					"Terraform": "true",
					"Workspace": "tf-agent-pool",
				},
				"timeouts": null,
				"vpc_id":   "vpc-0475656c1f1de9f54",
			},
			"after_unknown": {},
			"before": {
				"arn":      "arn:aws:ec2:eu-west-2:564784738291:internet-gateway/igw-0adceafb47eb02050",
				"id":       "igw-0adceafb47eb02050",
				"owner_id": "564784738291",
				"tags": {
					"Name": "agent-vpc",
				},
				"tags_all": {
					"Name":      "agent-vpc",
					"Owner":     "Lucy",
					"Purpose":   "Test TFC Agents",
					"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
					"TTL":       "Ephemeral Workspace",
					"Terraform": "true",
					"Workspace": "tf-agent-pool",
				},
				"timeouts": null,
				"vpc_id":   "vpc-0475656c1f1de9f54",
			},
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "this",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_internet_gateway",
	},
	"module.vpc.aws_route.public_internet_gateway[0]": {
		"address": "module.vpc.aws_route.public_internet_gateway[0]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"carrier_gateway_id":          "",
				"core_network_arn":            "",
				"destination_cidr_block":      "0.0.0.0/0",
				"destination_ipv6_cidr_block": "",
				"destination_prefix_list_id":  "",
				"egress_only_gateway_id":      "",
				"gateway_id":                  "igw-0adceafb47eb02050",
				"id":                          "r-rtb-034dbc5284e92440a1080289494",
				"instance_id":                 "",
				"instance_owner_id":           "",
				"local_gateway_id":            "",
				"nat_gateway_id":              "",
				"network_interface_id":        "",
				"origin":                      "CreateRoute",
				"route_table_id":              "rtb-034dbc5284e92440a",
				"state":                       "active",
				"timeouts": {
					"create": "5m",
					"delete": null,
					"update": null,
				},
				"transit_gateway_id":        "",
				"vpc_endpoint_id":           "",
				"vpc_peering_connection_id": "",
			},
			"after_unknown": {},
			"before": {
				"carrier_gateway_id":          "",
				"core_network_arn":            "",
				"destination_cidr_block":      "0.0.0.0/0",
				"destination_ipv6_cidr_block": "",
				"destination_prefix_list_id":  "",
				"egress_only_gateway_id":      "",
				"gateway_id":                  "igw-0adceafb47eb02050",
				"id":                          "r-rtb-034dbc5284e92440a1080289494",
				"instance_id":                 "",
				"instance_owner_id":           "",
				"local_gateway_id":            "",
				"nat_gateway_id":              "",
				"network_interface_id":        "",
				"origin":                      "CreateRoute",
				"route_table_id":              "rtb-034dbc5284e92440a",
				"state":                       "active",
				"timeouts": {
					"create": "5m",
					"delete": null,
					"update": null,
				},
				"transit_gateway_id":        "",
				"vpc_endpoint_id":           "",
				"vpc_peering_connection_id": "",
			},
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "public_internet_gateway",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_route",
	},
	"module.vpc.aws_route_table.public[0]": {
		"address": "module.vpc.aws_route_table.public[0]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"arn":              "arn:aws:ec2:eu-west-2:564784738291:route-table/rtb-034dbc5284e92440a",
				"id":               "rtb-034dbc5284e92440a",
				"owner_id":         "564784738291",
				"propagating_vgws": [],
				"route": [
					{
						"carrier_gateway_id":         "",
						"cidr_block":                 "0.0.0.0/0",
						"core_network_arn":           "",
						"destination_prefix_list_id": "",
						"egress_only_gateway_id":     "",
						"gateway_id":                 "igw-0adceafb47eb02050",
						"ipv6_cidr_block":            "",
						"local_gateway_id":           "",
						"nat_gateway_id":             "",
						"network_interface_id":       "",
						"transit_gateway_id":         "",
						"vpc_endpoint_id":            "",
						"vpc_peering_connection_id":  "",
					},
				],
				"tags": {
					"Name": "agent-vpc-public",
				},
				"tags_all": {
					"Name":      "agent-vpc-public",
					"Owner":     "Lucy",
					"Purpose":   "Test TFC Agents",
					"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
					"TTL":       "Ephemeral Workspace",
					"Terraform": "true",
					"Workspace": "tf-agent-pool",
				},
				"timeouts": null,
				"vpc_id":   "vpc-0475656c1f1de9f54",
			},
			"after_unknown": {},
			"before": {
				"arn":              "arn:aws:ec2:eu-west-2:564784738291:route-table/rtb-034dbc5284e92440a",
				"id":               "rtb-034dbc5284e92440a",
				"owner_id":         "564784738291",
				"propagating_vgws": [],
				"route": [
					{
						"carrier_gateway_id":         "",
						"cidr_block":                 "0.0.0.0/0",
						"core_network_arn":           "",
						"destination_prefix_list_id": "",
						"egress_only_gateway_id":     "",
						"gateway_id":                 "igw-0adceafb47eb02050",
						"ipv6_cidr_block":            "",
						"local_gateway_id":           "",
						"nat_gateway_id":             "",
						"network_interface_id":       "",
						"transit_gateway_id":         "",
						"vpc_endpoint_id":            "",
						"vpc_peering_connection_id":  "",
					},
				],
				"tags": {
					"Name": "agent-vpc-public",
				},
				"tags_all": {
					"Name":      "agent-vpc-public",
					"Owner":     "Lucy",
					"Purpose":   "Test TFC Agents",
					"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
					"TTL":       "Ephemeral Workspace",
					"Terraform": "true",
					"Workspace": "tf-agent-pool",
				},
				"timeouts": null,
				"vpc_id":   "vpc-0475656c1f1de9f54",
			},
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "public",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_route_table",
	},
	"module.vpc.aws_route_table_association.public[0]": {
		"address": "module.vpc.aws_route_table_association.public[0]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"gateway_id":     "",
				"id":             "rtbassoc-0dab61280ace868b3",
				"route_table_id": "rtb-034dbc5284e92440a",
				"subnet_id":      "subnet-0b6efa305ddee152c",
				"timeouts":       null,
			},
			"after_unknown": {},
			"before": {
				"gateway_id":     "",
				"id":             "rtbassoc-0dab61280ace868b3",
				"route_table_id": "rtb-034dbc5284e92440a",
				"subnet_id":      "subnet-0b6efa305ddee152c",
				"timeouts":       null,
			},
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "public",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_route_table_association",
	},
	"module.vpc.aws_route_table_association.public[1]": {
		"address": "module.vpc.aws_route_table_association.public[1]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"gateway_id":     "",
				"id":             "rtbassoc-0fd62eb231eb0aef9",
				"route_table_id": "rtb-034dbc5284e92440a",
				"subnet_id":      "subnet-0892042fd9b88c443",
				"timeouts":       null,
			},
			"after_unknown": {},
			"before": {
				"gateway_id":     "",
				"id":             "rtbassoc-0fd62eb231eb0aef9",
				"route_table_id": "rtb-034dbc5284e92440a",
				"subnet_id":      "subnet-0892042fd9b88c443",
				"timeouts":       null,
			},
		},
		"deposed":        "",
		"index":          1,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "public",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_route_table_association",
	},
	"module.vpc.aws_route_table_association.public[2]": {
		"address": "module.vpc.aws_route_table_association.public[2]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"gateway_id":     "",
				"id":             "rtbassoc-0b1e1130e180dc2fe",
				"route_table_id": "rtb-034dbc5284e92440a",
				"subnet_id":      "subnet-0b74cf6d52312b7de",
				"timeouts":       null,
			},
			"after_unknown": {},
			"before": {
				"gateway_id":     "",
				"id":             "rtbassoc-0b1e1130e180dc2fe",
				"route_table_id": "rtb-034dbc5284e92440a",
				"subnet_id":      "subnet-0b74cf6d52312b7de",
				"timeouts":       null,
			},
		},
		"deposed":        "",
		"index":          2,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "public",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_route_table_association",
	},
	"module.vpc.aws_subnet.public[0]": {
		"address": "module.vpc.aws_subnet.public[0]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"arn": "arn:aws:ec2:eu-west-2:564784738291:subnet/subnet-0b6efa305ddee152c",
				"assign_ipv6_address_on_creation":                false,
				"availability_zone":                              "eu-west-2a",
				"availability_zone_id":                           "euw2-az2",
				"cidr_block":                                     "10.0.101.0/24",
				"customer_owned_ipv4_pool":                       "",
				"enable_dns64":                                   false,
				"enable_lni_at_device_index":                     0,
				"enable_resource_name_dns_a_record_on_launch":    false,
				"enable_resource_name_dns_aaaa_record_on_launch": false,
				"id":                                  "subnet-0b6efa305ddee152c",
				"ipv6_cidr_block":                     "",
				"ipv6_cidr_block_association_id":      "",
				"ipv6_native":                         false,
				"map_customer_owned_ip_on_launch":     false,
				"map_public_ip_on_launch":             false,
				"outpost_arn":                         "",
				"owner_id":                            "564784738291",
				"private_dns_hostname_type_on_launch": "ip-name",
				"tags": {
					"Name": "agent-vpc-public-eu-west-2a",
				},
				"tags_all": {
					"Name":      "agent-vpc-public-eu-west-2a",
					"Owner":     "Lucy",
					"Purpose":   "Test TFC Agents",
					"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
					"TTL":       "Ephemeral Workspace",
					"Terraform": "true",
					"Workspace": "tf-agent-pool",
				},
				"timeouts": null,
				"vpc_id":   "vpc-0475656c1f1de9f54",
			},
			"after_unknown": {},
			"before": {
				"arn": "arn:aws:ec2:eu-west-2:564784738291:subnet/subnet-0b6efa305ddee152c",
				"assign_ipv6_address_on_creation":                false,
				"availability_zone":                              "eu-west-2a",
				"availability_zone_id":                           "euw2-az2",
				"cidr_block":                                     "10.0.101.0/24",
				"customer_owned_ipv4_pool":                       "",
				"enable_dns64":                                   false,
				"enable_lni_at_device_index":                     0,
				"enable_resource_name_dns_a_record_on_launch":    false,
				"enable_resource_name_dns_aaaa_record_on_launch": false,
				"id":                                  "subnet-0b6efa305ddee152c",
				"ipv6_cidr_block":                     "",
				"ipv6_cidr_block_association_id":      "",
				"ipv6_native":                         false,
				"map_customer_owned_ip_on_launch":     false,
				"map_public_ip_on_launch":             false,
				"outpost_arn":                         "",
				"owner_id":                            "564784738291",
				"private_dns_hostname_type_on_launch": "ip-name",
				"tags": {
					"Name": "agent-vpc-public-eu-west-2a",
				},
				"tags_all": {
					"Name":      "agent-vpc-public-eu-west-2a",
					"Owner":     "Lucy",
					"Purpose":   "Test TFC Agents",
					"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
					"TTL":       "Ephemeral Workspace",
					"Terraform": "true",
					"Workspace": "tf-agent-pool",
				},
				"timeouts": null,
				"vpc_id":   "vpc-0475656c1f1de9f54",
			},
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "public",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_subnet",
	},
	"module.vpc.aws_subnet.public[1]": {
		"address": "module.vpc.aws_subnet.public[1]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"arn": "arn:aws:ec2:eu-west-2:564784738291:subnet/subnet-0892042fd9b88c443",
				"assign_ipv6_address_on_creation":                false,
				"availability_zone":                              "eu-west-2b",
				"availability_zone_id":                           "euw2-az3",
				"cidr_block":                                     "10.0.102.0/24",
				"customer_owned_ipv4_pool":                       "",
				"enable_dns64":                                   false,
				"enable_lni_at_device_index":                     0,
				"enable_resource_name_dns_a_record_on_launch":    false,
				"enable_resource_name_dns_aaaa_record_on_launch": false,
				"id":                                  "subnet-0892042fd9b88c443",
				"ipv6_cidr_block":                     "",
				"ipv6_cidr_block_association_id":      "",
				"ipv6_native":                         false,
				"map_customer_owned_ip_on_launch":     false,
				"map_public_ip_on_launch":             false,
				"outpost_arn":                         "",
				"owner_id":                            "564784738291",
				"private_dns_hostname_type_on_launch": "ip-name",
				"tags": {
					"Name": "agent-vpc-public-eu-west-2b",
				},
				"tags_all": {
					"Name":      "agent-vpc-public-eu-west-2b",
					"Owner":     "Lucy",
					"Purpose":   "Test TFC Agents",
					"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
					"TTL":       "Ephemeral Workspace",
					"Terraform": "true",
					"Workspace": "tf-agent-pool",
				},
				"timeouts": null,
				"vpc_id":   "vpc-0475656c1f1de9f54",
			},
			"after_unknown": {},
			"before": {
				"arn": "arn:aws:ec2:eu-west-2:564784738291:subnet/subnet-0892042fd9b88c443",
				"assign_ipv6_address_on_creation":                false,
				"availability_zone":                              "eu-west-2b",
				"availability_zone_id":                           "euw2-az3",
				"cidr_block":                                     "10.0.102.0/24",
				"customer_owned_ipv4_pool":                       "",
				"enable_dns64":                                   false,
				"enable_lni_at_device_index":                     0,
				"enable_resource_name_dns_a_record_on_launch":    false,
				"enable_resource_name_dns_aaaa_record_on_launch": false,
				"id":                                  "subnet-0892042fd9b88c443",
				"ipv6_cidr_block":                     "",
				"ipv6_cidr_block_association_id":      "",
				"ipv6_native":                         false,
				"map_customer_owned_ip_on_launch":     false,
				"map_public_ip_on_launch":             false,
				"outpost_arn":                         "",
				"owner_id":                            "564784738291",
				"private_dns_hostname_type_on_launch": "ip-name",
				"tags": {
					"Name": "agent-vpc-public-eu-west-2b",
				},
				"tags_all": {
					"Name":      "agent-vpc-public-eu-west-2b",
					"Owner":     "Lucy",
					"Purpose":   "Test TFC Agents",
					"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
					"TTL":       "Ephemeral Workspace",
					"Terraform": "true",
					"Workspace": "tf-agent-pool",
				},
				"timeouts": null,
				"vpc_id":   "vpc-0475656c1f1de9f54",
			},
		},
		"deposed":        "",
		"index":          1,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "public",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_subnet",
	},
	"module.vpc.aws_subnet.public[2]": {
		"address": "module.vpc.aws_subnet.public[2]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"arn": "arn:aws:ec2:eu-west-2:564784738291:subnet/subnet-0b74cf6d52312b7de",
				"assign_ipv6_address_on_creation":                false,
				"availability_zone":                              "eu-west-2c",
				"availability_zone_id":                           "euw2-az1",
				"cidr_block":                                     "10.0.103.0/24",
				"customer_owned_ipv4_pool":                       "",
				"enable_dns64":                                   false,
				"enable_lni_at_device_index":                     0,
				"enable_resource_name_dns_a_record_on_launch":    false,
				"enable_resource_name_dns_aaaa_record_on_launch": false,
				"id":                                  "subnet-0b74cf6d52312b7de",
				"ipv6_cidr_block":                     "",
				"ipv6_cidr_block_association_id":      "",
				"ipv6_native":                         false,
				"map_customer_owned_ip_on_launch":     false,
				"map_public_ip_on_launch":             false,
				"outpost_arn":                         "",
				"owner_id":                            "564784738291",
				"private_dns_hostname_type_on_launch": "ip-name",
				"tags": {
					"Name": "agent-vpc-public-eu-west-2c",
				},
				"tags_all": {
					"Name":      "agent-vpc-public-eu-west-2c",
					"Owner":     "Lucy",
					"Purpose":   "Test TFC Agents",
					"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
					"TTL":       "Ephemeral Workspace",
					"Terraform": "true",
					"Workspace": "tf-agent-pool",
				},
				"timeouts": null,
				"vpc_id":   "vpc-0475656c1f1de9f54",
			},
			"after_unknown": {},
			"before": {
				"arn": "arn:aws:ec2:eu-west-2:564784738291:subnet/subnet-0b74cf6d52312b7de",
				"assign_ipv6_address_on_creation":                false,
				"availability_zone":                              "eu-west-2c",
				"availability_zone_id":                           "euw2-az1",
				"cidr_block":                                     "10.0.103.0/24",
				"customer_owned_ipv4_pool":                       "",
				"enable_dns64":                                   false,
				"enable_lni_at_device_index":                     0,
				"enable_resource_name_dns_a_record_on_launch":    false,
				"enable_resource_name_dns_aaaa_record_on_launch": false,
				"id":                                  "subnet-0b74cf6d52312b7de",
				"ipv6_cidr_block":                     "",
				"ipv6_cidr_block_association_id":      "",
				"ipv6_native":                         false,
				"map_customer_owned_ip_on_launch":     false,
				"map_public_ip_on_launch":             false,
				"outpost_arn":                         "",
				"owner_id":                            "564784738291",
				"private_dns_hostname_type_on_launch": "ip-name",
				"tags": {
					"Name": "agent-vpc-public-eu-west-2c",
				},
				"tags_all": {
					"Name":      "agent-vpc-public-eu-west-2c",
					"Owner":     "Lucy",
					"Purpose":   "Test TFC Agents",
					"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
					"TTL":       "Ephemeral Workspace",
					"Terraform": "true",
					"Workspace": "tf-agent-pool",
				},
				"timeouts": null,
				"vpc_id":   "vpc-0475656c1f1de9f54",
			},
		},
		"deposed":        "",
		"index":          2,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "public",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_subnet",
	},
	"module.vpc.aws_vpc.this[0]": {
		"address": "module.vpc.aws_vpc.this[0]",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"arn": "arn:aws:ec2:eu-west-2:564784738291:vpc/vpc-0475656c1f1de9f54",
				"assign_generated_ipv6_cidr_block":     false,
				"cidr_block":                           "10.0.0.0/16",
				"default_network_acl_id":               "acl-047c9b8117d436487",
				"default_route_table_id":               "rtb-087b68f71c1fbb116",
				"default_security_group_id":            "sg-02f76aa6f404e5bf1",
				"dhcp_options_id":                      "dopt-0bb7c3f05a56647e9",
				"enable_dns_hostnames":                 true,
				"enable_dns_support":                   true,
				"enable_network_address_usage_metrics": false,
				"id":                                   "vpc-0475656c1f1de9f54",
				"instance_tenancy":                     "default",
				"ipv4_ipam_pool_id":                    null,
				"ipv4_netmask_length":                  null,
				"ipv6_association_id":                  "",
				"ipv6_cidr_block":                      "",
				"ipv6_cidr_block_network_border_group": "",
				"ipv6_ipam_pool_id":                    "",
				"ipv6_netmask_length":                  0,
				"main_route_table_id":                  "rtb-087b68f71c1fbb116",
				"owner_id":                             "564784738291",
				"tags": {
					"Name": "agent-vpc",
				},
				"tags_all": {
					"Name":      "agent-vpc",
					"Owner":     "Lucy",
					"Purpose":   "Test TFC Agents",
					"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
					"TTL":       "Ephemeral Workspace",
					"Terraform": "true",
					"Workspace": "tf-agent-pool",
				},
			},
			"after_unknown": {},
			"before": {
				"arn": "arn:aws:ec2:eu-west-2:564784738291:vpc/vpc-0475656c1f1de9f54",
				"assign_generated_ipv6_cidr_block":     false,
				"cidr_block":                           "10.0.0.0/16",
				"default_network_acl_id":               "acl-047c9b8117d436487",
				"default_route_table_id":               "rtb-087b68f71c1fbb116",
				"default_security_group_id":            "sg-02f76aa6f404e5bf1",
				"dhcp_options_id":                      "dopt-0bb7c3f05a56647e9",
				"enable_dns_hostnames":                 true,
				"enable_dns_support":                   true,
				"enable_network_address_usage_metrics": false,
				"id":                                   "vpc-0475656c1f1de9f54",
				"instance_tenancy":                     "default",
				"ipv4_ipam_pool_id":                    null,
				"ipv4_netmask_length":                  null,
				"ipv6_association_id":                  "",
				"ipv6_cidr_block":                      "",
				"ipv6_cidr_block_network_border_group": "",
				"ipv6_ipam_pool_id":                    "",
				"ipv6_netmask_length":                  0,
				"main_route_table_id":                  "rtb-087b68f71c1fbb116",
				"owner_id":                             "564784738291",
				"tags": {
					"Name": "agent-vpc",
				},
				"tags_all": {
					"Name":      "agent-vpc",
					"Owner":     "Lucy",
					"Purpose":   "Test TFC Agents",
					"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
					"TTL":       "Ephemeral Workspace",
					"Terraform": "true",
					"Workspace": "tf-agent-pool",
				},
			},
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "this",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_vpc",
	},
	"null_resource.exec": {
		"address": "null_resource.exec",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"triggers": null,
			},
			"after_unknown": {
				"id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "exec",
		"provider_name":  "registry.terraform.io/hashicorp/null",
		"type":           "null_resource",
	},
}

resource_drift = {
	"aws_instance.agent": {
		"address": "aws_instance.agent",
		"change": {
			"actions": [
				"update",
			],
			"after": {
				"ami": "ami-0c41542cdc0e23561",
				"arn": "arn:aws:ec2:eu-west-2:564784738291:instance/i-092ab9a8394c1849a",
				"associate_public_ip_address": true,
				"availability_zone":           "eu-west-2a",
				"capacity_reservation_specification": [
					{
						"capacity_reservation_preference": "open",
						"capacity_reservation_target":     [],
					},
				],
				"cpu_core_count": 2,
				"cpu_options": [
					{
						"amd_sev_snp":      "",
						"core_count":       2,
						"threads_per_core": 1,
					},
				],
				"cpu_threads_per_core": 1,
				"credit_specification": [
					{
						"cpu_credits": "unlimited",
					},
				],
				"disable_api_stop":        false,
				"disable_api_termination": false,
				"ebs_block_device":        [],
				"ebs_optimized":           false,
				"enable_primary_ipv6":     null,
				"enclave_options": [
					{
						"enabled": false,
					},
				],
				"ephemeral_block_device":  [],
				"get_password_data":       false,
				"hibernation":             false,
				"host_id":                 "",
				"host_resource_group_arn": null,
				"iam_instance_profile":    "",
				"id": "i-092ab9a8394c1849a",
				"instance_initiated_shutdown_behavior": "stop",
				"instance_lifecycle":                   "",
				"instance_market_options":              [],
				"instance_state":                       "running",
				"instance_type":                        "t4g.nano",
				"ipv6_address_count":                   0,
				"ipv6_addresses":                       [],
				"key_name":                             "",
				"launch_template":                      [],
				"maintenance_options": [
					{
						"auto_recovery": "default",
					},
				],
				"metadata_options": [
					{
						"http_endpoint":               "enabled",
						"http_protocol_ipv6":          "disabled",
						"http_put_response_hop_limit": 2,
						"http_tokens":                 "required",
						"instance_metadata_tags":      "disabled",
					},
				],
				"monitoring":                   false,
				"network_interface":            [],
				"outpost_arn":                  "",
				"password_data":                "",
				"placement_group":              "",
				"placement_partition_number":   0,
				"primary_network_interface_id": "eni-0eeb14909b2c30913",
				"private_dns":                  "ip-10-0-101-104.eu-west-2.compute.internal",
				"private_dns_name_options": [
					{
						"enable_resource_name_dns_a_record":    false,
						"enable_resource_name_dns_aaaa_record": false,
						"hostname_type":                        "ip-name",
					},
				],
				"private_ip": "10.0.101.104",
				"public_dns": "ec2-13-40-68-231.eu-west-2.compute.amazonaws.com",
				"public_ip":  "13.40.68.231",
				"root_block_device": [
					{
						"delete_on_termination": true,
						"device_name":           "/dev/xvda",
						"encrypted":             false,
						"iops":                  3000,
						"kms_key_id":            "",
						"tags": {
							"Name":      "Test TFC Agents",
							"Owner":     "Lucy",
							"Purpose":   "Test TFC Agents",
							"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
							"TTL":       "Ephemeral Workspace",
							"Terraform": "true",
							"Workspace": "tf-agent-pool",
						},
						"tags_all": {
							"Name":      "Test TFC Agents",
							"Owner":     "Lucy",
							"Purpose":   "Test TFC Agents",
							"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
							"TTL":       "Ephemeral Workspace",
							"Terraform": "true",
							"Workspace": "tf-agent-pool",
						},
						"throughput":  125,
						"volume_id":   "vol-01205027ba0d5ab15",
						"volume_size": 8,
						"volume_type": "gp3",
					},
				],
				"secondary_private_ips":    [],
				"security_groups":          [],
				"source_dest_check":        true,
				"spot_instance_request_id": "",
				"subnet_id":                "subnet-0b6efa305ddee152c",
				"tags":                     {},
				"tags_all": {
					"Name":      "Test TFC Agents",
					"Owner":     "Lucy",
					"Purpose":   "Test TFC Agents",
					"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
					"TTL":       "Ephemeral Workspace",
					"Terraform": "true",
					"Workspace": "tf-agent-pool",
				},
				"tenancy":                     "default",
				"timeouts":                    null,
				"user_data":                   "aeed59865dcb84fd41cc9aec2405fdf1d41b18c5",
				"user_data_base64":            null,
				"user_data_replace_on_change": false,
				"volume_tags":                 null,
				"vpc_security_group_ids": [
					"sg-0241af841da648da0",
					"sg-077ef699c0cf2cd42",
				],
			},
			"after_unknown": {},
			"before": {
				"ami": "ami-0c41542cdc0e23561",
				"arn": "arn:aws:ec2:eu-west-2:564784738291:instance/i-092ab9a8394c1849a",
				"associate_public_ip_address": true,
				"availability_zone":           "eu-west-2a",
				"capacity_reservation_specification": [
					{
						"capacity_reservation_preference": "open",
						"capacity_reservation_target":     [],
					},
				],
				"cpu_core_count": 2,
				"cpu_options": [
					{
						"amd_sev_snp":      "",
						"core_count":       2,
						"threads_per_core": 1,
					},
				],
				"cpu_threads_per_core": 1,
				"credit_specification": [
					{
						"cpu_credits": "unlimited",
					},
				],
				"disable_api_stop":        false,
				"disable_api_termination": false,
				"ebs_block_device":        [],
				"ebs_optimized":           false,
				"enable_primary_ipv6":     null,
				"enclave_options": [
					{
						"enabled": false,
					},
				],
				"ephemeral_block_device":  [],
				"get_password_data":       false,
				"hibernation":             false,
				"host_id":                 "",
				"host_resource_group_arn": null,
				"iam_instance_profile":    "",
				"id": "i-092ab9a8394c1849a",
				"instance_initiated_shutdown_behavior": "stop",
				"instance_lifecycle":                   "",
				"instance_market_options":              [],
				"instance_state":                       "running",
				"instance_type":                        "t4g.nano",
				"ipv6_address_count":                   0,
				"ipv6_addresses":                       [],
				"key_name":                             "",
				"launch_template":                      [],
				"maintenance_options": [
					{
						"auto_recovery": "default",
					},
				],
				"metadata_options": [
					{
						"http_endpoint":               "enabled",
						"http_protocol_ipv6":          "disabled",
						"http_put_response_hop_limit": 2,
						"http_tokens":                 "required",
						"instance_metadata_tags":      "disabled",
					},
				],
				"monitoring":                   false,
				"network_interface":            [],
				"outpost_arn":                  "",
				"password_data":                "",
				"placement_group":              "",
				"placement_partition_number":   0,
				"primary_network_interface_id": "eni-0eeb14909b2c30913",
				"private_dns":                  "ip-10-0-101-104.eu-west-2.compute.internal",
				"private_dns_name_options": [
					{
						"enable_resource_name_dns_a_record":    false,
						"enable_resource_name_dns_aaaa_record": false,
						"hostname_type":                        "ip-name",
					},
				],
				"private_ip": "10.0.101.104",
				"public_dns": "ec2-13-40-68-231.eu-west-2.compute.amazonaws.com",
				"public_ip":  "13.40.68.231",
				"root_block_device": [
					{
						"delete_on_termination": true,
						"device_name":           "/dev/xvda",
						"encrypted":             false,
						"iops":                  3000,
						"kms_key_id":            "",
						"tags": {
							"Name":      "Test TFC Agents",
							"Owner":     "Lucy",
							"Purpose":   "Test TFC Agents",
							"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
							"TTL":       "Ephemeral Workspace",
							"Terraform": "true",
							"Workspace": "tf-agent-pool",
						},
						"tags_all": {
							"Name":      "Test TFC Agents",
							"Owner":     "Lucy",
							"Purpose":   "Test TFC Agents",
							"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
							"TTL":       "Ephemeral Workspace",
							"Terraform": "true",
							"Workspace": "tf-agent-pool",
						},
						"throughput":  125,
						"volume_id":   "vol-01205027ba0d5ab15",
						"volume_size": 8,
						"volume_type": "gp3",
					},
				],
				"secondary_private_ips":    [],
				"security_groups":          [],
				"source_dest_check":        true,
				"spot_instance_request_id": "",
				"subnet_id":                "subnet-0b6efa305ddee152c",
				"tags":                     null,
				"tags_all": {
					"Name":      "Test TFC Agents",
					"Owner":     "Lucy",
					"Purpose":   "Test TFC Agents",
					"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
					"TTL":       "Ephemeral Workspace",
					"Terraform": "true",
					"Workspace": "tf-agent-pool",
				},
				"tenancy":                     "default",
				"timeouts":                    null,
				"user_data":                   "aeed59865dcb84fd41cc9aec2405fdf1d41b18c5",
				"user_data_base64":            null,
				"user_data_replace_on_change": false,
				"volume_tags":                 null,
				"vpc_security_group_ids": [
					"sg-0241af841da648da0",
					"sg-077ef699c0cf2cd42",
				],
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "agent",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_instance",
	},
	"aws_security_group.outbound_http": {
		"address": "aws_security_group.outbound_http",
		"change": {
			"actions": [
				"update",
			],
			"after": {
				"arn":         "arn:aws:ec2:eu-west-2:564784738291:security-group/sg-077ef699c0cf2cd42",
				"description": "Allow outbound HTTP(S) access to everywhere",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description": "",
						"from_port":   443,
						"ipv6_cidr_blocks": [
							"::/0",
						],
						"prefix_list_ids": [],
						"protocol":        "tcp",
						"security_groups": [],
						"self":            false,
						"to_port":         443,
					},
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description": "",
						"from_port":   80,
						"ipv6_cidr_blocks": [
							"::/0",
						],
						"prefix_list_ids": [],
						"protocol":        "tcp",
						"security_groups": [],
						"self":            false,
						"to_port":         80,
					},
				],
				"id":                     "sg-077ef699c0cf2cd42",
				"ingress":                [],
				"name":                   "outbound_http",
				"name_prefix":            "",
				"owner_id":               "564784738291",
				"revoke_rules_on_delete": false,
				"tags": {},
				"tags_all": {
					"Name":      "Test TFC Agents",
					"Owner":     "Lucy",
					"Purpose":   "Test TFC Agents",
					"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
					"TTL":       "Ephemeral Workspace",
					"Terraform": "true",
					"Workspace": "tf-agent-pool",
				},
				"timeouts": null,
				"vpc_id":   "vpc-0475656c1f1de9f54",
			},
			"after_unknown": {},
			"before": {
				"arn":         "arn:aws:ec2:eu-west-2:564784738291:security-group/sg-077ef699c0cf2cd42",
				"description": "Allow outbound HTTP(S) access to everywhere",
				"egress": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description": "",
						"from_port":   443,
						"ipv6_cidr_blocks": [
							"::/0",
						],
						"prefix_list_ids": [],
						"protocol":        "tcp",
						"security_groups": [],
						"self":            false,
						"to_port":         443,
					},
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description": "",
						"from_port":   80,
						"ipv6_cidr_blocks": [
							"::/0",
						],
						"prefix_list_ids": [],
						"protocol":        "tcp",
						"security_groups": [],
						"self":            false,
						"to_port":         80,
					},
				],
				"id":                     "sg-077ef699c0cf2cd42",
				"ingress":                [],
				"name":                   "outbound_http",
				"name_prefix":            "",
				"owner_id":               "564784738291",
				"revoke_rules_on_delete": false,
				"tags": null,
				"tags_all": {
					"Name":      "Test TFC Agents",
					"Owner":     "Lucy",
					"Purpose":   "Test TFC Agents",
					"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
					"TTL":       "Ephemeral Workspace",
					"Terraform": "true",
					"Workspace": "tf-agent-pool",
				},
				"timeouts": null,
				"vpc_id":   "vpc-0475656c1f1de9f54",
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "outbound_http",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_security_group",
	},
	"module.vpc.aws_default_network_acl.this[0]": {
		"address": "module.vpc.aws_default_network_acl.this[0]",
		"change": {
			"actions": [
				"update",
			],
			"after": {
				"arn": "arn:aws:ec2:eu-west-2:564784738291:network-acl/acl-047c9b8117d436487",
				"default_network_acl_id": "acl-047c9b8117d436487",
				"egress": [
					{
						"action":          "allow",
						"cidr_block":      "",
						"from_port":       0,
						"icmp_code":       0,
						"icmp_type":       0,
						"ipv6_cidr_block": "::/0",
						"protocol":        "-1",
						"rule_no":         101,
						"to_port":         0,
					},
					{
						"action":          "allow",
						"cidr_block":      "0.0.0.0/0",
						"from_port":       0,
						"icmp_code":       0,
						"icmp_type":       0,
						"ipv6_cidr_block": "",
						"protocol":        "-1",
						"rule_no":         100,
						"to_port":         0,
					},
				],
				"id": "acl-047c9b8117d436487",
				"ingress": [
					{
						"action":          "allow",
						"cidr_block":      "",
						"from_port":       0,
						"icmp_code":       0,
						"icmp_type":       0,
						"ipv6_cidr_block": "::/0",
						"protocol":        "-1",
						"rule_no":         101,
						"to_port":         0,
					},
					{
						"action":          "allow",
						"cidr_block":      "0.0.0.0/0",
						"from_port":       0,
						"icmp_code":       0,
						"icmp_type":       0,
						"ipv6_cidr_block": "",
						"protocol":        "-1",
						"rule_no":         100,
						"to_port":         0,
					},
				],
				"owner_id": "564784738291",
				"subnet_ids": [
					"subnet-0892042fd9b88c443",
					"subnet-0b6efa305ddee152c",
					"subnet-0b74cf6d52312b7de",
				],
				"tags": {
					"Name": "agent-vpc-default",
				},
				"tags_all": {
					"Name":      "agent-vpc-default",
					"Owner":     "Lucy",
					"Purpose":   "Test TFC Agents",
					"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
					"TTL":       "Ephemeral Workspace",
					"Terraform": "true",
					"Workspace": "tf-agent-pool",
				},
				"vpc_id": "vpc-0475656c1f1de9f54",
			},
			"after_unknown": {},
			"before": {
				"arn": "arn:aws:ec2:eu-west-2:564784738291:network-acl/acl-047c9b8117d436487",
				"default_network_acl_id": "acl-047c9b8117d436487",
				"egress": [
					{
						"action":          "allow",
						"cidr_block":      "",
						"from_port":       0,
						"icmp_code":       null,
						"icmp_type":       null,
						"ipv6_cidr_block": "::/0",
						"protocol":        "-1",
						"rule_no":         101,
						"to_port":         0,
					},
					{
						"action":          "allow",
						"cidr_block":      "0.0.0.0/0",
						"from_port":       0,
						"icmp_code":       null,
						"icmp_type":       null,
						"ipv6_cidr_block": "",
						"protocol":        "-1",
						"rule_no":         100,
						"to_port":         0,
					},
				],
				"id": "acl-047c9b8117d436487",
				"ingress": [
					{
						"action":          "allow",
						"cidr_block":      "",
						"from_port":       0,
						"icmp_code":       null,
						"icmp_type":       null,
						"ipv6_cidr_block": "::/0",
						"protocol":        "-1",
						"rule_no":         101,
						"to_port":         0,
					},
					{
						"action":          "allow",
						"cidr_block":      "0.0.0.0/0",
						"from_port":       0,
						"icmp_code":       null,
						"icmp_type":       null,
						"ipv6_cidr_block": "",
						"protocol":        "-1",
						"rule_no":         100,
						"to_port":         0,
					},
				],
				"owner_id": "564784738291",
				"subnet_ids": [
					"subnet-0892042fd9b88c443",
					"subnet-0b6efa305ddee152c",
					"subnet-0b74cf6d52312b7de",
				],
				"tags": {
					"Name": "agent-vpc-default",
				},
				"tags_all": {
					"Name":      "agent-vpc-default",
					"Owner":     "Lucy",
					"Purpose":   "Test TFC Agents",
					"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
					"TTL":       "Ephemeral Workspace",
					"Terraform": "true",
					"Workspace": "tf-agent-pool",
				},
				"vpc_id": "vpc-0475656c1f1de9f54",
			},
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "this",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_default_network_acl",
	},
	"module.vpc.aws_default_route_table.default[0]": {
		"address": "module.vpc.aws_default_route_table.default[0]",
		"change": {
			"actions": [
				"update",
			],
			"after": {
				"arn": "arn:aws:ec2:eu-west-2:564784738291:route-table/rtb-087b68f71c1fbb116",
				"default_route_table_id": "rtb-087b68f71c1fbb116",
				"id":               "rtb-087b68f71c1fbb116",
				"owner_id":         "564784738291",
				"propagating_vgws": [],
				"route":            [],
				"tags": {
					"Name": "agent-vpc-default",
				},
				"tags_all": {
					"Name":      "agent-vpc-default",
					"Owner":     "Lucy",
					"Purpose":   "Test TFC Agents",
					"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
					"TTL":       "Ephemeral Workspace",
					"Terraform": "true",
					"Workspace": "tf-agent-pool",
				},
				"timeouts": {
					"create": "5m",
					"update": "5m",
				},
				"vpc_id": "vpc-0475656c1f1de9f54",
			},
			"after_unknown": {},
			"before": {
				"arn": "arn:aws:ec2:eu-west-2:564784738291:route-table/rtb-087b68f71c1fbb116",
				"default_route_table_id": "rtb-087b68f71c1fbb116",
				"id":               "rtb-087b68f71c1fbb116",
				"owner_id":         "564784738291",
				"propagating_vgws": null,
				"route":            [],
				"tags": {
					"Name": "agent-vpc-default",
				},
				"tags_all": {
					"Name":      "agent-vpc-default",
					"Owner":     "Lucy",
					"Purpose":   "Test TFC Agents",
					"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
					"TTL":       "Ephemeral Workspace",
					"Terraform": "true",
					"Workspace": "tf-agent-pool",
				},
				"timeouts": {
					"create": "5m",
					"update": "5m",
				},
				"vpc_id": "vpc-0475656c1f1de9f54",
			},
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "default",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_default_route_table",
	},
	"module.vpc.aws_route_table.public[0]": {
		"address": "module.vpc.aws_route_table.public[0]",
		"change": {
			"actions": [
				"update",
			],
			"after": {
				"arn":              "arn:aws:ec2:eu-west-2:564784738291:route-table/rtb-034dbc5284e92440a",
				"id":               "rtb-034dbc5284e92440a",
				"owner_id":         "564784738291",
				"propagating_vgws": [],
				"route": [
					{
						"carrier_gateway_id":         "",
						"cidr_block":                 "0.0.0.0/0",
						"core_network_arn":           "",
						"destination_prefix_list_id": "",
						"egress_only_gateway_id":     "",
						"gateway_id":                 "igw-0adceafb47eb02050",
						"ipv6_cidr_block":            "",
						"local_gateway_id":           "",
						"nat_gateway_id":             "",
						"network_interface_id":       "",
						"transit_gateway_id":         "",
						"vpc_endpoint_id":            "",
						"vpc_peering_connection_id":  "",
					},
				],
				"tags": {
					"Name": "agent-vpc-public",
				},
				"tags_all": {
					"Name":      "agent-vpc-public",
					"Owner":     "Lucy",
					"Purpose":   "Test TFC Agents",
					"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
					"TTL":       "Ephemeral Workspace",
					"Terraform": "true",
					"Workspace": "tf-agent-pool",
				},
				"timeouts": null,
				"vpc_id":   "vpc-0475656c1f1de9f54",
			},
			"after_unknown": {},
			"before": {
				"arn":              "arn:aws:ec2:eu-west-2:564784738291:route-table/rtb-034dbc5284e92440a",
				"id":               "rtb-034dbc5284e92440a",
				"owner_id":         "564784738291",
				"propagating_vgws": [],
				"route":            [],
				"tags": {
					"Name": "agent-vpc-public",
				},
				"tags_all": {
					"Name":      "agent-vpc-public",
					"Owner":     "Lucy",
					"Purpose":   "Test TFC Agents",
					"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
					"TTL":       "Ephemeral Workspace",
					"Terraform": "true",
					"Workspace": "tf-agent-pool",
				},
				"timeouts": null,
				"vpc_id":   "vpc-0475656c1f1de9f54",
			},
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "public",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_route_table",
	},
}

output_changes = {
	"ec2_instance_connect_url": {
		"change": {
			"actions": [
				"no-op",
			],
			"after":         "https://eu-west-2.console.aws.amazon.com/ec2/home?region=eu-west-2#ConnectToInstance:instanceId=i-092ab9a8394c1849a",
			"after_unknown": false,
			"before":        "https://eu-west-2.console.aws.amazon.com/ec2/home?region=eu-west-2#ConnectToInstance:instanceId=i-092ab9a8394c1849a",
		},
		"name": "ec2_instance_connect_url",
	},
}

raw = {
	"configuration": {
		"provider_config": {
			"aws": {
				"expressions": {
					"default_tags": [
						{
							"tags": {
								"references": [
									"terraform.workspace",
								],
							},
						},
					],
					"region": {
						"constant_value": "eu-west-2",
					},
				},
				"full_name":          "registry.terraform.io/hashicorp/aws",
				"name":               "aws",
				"version_constraint": "~> 5.0",
			},
			"null": {
				"full_name": "registry.terraform.io/hashicorp/null",
				"name":      "null",
			},
			"tfe": {
				"full_name": "registry.terraform.io/hashicorp/tfe",
				"name":      "tfe",
			},
		},
		"root_module": {
			"module_calls": {
				"vpc": {
					"expressions": {
						"azs": {
							"references": [
								"data.aws_availability_zones.available.names",
								"data.aws_availability_zones.available",
							],
						},
						"cidr": {
							"constant_value": "10.0.0.0/16",
						},
						"name": {
							"constant_value": "agent-vpc",
						},
						"public_subnets": {
							"constant_value": [
								"10.0.101.0/24",
								"10.0.102.0/24",
								"10.0.103.0/24",
							],
						},
					},
					"module": {
						"outputs": {
							"azs": {
								"description": "A list of availability zones specified as argument to this module",
								"expression": {
									"references": [
										"var.azs",
									],
								},
							},
							"cgw_arns": {
								"description": "List of ARNs of Customer Gateway",
								"expression": {
									"references": [
										"aws_customer_gateway.this",
									],
								},
							},
							"cgw_ids": {
								"description": "List of IDs of Customer Gateway",
								"expression": {
									"references": [
										"aws_customer_gateway.this",
									],
								},
							},
							"database_internet_gateway_route_id": {
								"description": "ID of the database internet gateway route",
								"expression": {
									"references": [
										"aws_route.database_internet_gateway[0].id",
										"aws_route.database_internet_gateway[0]",
										"aws_route.database_internet_gateway",
									],
								},
							},
							"database_ipv6_egress_route_id": {
								"description": "ID of the database IPv6 egress route",
								"expression": {
									"references": [
										"aws_route.database_ipv6_egress[0].id",
										"aws_route.database_ipv6_egress[0]",
										"aws_route.database_ipv6_egress",
									],
								},
							},
							"database_nat_gateway_route_ids": {
								"description": "List of IDs of the database nat gateway route",
								"expression": {
									"references": [
										"aws_route.database_nat_gateway",
									],
								},
							},
							"database_network_acl_arn": {
								"description": "ARN of the database network ACL",
								"expression": {
									"references": [
										"aws_network_acl.database[0].arn",
										"aws_network_acl.database[0]",
										"aws_network_acl.database",
									],
								},
							},
							"database_network_acl_id": {
								"description": "ID of the database network ACL",
								"expression": {
									"references": [
										"aws_network_acl.database[0].id",
										"aws_network_acl.database[0]",
										"aws_network_acl.database",
									],
								},
							},
							"database_route_table_association_ids": {
								"description": "List of IDs of the database route table association",
								"expression": {
									"references": [
										"aws_route_table_association.database",
									],
								},
							},
							"database_route_table_ids": {
								"description": "List of IDs of database route tables",
								"expression": {
									"references": [
										"aws_route_table.database",
										"aws_route_table.database",
										"aws_route_table.private",
									],
								},
							},
							"database_subnet_arns": {
								"description": "List of ARNs of database subnets",
								"expression": {
									"references": [
										"aws_subnet.database",
									],
								},
							},
							"database_subnet_group": {
								"description": "ID of database subnet group",
								"expression": {
									"references": [
										"aws_db_subnet_group.database[0].id",
										"aws_db_subnet_group.database[0]",
										"aws_db_subnet_group.database",
									],
								},
							},
							"database_subnet_group_name": {
								"description": "Name of database subnet group",
								"expression": {
									"references": [
										"aws_db_subnet_group.database[0].name",
										"aws_db_subnet_group.database[0]",
										"aws_db_subnet_group.database",
									],
								},
							},
							"database_subnet_objects": {
								"description": "A list of all database subnets, containing the full objects.",
								"expression": {
									"references": [
										"aws_subnet.database",
									],
								},
							},
							"database_subnets": {
								"description": "List of IDs of database subnets",
								"expression": {
									"references": [
										"aws_subnet.database",
									],
								},
							},
							"database_subnets_cidr_blocks": {
								"description": "List of cidr_blocks of database subnets",
								"expression": {
									"references": [
										"aws_subnet.database",
									],
								},
							},
							"database_subnets_ipv6_cidr_blocks": {
								"description": "List of IPv6 cidr_blocks of database subnets in an IPv6 enabled VPC",
								"expression": {
									"references": [
										"aws_subnet.database",
									],
								},
							},
							"default_network_acl_id": {
								"description": "The ID of the default network ACL",
								"expression": {
									"references": [
										"aws_vpc.this[0].default_network_acl_id",
										"aws_vpc.this[0]",
										"aws_vpc.this",
									],
								},
							},
							"default_route_table_id": {
								"description": "The ID of the default route table",
								"expression": {
									"references": [
										"aws_vpc.this[0].default_route_table_id",
										"aws_vpc.this[0]",
										"aws_vpc.this",
									],
								},
							},
							"default_security_group_id": {
								"description": "The ID of the security group created by default on VPC creation",
								"expression": {
									"references": [
										"aws_vpc.this[0].default_security_group_id",
										"aws_vpc.this[0]",
										"aws_vpc.this",
									],
								},
							},
							"default_vpc_arn": {
								"description": "The ARN of the Default VPC",
								"expression": {
									"references": [
										"aws_default_vpc.this[0].arn",
										"aws_default_vpc.this[0]",
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_cidr_block": {
								"description": "The CIDR block of the Default VPC",
								"expression": {
									"references": [
										"aws_default_vpc.this[0].cidr_block",
										"aws_default_vpc.this[0]",
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_default_network_acl_id": {
								"description": "The ID of the default network ACL of the Default VPC",
								"expression": {
									"references": [
										"aws_default_vpc.this[0].default_network_acl_id",
										"aws_default_vpc.this[0]",
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_default_route_table_id": {
								"description": "The ID of the default route table of the Default VPC",
								"expression": {
									"references": [
										"aws_default_vpc.this[0].default_route_table_id",
										"aws_default_vpc.this[0]",
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_default_security_group_id": {
								"description": "The ID of the security group created by default on Default VPC creation",
								"expression": {
									"references": [
										"aws_default_vpc.this[0].default_security_group_id",
										"aws_default_vpc.this[0]",
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_enable_dns_hostnames": {
								"description": "Whether or not the Default VPC has DNS hostname support",
								"expression": {
									"references": [
										"aws_default_vpc.this[0].enable_dns_hostnames",
										"aws_default_vpc.this[0]",
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_enable_dns_support": {
								"description": "Whether or not the Default VPC has DNS support",
								"expression": {
									"references": [
										"aws_default_vpc.this[0].enable_dns_support",
										"aws_default_vpc.this[0]",
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_id": {
								"description": "The ID of the Default VPC",
								"expression": {
									"references": [
										"aws_default_vpc.this[0].id",
										"aws_default_vpc.this[0]",
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_instance_tenancy": {
								"description": "Tenancy of instances spin up within Default VPC",
								"expression": {
									"references": [
										"aws_default_vpc.this[0].instance_tenancy",
										"aws_default_vpc.this[0]",
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_main_route_table_id": {
								"description": "The ID of the main route table associated with the Default VPC",
								"expression": {
									"references": [
										"aws_default_vpc.this[0].main_route_table_id",
										"aws_default_vpc.this[0]",
										"aws_default_vpc.this",
									],
								},
							},
							"dhcp_options_id": {
								"description": "The ID of the DHCP options",
								"expression": {
									"references": [
										"aws_vpc_dhcp_options.this[0].id",
										"aws_vpc_dhcp_options.this[0]",
										"aws_vpc_dhcp_options.this",
									],
								},
							},
							"egress_only_internet_gateway_id": {
								"description": "The ID of the egress only Internet Gateway",
								"expression": {
									"references": [
										"aws_egress_only_internet_gateway.this[0].id",
										"aws_egress_only_internet_gateway.this[0]",
										"aws_egress_only_internet_gateway.this",
									],
								},
							},
							"elasticache_network_acl_arn": {
								"description": "ARN of the elasticache network ACL",
								"expression": {
									"references": [
										"aws_network_acl.elasticache[0].arn",
										"aws_network_acl.elasticache[0]",
										"aws_network_acl.elasticache",
									],
								},
							},
							"elasticache_network_acl_id": {
								"description": "ID of the elasticache network ACL",
								"expression": {
									"references": [
										"aws_network_acl.elasticache[0].id",
										"aws_network_acl.elasticache[0]",
										"aws_network_acl.elasticache",
									],
								},
							},
							"elasticache_route_table_association_ids": {
								"description": "List of IDs of the elasticache route table association",
								"expression": {
									"references": [
										"aws_route_table_association.elasticache",
									],
								},
							},
							"elasticache_route_table_ids": {
								"description": "List of IDs of elasticache route tables",
								"expression": {
									"references": [
										"aws_route_table.elasticache",
										"local.private_route_table_ids",
									],
								},
							},
							"elasticache_subnet_arns": {
								"description": "List of ARNs of elasticache subnets",
								"expression": {
									"references": [
										"aws_subnet.elasticache",
									],
								},
							},
							"elasticache_subnet_group": {
								"description": "ID of elasticache subnet group",
								"expression": {
									"references": [
										"aws_elasticache_subnet_group.elasticache[0].id",
										"aws_elasticache_subnet_group.elasticache[0]",
										"aws_elasticache_subnet_group.elasticache",
									],
								},
							},
							"elasticache_subnet_group_name": {
								"description": "Name of elasticache subnet group",
								"expression": {
									"references": [
										"aws_elasticache_subnet_group.elasticache[0].name",
										"aws_elasticache_subnet_group.elasticache[0]",
										"aws_elasticache_subnet_group.elasticache",
									],
								},
							},
							"elasticache_subnet_objects": {
								"description": "A list of all elasticache subnets, containing the full objects.",
								"expression": {
									"references": [
										"aws_subnet.elasticache",
									],
								},
							},
							"elasticache_subnets": {
								"description": "List of IDs of elasticache subnets",
								"expression": {
									"references": [
										"aws_subnet.elasticache",
									],
								},
							},
							"elasticache_subnets_cidr_blocks": {
								"description": "List of cidr_blocks of elasticache subnets",
								"expression": {
									"references": [
										"aws_subnet.elasticache",
									],
								},
							},
							"elasticache_subnets_ipv6_cidr_blocks": {
								"description": "List of IPv6 cidr_blocks of elasticache subnets in an IPv6 enabled VPC",
								"expression": {
									"references": [
										"aws_subnet.elasticache",
									],
								},
							},
							"igw_arn": {
								"description": "The ARN of the Internet Gateway",
								"expression": {
									"references": [
										"aws_internet_gateway.this[0].arn",
										"aws_internet_gateway.this[0]",
										"aws_internet_gateway.this",
									],
								},
							},
							"igw_id": {
								"description": "The ID of the Internet Gateway",
								"expression": {
									"references": [
										"aws_internet_gateway.this[0].id",
										"aws_internet_gateway.this[0]",
										"aws_internet_gateway.this",
									],
								},
							},
							"intra_network_acl_arn": {
								"description": "ARN of the intra network ACL",
								"expression": {
									"references": [
										"aws_network_acl.intra[0].arn",
										"aws_network_acl.intra[0]",
										"aws_network_acl.intra",
									],
								},
							},
							"intra_network_acl_id": {
								"description": "ID of the intra network ACL",
								"expression": {
									"references": [
										"aws_network_acl.intra[0].id",
										"aws_network_acl.intra[0]",
										"aws_network_acl.intra",
									],
								},
							},
							"intra_route_table_association_ids": {
								"description": "List of IDs of the intra route table association",
								"expression": {
									"references": [
										"aws_route_table_association.intra",
									],
								},
							},
							"intra_route_table_ids": {
								"description": "List of IDs of intra route tables",
								"expression": {
									"references": [
										"aws_route_table.intra",
									],
								},
							},
							"intra_subnet_arns": {
								"description": "List of ARNs of intra subnets",
								"expression": {
									"references": [
										"aws_subnet.intra",
									],
								},
							},
							"intra_subnet_objects": {
								"description": "A list of all intra subnets, containing the full objects.",
								"expression": {
									"references": [
										"aws_subnet.intra",
									],
								},
							},
							"intra_subnets": {
								"description": "List of IDs of intra subnets",
								"expression": {
									"references": [
										"aws_subnet.intra",
									],
								},
							},
							"intra_subnets_cidr_blocks": {
								"description": "List of cidr_blocks of intra subnets",
								"expression": {
									"references": [
										"aws_subnet.intra",
									],
								},
							},
							"intra_subnets_ipv6_cidr_blocks": {
								"description": "List of IPv6 cidr_blocks of intra subnets in an IPv6 enabled VPC",
								"expression": {
									"references": [
										"aws_subnet.intra",
									],
								},
							},
							"name": {
								"description": "The name of the VPC specified as argument to this module",
								"expression": {
									"references": [
										"var.name",
									],
								},
							},
							"nat_ids": {
								"description": "List of allocation ID of Elastic IPs created for AWS NAT Gateway",
								"expression": {
									"references": [
										"aws_eip.nat",
									],
								},
							},
							"nat_public_ips": {
								"description": "List of public Elastic IPs created for AWS NAT Gateway",
								"expression": {
									"references": [
										"var.reuse_nat_ips",
										"var.external_nat_ips",
										"aws_eip.nat",
									],
								},
							},
							"natgw_ids": {
								"description": "List of NAT Gateway IDs",
								"expression": {
									"references": [
										"aws_nat_gateway.this",
									],
								},
							},
							"natgw_interface_ids": {
								"description": "List of Network Interface IDs assigned to NAT Gateways",
								"expression": {
									"references": [
										"aws_nat_gateway.this",
									],
								},
							},
							"outpost_network_acl_arn": {
								"description": "ARN of the outpost network ACL",
								"expression": {
									"references": [
										"aws_network_acl.outpost[0].arn",
										"aws_network_acl.outpost[0]",
										"aws_network_acl.outpost",
									],
								},
							},
							"outpost_network_acl_id": {
								"description": "ID of the outpost network ACL",
								"expression": {
									"references": [
										"aws_network_acl.outpost[0].id",
										"aws_network_acl.outpost[0]",
										"aws_network_acl.outpost",
									],
								},
							},
							"outpost_subnet_arns": {
								"description": "List of ARNs of outpost subnets",
								"expression": {
									"references": [
										"aws_subnet.outpost",
									],
								},
							},
							"outpost_subnet_objects": {
								"description": "A list of all outpost subnets, containing the full objects.",
								"expression": {
									"references": [
										"aws_subnet.outpost",
									],
								},
							},
							"outpost_subnets": {
								"description": "List of IDs of outpost subnets",
								"expression": {
									"references": [
										"aws_subnet.outpost",
									],
								},
							},
							"outpost_subnets_cidr_blocks": {
								"description": "List of cidr_blocks of outpost subnets",
								"expression": {
									"references": [
										"aws_subnet.outpost",
									],
								},
							},
							"outpost_subnets_ipv6_cidr_blocks": {
								"description": "List of IPv6 cidr_blocks of outpost subnets in an IPv6 enabled VPC",
								"expression": {
									"references": [
										"aws_subnet.outpost",
									],
								},
							},
							"private_ipv6_egress_route_ids": {
								"description": "List of IDs of the ipv6 egress route",
								"expression": {
									"references": [
										"aws_route.private_ipv6_egress",
									],
								},
							},
							"private_nat_gateway_route_ids": {
								"description": "List of IDs of the private nat gateway route",
								"expression": {
									"references": [
										"aws_route.private_nat_gateway",
									],
								},
							},
							"private_network_acl_arn": {
								"description": "ARN of the private network ACL",
								"expression": {
									"references": [
										"aws_network_acl.private[0].arn",
										"aws_network_acl.private[0]",
										"aws_network_acl.private",
									],
								},
							},
							"private_network_acl_id": {
								"description": "ID of the private network ACL",
								"expression": {
									"references": [
										"aws_network_acl.private[0].id",
										"aws_network_acl.private[0]",
										"aws_network_acl.private",
									],
								},
							},
							"private_route_table_association_ids": {
								"description": "List of IDs of the private route table association",
								"expression": {
									"references": [
										"aws_route_table_association.private",
									],
								},
							},
							"private_route_table_ids": {
								"description": "List of IDs of private route tables",
								"expression": {
									"references": [
										"local.private_route_table_ids",
									],
								},
							},
							"private_subnet_arns": {
								"description": "List of ARNs of private subnets",
								"expression": {
									"references": [
										"aws_subnet.private",
									],
								},
							},
							"private_subnet_objects": {
								"description": "A list of all private subnets, containing the full objects.",
								"expression": {
									"references": [
										"aws_subnet.private",
									],
								},
							},
							"private_subnets": {
								"description": "List of IDs of private subnets",
								"expression": {
									"references": [
										"aws_subnet.private",
									],
								},
							},
							"private_subnets_cidr_blocks": {
								"description": "List of cidr_blocks of private subnets",
								"expression": {
									"references": [
										"aws_subnet.private",
									],
								},
							},
							"private_subnets_ipv6_cidr_blocks": {
								"description": "List of IPv6 cidr_blocks of private subnets in an IPv6 enabled VPC",
								"expression": {
									"references": [
										"aws_subnet.private",
									],
								},
							},
							"public_internet_gateway_ipv6_route_id": {
								"description": "ID of the IPv6 internet gateway route",
								"expression": {
									"references": [
										"aws_route.public_internet_gateway_ipv6[0].id",
										"aws_route.public_internet_gateway_ipv6[0]",
										"aws_route.public_internet_gateway_ipv6",
									],
								},
							},
							"public_internet_gateway_route_id": {
								"description": "ID of the internet gateway route",
								"expression": {
									"references": [
										"aws_route.public_internet_gateway[0].id",
										"aws_route.public_internet_gateway[0]",
										"aws_route.public_internet_gateway",
									],
								},
							},
							"public_network_acl_arn": {
								"description": "ARN of the public network ACL",
								"expression": {
									"references": [
										"aws_network_acl.public[0].arn",
										"aws_network_acl.public[0]",
										"aws_network_acl.public",
									],
								},
							},
							"public_network_acl_id": {
								"description": "ID of the public network ACL",
								"expression": {
									"references": [
										"aws_network_acl.public[0].id",
										"aws_network_acl.public[0]",
										"aws_network_acl.public",
									],
								},
							},
							"public_route_table_association_ids": {
								"description": "List of IDs of the public route table association",
								"expression": {
									"references": [
										"aws_route_table_association.public",
									],
								},
							},
							"public_route_table_ids": {
								"description": "List of IDs of public route tables",
								"expression": {
									"references": [
										"local.public_route_table_ids",
									],
								},
							},
							"public_subnet_arns": {
								"description": "List of ARNs of public subnets",
								"expression": {
									"references": [
										"aws_subnet.public",
									],
								},
							},
							"public_subnet_objects": {
								"description": "A list of all public subnets, containing the full objects.",
								"expression": {
									"references": [
										"aws_subnet.public",
									],
								},
							},
							"public_subnets": {
								"description": "List of IDs of public subnets",
								"expression": {
									"references": [
										"aws_subnet.public",
									],
								},
							},
							"public_subnets_cidr_blocks": {
								"description": "List of cidr_blocks of public subnets",
								"expression": {
									"references": [
										"aws_subnet.public",
									],
								},
							},
							"public_subnets_ipv6_cidr_blocks": {
								"description": "List of IPv6 cidr_blocks of public subnets in an IPv6 enabled VPC",
								"expression": {
									"references": [
										"aws_subnet.public",
									],
								},
							},
							"redshift_network_acl_arn": {
								"description": "ARN of the redshift network ACL",
								"expression": {
									"references": [
										"aws_network_acl.redshift[0].arn",
										"aws_network_acl.redshift[0]",
										"aws_network_acl.redshift",
									],
								},
							},
							"redshift_network_acl_id": {
								"description": "ID of the redshift network ACL",
								"expression": {
									"references": [
										"aws_network_acl.redshift[0].id",
										"aws_network_acl.redshift[0]",
										"aws_network_acl.redshift",
									],
								},
							},
							"redshift_public_route_table_association_ids": {
								"description": "List of IDs of the public redshift route table association",
								"expression": {
									"references": [
										"aws_route_table_association.redshift_public",
									],
								},
							},
							"redshift_route_table_association_ids": {
								"description": "List of IDs of the redshift route table association",
								"expression": {
									"references": [
										"aws_route_table_association.redshift",
									],
								},
							},
							"redshift_route_table_ids": {
								"description": "List of IDs of redshift route tables",
								"expression": {
									"references": [
										"local.redshift_route_table_ids",
										"local.redshift_route_table_ids",
										"var.enable_public_redshift",
										"local.public_route_table_ids",
										"local.private_route_table_ids",
									],
								},
							},
							"redshift_subnet_arns": {
								"description": "List of ARNs of redshift subnets",
								"expression": {
									"references": [
										"aws_subnet.redshift",
									],
								},
							},
							"redshift_subnet_group": {
								"description": "ID of redshift subnet group",
								"expression": {
									"references": [
										"aws_redshift_subnet_group.redshift[0].id",
										"aws_redshift_subnet_group.redshift[0]",
										"aws_redshift_subnet_group.redshift",
									],
								},
							},
							"redshift_subnet_objects": {
								"description": "A list of all redshift subnets, containing the full objects.",
								"expression": {
									"references": [
										"aws_subnet.redshift",
									],
								},
							},
							"redshift_subnets": {
								"description": "List of IDs of redshift subnets",
								"expression": {
									"references": [
										"aws_subnet.redshift",
									],
								},
							},
							"redshift_subnets_cidr_blocks": {
								"description": "List of cidr_blocks of redshift subnets",
								"expression": {
									"references": [
										"aws_subnet.redshift",
									],
								},
							},
							"redshift_subnets_ipv6_cidr_blocks": {
								"description": "List of IPv6 cidr_blocks of redshift subnets in an IPv6 enabled VPC",
								"expression": {
									"references": [
										"aws_subnet.redshift",
									],
								},
							},
							"this_customer_gateway": {
								"description": "Map of Customer Gateway attributes",
								"expression": {
									"references": [
										"aws_customer_gateway.this",
									],
								},
							},
							"vgw_arn": {
								"description": "The ARN of the VPN Gateway",
								"expression": {
									"references": [
										"aws_vpn_gateway.this[0].arn",
										"aws_vpn_gateway.this[0]",
										"aws_vpn_gateway.this",
									],
								},
							},
							"vgw_id": {
								"description": "The ID of the VPN Gateway",
								"expression": {
									"references": [
										"aws_vpn_gateway.this[0].id",
										"aws_vpn_gateway.this[0]",
										"aws_vpn_gateway.this",
										"aws_vpn_gateway_attachment.this[0].vpn_gateway_id",
										"aws_vpn_gateway_attachment.this[0]",
										"aws_vpn_gateway_attachment.this",
									],
								},
							},
							"vpc_arn": {
								"description": "The ARN of the VPC",
								"expression": {
									"references": [
										"aws_vpc.this[0].arn",
										"aws_vpc.this[0]",
										"aws_vpc.this",
									],
								},
							},
							"vpc_block_public_access_exclusions": {
								"description": "A map of VPC block public access exclusions",
								"expression": {
									"references": [
										"aws_vpc_block_public_access_exclusion.this",
									],
								},
							},
							"vpc_cidr_block": {
								"description": "The CIDR block of the VPC",
								"expression": {
									"references": [
										"aws_vpc.this[0].cidr_block",
										"aws_vpc.this[0]",
										"aws_vpc.this",
									],
								},
							},
							"vpc_enable_dns_hostnames": {
								"description": "Whether or not the VPC has DNS hostname support",
								"expression": {
									"references": [
										"aws_vpc.this[0].enable_dns_hostnames",
										"aws_vpc.this[0]",
										"aws_vpc.this",
									],
								},
							},
							"vpc_enable_dns_support": {
								"description": "Whether or not the VPC has DNS support",
								"expression": {
									"references": [
										"aws_vpc.this[0].enable_dns_support",
										"aws_vpc.this[0]",
										"aws_vpc.this",
									],
								},
							},
							"vpc_flow_log_cloudwatch_iam_role_arn": {
								"description": "The ARN of the IAM role used when pushing logs to Cloudwatch log group",
								"expression": {
									"references": [
										"local.flow_log_iam_role_arn",
									],
								},
							},
							"vpc_flow_log_deliver_cross_account_role": {
								"description": "The ARN of the IAM role used when pushing logs cross account",
								"expression": {
									"references": [
										"aws_flow_log.this[0].deliver_cross_account_role",
										"aws_flow_log.this[0]",
										"aws_flow_log.this",
									],
								},
							},
							"vpc_flow_log_destination_arn": {
								"description": "The ARN of the destination for VPC Flow Logs",
								"expression": {
									"references": [
										"local.flow_log_destination_arn",
									],
								},
							},
							"vpc_flow_log_destination_type": {
								"description": "The type of the destination for VPC Flow Logs",
								"expression": {
									"references": [
										"var.flow_log_destination_type",
									],
								},
							},
							"vpc_flow_log_id": {
								"description": "The ID of the Flow Log resource",
								"expression": {
									"references": [
										"aws_flow_log.this[0].id",
										"aws_flow_log.this[0]",
										"aws_flow_log.this",
									],
								},
							},
							"vpc_id": {
								"description": "The ID of the VPC",
								"expression": {
									"references": [
										"aws_vpc.this[0].id",
										"aws_vpc.this[0]",
										"aws_vpc.this",
									],
								},
							},
							"vpc_instance_tenancy": {
								"description": "Tenancy of instances spin up within VPC",
								"expression": {
									"references": [
										"aws_vpc.this[0].instance_tenancy",
										"aws_vpc.this[0]",
										"aws_vpc.this",
									],
								},
							},
							"vpc_ipv6_association_id": {
								"description": "The association ID for the IPv6 CIDR block",
								"expression": {
									"references": [
										"aws_vpc.this[0].ipv6_association_id",
										"aws_vpc.this[0]",
										"aws_vpc.this",
									],
								},
							},
							"vpc_ipv6_cidr_block": {
								"description": "The IPv6 CIDR block",
								"expression": {
									"references": [
										"aws_vpc.this[0].ipv6_cidr_block",
										"aws_vpc.this[0]",
										"aws_vpc.this",
									],
								},
							},
							"vpc_main_route_table_id": {
								"description": "The ID of the main route table associated with this VPC",
								"expression": {
									"references": [
										"aws_vpc.this[0].main_route_table_id",
										"aws_vpc.this[0]",
										"aws_vpc.this",
									],
								},
							},
							"vpc_owner_id": {
								"description": "The ID of the AWS account that owns the VPC",
								"expression": {
									"references": [
										"aws_vpc.this[0].owner_id",
										"aws_vpc.this[0]",
										"aws_vpc.this",
									],
								},
							},
							"vpc_secondary_cidr_blocks": {
								"description": "List of secondary CIDR blocks of the VPC",
								"expression": {
									"references": [
										"aws_vpc_ipv4_cidr_block_association.this",
									],
								},
							},
						},
						"resources": [
							{
								"address": "aws_cloudwatch_log_group.flow_log",
								"count_expression": {
									"references": [
										"local.create_flow_log_cloudwatch_log_group",
									],
								},
								"expressions": {
									"kms_key_id": {
										"references": [
											"var.flow_log_cloudwatch_log_group_kms_key_id",
										],
									},
									"log_group_class": {
										"references": [
											"var.flow_log_cloudwatch_log_group_class",
										],
									},
									"name": {
										"references": [
											"var.flow_log_cloudwatch_log_group_name_prefix",
											"local.flow_log_cloudwatch_log_group_name_suffix",
										],
									},
									"retention_in_days": {
										"references": [
											"var.flow_log_cloudwatch_log_group_retention_in_days",
										],
									},
									"skip_destroy": {
										"references": [
											"var.flow_log_cloudwatch_log_group_skip_destroy",
										],
									},
									"tags": {
										"references": [
											"var.tags",
											"var.vpc_flow_log_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "flow_log",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_cloudwatch_log_group",
							},
							{
								"address": "aws_customer_gateway.this",
								"expressions": {
									"bgp_asn": {
										"references": [
											"each.value[\"bgp_asn\"]",
											"each.value",
										],
									},
									"device_name": {
										"references": [
											"each.value",
										],
									},
									"ip_address": {
										"references": [
											"each.value[\"ip_address\"]",
											"each.value",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"each.key",
											"var.tags",
											"var.customer_gateway_tags",
										],
									},
									"type": {
										"constant_value": "ipsec.1",
									},
								},
								"for_each_expression": {
									"references": [
										"var.customer_gateways",
									],
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_customer_gateway",
							},
							{
								"address": "aws_db_subnet_group.database",
								"count_expression": {
									"references": [
										"local.create_database_subnets",
										"var.create_database_subnet_group",
									],
								},
								"expressions": {
									"description": {
										"references": [
											"var.name",
										],
									},
									"name": {
										"references": [
											"var.database_subnet_group_name",
											"var.name",
										],
									},
									"subnet_ids": {
										"references": [
											"aws_subnet.database",
										],
									},
									"tags": {
										"references": [
											"var.database_subnet_group_name",
											"var.name",
											"var.tags",
											"var.database_subnet_group_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "database",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_db_subnet_group",
							},
							{
								"address": "aws_default_network_acl.this",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.manage_default_network_acl",
									],
								},
								"expressions": {
									"default_network_acl_id": {
										"references": [
											"aws_vpc.this[0].default_network_acl_id",
											"aws_vpc.this[0]",
											"aws_vpc.this",
										],
									},
									"subnet_ids": {},
									"tags": {
										"references": [
											"var.default_network_acl_name",
											"var.name",
											"var.tags",
											"var.default_network_acl_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_default_network_acl",
							},
							{
								"address": "aws_default_route_table.default",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.manage_default_route_table",
									],
								},
								"expressions": {
									"default_route_table_id": {
										"references": [
											"aws_vpc.this[0].default_route_table_id",
											"aws_vpc.this[0]",
											"aws_vpc.this",
										],
									},
									"propagating_vgws": {
										"references": [
											"var.default_route_table_propagating_vgws",
										],
									},
									"tags": {
										"references": [
											"var.default_route_table_name",
											"var.name",
											"var.tags",
											"var.default_route_table_tags",
										],
									},
									"timeouts": {},
								},
								"mode":                "managed",
								"name":                "default",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_default_route_table",
							},
							{
								"address": "aws_default_security_group.this",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.manage_default_security_group",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.default_security_group_name",
											"var.name",
											"var.tags",
											"var.default_security_group_tags",
										],
									},
									"vpc_id": {
										"references": [
											"aws_vpc.this[0].id",
											"aws_vpc.this[0]",
											"aws_vpc.this",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      1,
								"type":                "aws_default_security_group",
							},
							{
								"address": "aws_default_vpc.this",
								"count_expression": {
									"references": [
										"var.manage_default_vpc",
									],
								},
								"expressions": {
									"enable_dns_hostnames": {
										"references": [
											"var.default_vpc_enable_dns_hostnames",
										],
									},
									"enable_dns_support": {
										"references": [
											"var.default_vpc_enable_dns_support",
										],
									},
									"tags": {
										"references": [
											"var.default_vpc_name",
											"var.tags",
											"var.default_vpc_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      1,
								"type":                "aws_default_vpc",
							},
							{
								"address": "aws_egress_only_internet_gateway.this",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.create_egress_only_igw",
										"var.enable_ipv6",
										"local.max_subnet_length",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.name",
											"var.tags",
											"var.igw_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_egress_only_internet_gateway",
							},
							{
								"address": "aws_eip.nat",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.enable_nat_gateway",
										"var.reuse_nat_ips",
										"local.nat_gateway_count",
									],
								},
								"depends_on": [
									"aws_internet_gateway.this",
								],
								"expressions": {
									"domain": {
										"constant_value": "vpc",
									},
									"tags": {
										"references": [
											"var.name",
											"var.azs",
											"var.single_nat_gateway",
											"count.index",
											"var.tags",
											"var.nat_eip_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "nat",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_eip",
							},
							{
								"address": "aws_elasticache_subnet_group.elasticache",
								"count_expression": {
									"references": [
										"local.create_elasticache_subnets",
										"var.create_elasticache_subnet_group",
									],
								},
								"expressions": {
									"description": {
										"references": [
											"var.name",
										],
									},
									"name": {
										"references": [
											"var.elasticache_subnet_group_name",
											"var.name",
										],
									},
									"subnet_ids": {
										"references": [
											"aws_subnet.elasticache",
										],
									},
									"tags": {
										"references": [
											"var.elasticache_subnet_group_name",
											"var.name",
											"var.tags",
											"var.elasticache_subnet_group_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "elasticache",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_elasticache_subnet_group",
							},
							{
								"address": "aws_flow_log.this",
								"count_expression": {
									"references": [
										"local.enable_flow_log",
									],
								},
								"expressions": {
									"deliver_cross_account_role": {
										"references": [
											"var.flow_log_deliver_cross_account_role",
										],
									},
									"iam_role_arn": {
										"references": [
											"local.flow_log_iam_role_arn",
										],
									},
									"log_destination": {
										"references": [
											"local.flow_log_destination_arn",
										],
									},
									"log_destination_type": {
										"references": [
											"var.flow_log_destination_type",
										],
									},
									"log_format": {
										"references": [
											"var.flow_log_log_format",
										],
									},
									"max_aggregation_interval": {
										"references": [
											"var.flow_log_max_aggregation_interval",
										],
									},
									"tags": {
										"references": [
											"var.tags",
											"var.vpc_flow_log_tags",
										],
									},
									"traffic_type": {
										"references": [
											"var.flow_log_traffic_type",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_flow_log",
							},
							{
								"address": "aws_iam_policy.vpc_flow_log_cloudwatch",
								"count_expression": {
									"references": [
										"local.create_flow_log_cloudwatch_iam_role",
									],
								},
								"expressions": {
									"name": {
										"references": [
											"var.vpc_flow_log_iam_policy_use_name_prefix",
											"var.vpc_flow_log_iam_policy_name",
										],
									},
									"name_prefix": {
										"references": [
											"var.vpc_flow_log_iam_policy_use_name_prefix",
											"var.vpc_flow_log_iam_policy_name",
										],
									},
									"policy": {
										"references": [
											"data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0].json",
											"data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0]",
											"data.aws_iam_policy_document.vpc_flow_log_cloudwatch",
										],
									},
									"tags": {
										"references": [
											"var.tags",
											"var.vpc_flow_log_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "vpc_flow_log_cloudwatch",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_iam_policy",
							},
							{
								"address": "aws_iam_role.vpc_flow_log_cloudwatch",
								"count_expression": {
									"references": [
										"local.create_flow_log_cloudwatch_iam_role",
									],
								},
								"expressions": {
									"assume_role_policy": {
										"references": [
											"data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0].json",
											"data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0]",
											"data.aws_iam_policy_document.flow_log_cloudwatch_assume_role",
										],
									},
									"name": {
										"references": [
											"var.vpc_flow_log_iam_role_use_name_prefix",
											"var.vpc_flow_log_iam_role_name",
										],
									},
									"name_prefix": {
										"references": [
											"var.vpc_flow_log_iam_role_use_name_prefix",
											"var.vpc_flow_log_iam_role_name",
										],
									},
									"permissions_boundary": {
										"references": [
											"var.vpc_flow_log_permissions_boundary",
										],
									},
									"tags": {
										"references": [
											"var.tags",
											"var.vpc_flow_log_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "vpc_flow_log_cloudwatch",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_iam_role",
							},
							{
								"address": "aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch",
								"count_expression": {
									"references": [
										"local.create_flow_log_cloudwatch_iam_role",
									],
								},
								"expressions": {
									"policy_arn": {
										"references": [
											"aws_iam_policy.vpc_flow_log_cloudwatch[0].arn",
											"aws_iam_policy.vpc_flow_log_cloudwatch[0]",
											"aws_iam_policy.vpc_flow_log_cloudwatch",
										],
									},
									"role": {
										"references": [
											"aws_iam_role.vpc_flow_log_cloudwatch[0].name",
											"aws_iam_role.vpc_flow_log_cloudwatch[0]",
											"aws_iam_role.vpc_flow_log_cloudwatch",
										],
									},
								},
								"mode":                "managed",
								"name":                "vpc_flow_log_cloudwatch",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_iam_role_policy_attachment",
							},
							{
								"address": "aws_internet_gateway.this",
								"count_expression": {
									"references": [
										"local.create_public_subnets",
										"var.create_igw",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.name",
											"var.tags",
											"var.igw_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_internet_gateway",
							},
							{
								"address": "aws_nat_gateway.this",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.enable_nat_gateway",
										"local.nat_gateway_count",
									],
								},
								"depends_on": [
									"aws_internet_gateway.this",
								],
								"expressions": {
									"allocation_id": {
										"references": [
											"local.nat_gateway_ips",
											"var.single_nat_gateway",
											"count.index",
										],
									},
									"subnet_id": {
										"references": [
											"aws_subnet.public",
											"var.single_nat_gateway",
											"count.index",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"var.azs",
											"var.single_nat_gateway",
											"count.index",
											"var.tags",
											"var.nat_gateway_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_nat_gateway",
							},
							{
								"address": "aws_network_acl.database",
								"count_expression": {
									"references": [
										"local.create_database_network_acl",
									],
								},
								"expressions": {
									"subnet_ids": {
										"references": [
											"aws_subnet.database",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"var.database_subnet_suffix",
											"var.tags",
											"var.database_acl_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "database",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl",
							},
							{
								"address": "aws_network_acl.elasticache",
								"count_expression": {
									"references": [
										"local.create_elasticache_network_acl",
									],
								},
								"expressions": {
									"subnet_ids": {
										"references": [
											"aws_subnet.elasticache",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"var.elasticache_subnet_suffix",
											"var.tags",
											"var.elasticache_acl_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "elasticache",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl",
							},
							{
								"address": "aws_network_acl.intra",
								"count_expression": {
									"references": [
										"local.create_intra_network_acl",
									],
								},
								"expressions": {
									"subnet_ids": {
										"references": [
											"aws_subnet.intra",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"var.intra_subnet_suffix",
											"var.tags",
											"var.intra_acl_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "intra",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl",
							},
							{
								"address": "aws_network_acl.outpost",
								"count_expression": {
									"references": [
										"local.create_outpost_network_acl",
									],
								},
								"expressions": {
									"subnet_ids": {
										"references": [
											"aws_subnet.outpost",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"var.outpost_subnet_suffix",
											"var.tags",
											"var.outpost_acl_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "outpost",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl",
							},
							{
								"address": "aws_network_acl.private",
								"count_expression": {
									"references": [
										"local.create_private_network_acl",
									],
								},
								"expressions": {
									"subnet_ids": {
										"references": [
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"var.private_subnet_suffix",
											"var.tags",
											"var.private_acl_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "private",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl",
							},
							{
								"address": "aws_network_acl.public",
								"count_expression": {
									"references": [
										"local.create_public_subnets",
										"var.public_dedicated_network_acl",
									],
								},
								"expressions": {
									"subnet_ids": {
										"references": [
											"aws_subnet.public",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"var.public_subnet_suffix",
											"var.tags",
											"var.public_acl_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "public",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl",
							},
							{
								"address": "aws_network_acl.redshift",
								"count_expression": {
									"references": [
										"local.create_redshift_network_acl",
									],
								},
								"expressions": {
									"subnet_ids": {
										"references": [
											"aws_subnet.redshift",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"var.redshift_subnet_suffix",
											"var.tags",
											"var.redshift_acl_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "redshift",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl",
							},
							{
								"address": "aws_network_acl_rule.database_inbound",
								"count_expression": {
									"references": [
										"local.create_database_network_acl",
										"var.database_inbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": false,
									},
									"from_port": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.database[0].id",
											"aws_network_acl.database[0]",
											"aws_network_acl.database",
										],
									},
									"protocol": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "database_inbound",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.database_outbound",
								"count_expression": {
									"references": [
										"local.create_database_network_acl",
										"var.database_outbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": true,
									},
									"from_port": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.database[0].id",
											"aws_network_acl.database[0]",
											"aws_network_acl.database",
										],
									},
									"protocol": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "database_outbound",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.elasticache_inbound",
								"count_expression": {
									"references": [
										"local.create_elasticache_network_acl",
										"var.elasticache_inbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": false,
									},
									"from_port": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.elasticache[0].id",
											"aws_network_acl.elasticache[0]",
											"aws_network_acl.elasticache",
										],
									},
									"protocol": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "elasticache_inbound",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.elasticache_outbound",
								"count_expression": {
									"references": [
										"local.create_elasticache_network_acl",
										"var.elasticache_outbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": true,
									},
									"from_port": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.elasticache[0].id",
											"aws_network_acl.elasticache[0]",
											"aws_network_acl.elasticache",
										],
									},
									"protocol": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "elasticache_outbound",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.intra_inbound",
								"count_expression": {
									"references": [
										"local.create_intra_network_acl",
										"var.intra_inbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": false,
									},
									"from_port": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.intra[0].id",
											"aws_network_acl.intra[0]",
											"aws_network_acl.intra",
										],
									},
									"protocol": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "intra_inbound",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.intra_outbound",
								"count_expression": {
									"references": [
										"local.create_intra_network_acl",
										"var.intra_outbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": true,
									},
									"from_port": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.intra[0].id",
											"aws_network_acl.intra[0]",
											"aws_network_acl.intra",
										],
									},
									"protocol": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "intra_outbound",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.outpost_inbound",
								"count_expression": {
									"references": [
										"local.create_outpost_network_acl",
										"var.outpost_inbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.outpost_inbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": false,
									},
									"from_port": {
										"references": [
											"var.outpost_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.outpost_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.outpost_inbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.outpost_inbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.outpost[0].id",
											"aws_network_acl.outpost[0]",
											"aws_network_acl.outpost",
										],
									},
									"protocol": {
										"references": [
											"var.outpost_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.outpost_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.outpost_inbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.outpost_inbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "outpost_inbound",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.outpost_outbound",
								"count_expression": {
									"references": [
										"local.create_outpost_network_acl",
										"var.outpost_outbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.outpost_outbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": true,
									},
									"from_port": {
										"references": [
											"var.outpost_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.outpost_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.outpost_outbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.outpost_outbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.outpost[0].id",
											"aws_network_acl.outpost[0]",
											"aws_network_acl.outpost",
										],
									},
									"protocol": {
										"references": [
											"var.outpost_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.outpost_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.outpost_outbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.outpost_outbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "outpost_outbound",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.private_inbound",
								"count_expression": {
									"references": [
										"local.create_private_network_acl",
										"var.private_inbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": false,
									},
									"from_port": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.private[0].id",
											"aws_network_acl.private[0]",
											"aws_network_acl.private",
										],
									},
									"protocol": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "private_inbound",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.private_outbound",
								"count_expression": {
									"references": [
										"local.create_private_network_acl",
										"var.private_outbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": true,
									},
									"from_port": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.private[0].id",
											"aws_network_acl.private[0]",
											"aws_network_acl.private",
										],
									},
									"protocol": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "private_outbound",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.public_inbound",
								"count_expression": {
									"references": [
										"local.create_public_subnets",
										"var.public_dedicated_network_acl",
										"var.public_inbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": false,
									},
									"from_port": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.public[0].id",
											"aws_network_acl.public[0]",
											"aws_network_acl.public",
										],
									},
									"protocol": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "public_inbound",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.public_outbound",
								"count_expression": {
									"references": [
										"local.create_public_subnets",
										"var.public_dedicated_network_acl",
										"var.public_outbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": true,
									},
									"from_port": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.public[0].id",
											"aws_network_acl.public[0]",
											"aws_network_acl.public",
										],
									},
									"protocol": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "public_outbound",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.redshift_inbound",
								"count_expression": {
									"references": [
										"local.create_redshift_network_acl",
										"var.redshift_inbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": false,
									},
									"from_port": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.redshift[0].id",
											"aws_network_acl.redshift[0]",
											"aws_network_acl.redshift",
										],
									},
									"protocol": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "redshift_inbound",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.redshift_outbound",
								"count_expression": {
									"references": [
										"local.create_redshift_network_acl",
										"var.redshift_outbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": true,
									},
									"from_port": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.redshift[0].id",
											"aws_network_acl.redshift[0]",
											"aws_network_acl.redshift",
										],
									},
									"protocol": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "redshift_outbound",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_redshift_subnet_group.redshift",
								"count_expression": {
									"references": [
										"local.create_redshift_subnets",
										"var.create_redshift_subnet_group",
									],
								},
								"expressions": {
									"description": {
										"references": [
											"var.name",
										],
									},
									"name": {
										"references": [
											"var.redshift_subnet_group_name",
											"var.name",
										],
									},
									"subnet_ids": {
										"references": [
											"aws_subnet.redshift",
										],
									},
									"tags": {
										"references": [
											"var.redshift_subnet_group_name",
											"var.name",
											"var.tags",
											"var.redshift_subnet_group_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "redshift",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_redshift_subnet_group",
							},
							{
								"address": "aws_route.database_dns64_nat_gateway",
								"count_expression": {
									"references": [
										"local.create_database_route_table",
										"var.create_database_internet_gateway_route",
										"var.create_database_nat_gateway_route",
										"var.enable_nat_gateway",
										"var.enable_ipv6",
										"var.private_subnet_enable_dns64",
										"var.single_nat_gateway",
										"local.len_database_subnets",
									],
								},
								"expressions": {
									"destination_ipv6_cidr_block": {
										"constant_value": "64:ff9b::/96",
									},
									"nat_gateway_id": {
										"references": [
											"aws_nat_gateway.this",
											"count.index",
										],
									},
									"route_table_id": {
										"references": [
											"aws_route_table.database",
											"count.index",
										],
									},
									"timeouts": {},
								},
								"mode":                "managed",
								"name":                "database_dns64_nat_gateway",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route",
							},
							{
								"address": "aws_route.database_internet_gateway",
								"count_expression": {
									"references": [
										"local.create_database_route_table",
										"var.create_igw",
										"var.create_database_internet_gateway_route",
										"var.create_database_nat_gateway_route",
									],
								},
								"expressions": {
									"destination_cidr_block": {
										"constant_value": "0.0.0.0/0",
									},
									"gateway_id": {
										"references": [
											"aws_internet_gateway.this[0].id",
											"aws_internet_gateway.this[0]",
											"aws_internet_gateway.this",
										],
									},
									"route_table_id": {
										"references": [
											"aws_route_table.database[0].id",
											"aws_route_table.database[0]",
											"aws_route_table.database",
										],
									},
									"timeouts": {},
								},
								"mode":                "managed",
								"name":                "database_internet_gateway",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route",
							},
							{
								"address": "aws_route.database_ipv6_egress",
								"count_expression": {
									"references": [
										"local.create_database_route_table",
										"var.create_egress_only_igw",
										"var.enable_ipv6",
										"var.create_database_internet_gateway_route",
									],
								},
								"expressions": {
									"destination_ipv6_cidr_block": {
										"constant_value": "::/0",
									},
									"egress_only_gateway_id": {
										"references": [
											"aws_egress_only_internet_gateway.this[0].id",
											"aws_egress_only_internet_gateway.this[0]",
											"aws_egress_only_internet_gateway.this",
										],
									},
									"route_table_id": {
										"references": [
											"aws_route_table.database[0].id",
											"aws_route_table.database[0]",
											"aws_route_table.database",
										],
									},
									"timeouts": {},
								},
								"mode":                "managed",
								"name":                "database_ipv6_egress",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route",
							},
							{
								"address": "aws_route.database_nat_gateway",
								"count_expression": {
									"references": [
										"local.create_database_route_table",
										"var.create_database_internet_gateway_route",
										"var.create_database_nat_gateway_route",
										"var.enable_nat_gateway",
										"var.single_nat_gateway",
										"local.len_database_subnets",
									],
								},
								"expressions": {
									"destination_cidr_block": {
										"constant_value": "0.0.0.0/0",
									},
									"nat_gateway_id": {
										"references": [
											"aws_nat_gateway.this",
											"count.index",
										],
									},
									"route_table_id": {
										"references": [
											"aws_route_table.database",
											"count.index",
										],
									},
									"timeouts": {},
								},
								"mode":                "managed",
								"name":                "database_nat_gateway",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route",
							},
							{
								"address": "aws_route.private_dns64_nat_gateway",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.enable_nat_gateway",
										"var.enable_ipv6",
										"var.private_subnet_enable_dns64",
										"local.nat_gateway_count",
									],
								},
								"expressions": {
									"destination_ipv6_cidr_block": {
										"constant_value": "64:ff9b::/96",
									},
									"nat_gateway_id": {
										"references": [
											"aws_nat_gateway.this",
											"count.index",
										],
									},
									"route_table_id": {
										"references": [
											"aws_route_table.private",
											"count.index",
										],
									},
									"timeouts": {},
								},
								"mode":                "managed",
								"name":                "private_dns64_nat_gateway",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route",
							},
							{
								"address": "aws_route.private_ipv6_egress",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.create_egress_only_igw",
										"var.enable_ipv6",
										"local.len_private_subnets",
										"local.nat_gateway_count",
									],
								},
								"expressions": {
									"destination_ipv6_cidr_block": {
										"constant_value": "::/0",
									},
									"egress_only_gateway_id": {
										"references": [
											"aws_egress_only_internet_gateway.this",
										],
									},
									"route_table_id": {
										"references": [
											"aws_route_table.private",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "private_ipv6_egress",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route",
							},
							{
								"address": "aws_route.private_nat_gateway",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.enable_nat_gateway",
										"var.create_private_nat_gateway_route",
										"local.nat_gateway_count",
									],
								},
								"expressions": {
									"destination_cidr_block": {
										"references": [
											"var.nat_gateway_destination_cidr_block",
										],
									},
									"nat_gateway_id": {
										"references": [
											"aws_nat_gateway.this",
											"count.index",
										],
									},
									"route_table_id": {
										"references": [
											"aws_route_table.private",
											"count.index",
										],
									},
									"timeouts": {},
								},
								"mode":                "managed",
								"name":                "private_nat_gateway",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route",
							},
							{
								"address": "aws_route.public_internet_gateway",
								"count_expression": {
									"references": [
										"local.create_public_subnets",
										"var.create_igw",
										"local.num_public_route_tables",
									],
								},
								"expressions": {
									"destination_cidr_block": {
										"constant_value": "0.0.0.0/0",
									},
									"gateway_id": {
										"references": [
											"aws_internet_gateway.this[0].id",
											"aws_internet_gateway.this[0]",
											"aws_internet_gateway.this",
										],
									},
									"route_table_id": {
										"references": [
											"aws_route_table.public",
											"count.index",
										],
									},
									"timeouts": {},
								},
								"mode":                "managed",
								"name":                "public_internet_gateway",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route",
							},
							{
								"address": "aws_route.public_internet_gateway_ipv6",
								"count_expression": {
									"references": [
										"local.create_public_subnets",
										"var.create_igw",
										"var.enable_ipv6",
										"local.num_public_route_tables",
									],
								},
								"expressions": {
									"destination_ipv6_cidr_block": {
										"constant_value": "::/0",
									},
									"gateway_id": {
										"references": [
											"aws_internet_gateway.this[0].id",
											"aws_internet_gateway.this[0]",
											"aws_internet_gateway.this",
										],
									},
									"route_table_id": {
										"references": [
											"aws_route_table.public",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "public_internet_gateway_ipv6",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route",
							},
							{
								"address": "aws_route_table.database",
								"count_expression": {
									"references": [
										"local.create_database_route_table",
										"var.single_nat_gateway",
										"var.create_database_internet_gateway_route",
										"local.len_database_subnets",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.single_nat_gateway",
											"var.create_database_internet_gateway_route",
											"var.name",
											"var.database_subnet_suffix",
											"var.name",
											"var.database_subnet_suffix",
											"var.azs",
											"count.index",
											"var.tags",
											"var.database_route_table_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "database",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route_table",
							},
							{
								"address": "aws_route_table.elasticache",
								"count_expression": {
									"references": [
										"local.create_elasticache_route_table",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.name",
											"var.elasticache_subnet_suffix",
											"var.tags",
											"var.elasticache_route_table_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "elasticache",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route_table",
							},
							{
								"address": "aws_route_table.intra",
								"count_expression": {
									"references": [
										"local.create_intra_subnets",
										"local.num_intra_route_tables",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.create_multiple_intra_route_tables",
											"var.name",
											"var.intra_subnet_suffix",
											"var.azs",
											"count.index",
											"var.name",
											"var.intra_subnet_suffix",
											"var.tags",
											"var.intra_route_table_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "intra",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route_table",
							},
							{
								"address": "aws_route_table.private",
								"count_expression": {
									"references": [
										"local.create_private_subnets",
										"local.max_subnet_length",
										"local.nat_gateway_count",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.single_nat_gateway",
											"var.name",
											"var.private_subnet_suffix",
											"var.name",
											"var.private_subnet_suffix",
											"var.azs",
											"count.index",
											"var.tags",
											"var.private_route_table_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "private",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route_table",
							},
							{
								"address": "aws_route_table.public",
								"count_expression": {
									"references": [
										"local.create_public_subnets",
										"local.num_public_route_tables",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.create_multiple_public_route_tables",
											"var.name",
											"var.public_subnet_suffix",
											"var.azs",
											"count.index",
											"var.name",
											"var.public_subnet_suffix",
											"var.tags",
											"var.public_route_table_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "public",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route_table",
							},
							{
								"address": "aws_route_table.redshift",
								"count_expression": {
									"references": [
										"local.create_redshift_route_table",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.name",
											"var.redshift_subnet_suffix",
											"var.tags",
											"var.redshift_route_table_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "redshift",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route_table",
							},
							{
								"address": "aws_route_table_association.database",
								"count_expression": {
									"references": [
										"local.create_database_subnets",
										"local.len_database_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.database",
											"aws_route_table.private",
											"var.create_database_subnet_route_table",
											"var.single_nat_gateway",
											"var.create_database_internet_gateway_route",
											"count.index",
											"count.index",
										],
									},
									"subnet_id": {
										"references": [
											"aws_subnet.database",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "database",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route_table_association",
							},
							{
								"address": "aws_route_table_association.elasticache",
								"count_expression": {
									"references": [
										"local.create_elasticache_subnets",
										"local.len_elasticache_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.elasticache",
											"aws_route_table.private",
											"var.single_nat_gateway",
											"var.create_elasticache_subnet_route_table",
											"count.index",
										],
									},
									"subnet_id": {
										"references": [
											"aws_subnet.elasticache",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "elasticache",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route_table_association",
							},
							{
								"address": "aws_route_table_association.intra",
								"count_expression": {
									"references": [
										"local.create_intra_subnets",
										"local.len_intra_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.intra",
											"var.create_multiple_intra_route_tables",
											"count.index",
										],
									},
									"subnet_id": {
										"references": [
											"aws_subnet.intra",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "intra",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route_table_association",
							},
							{
								"address": "aws_route_table_association.outpost",
								"count_expression": {
									"references": [
										"local.create_outpost_subnets",
										"local.len_outpost_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.private",
											"var.single_nat_gateway",
											"count.index",
										],
									},
									"subnet_id": {
										"references": [
											"aws_subnet.outpost",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "outpost",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route_table_association",
							},
							{
								"address": "aws_route_table_association.private",
								"count_expression": {
									"references": [
										"local.create_private_subnets",
										"local.len_private_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.private",
											"var.single_nat_gateway",
											"count.index",
										],
									},
									"subnet_id": {
										"references": [
											"aws_subnet.private",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "private",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route_table_association",
							},
							{
								"address": "aws_route_table_association.public",
								"count_expression": {
									"references": [
										"local.create_public_subnets",
										"local.len_public_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.public",
											"var.create_multiple_public_route_tables",
											"count.index",
										],
									},
									"subnet_id": {
										"references": [
											"aws_subnet.public",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "public",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route_table_association",
							},
							{
								"address": "aws_route_table_association.redshift",
								"count_expression": {
									"references": [
										"local.create_redshift_subnets",
										"var.enable_public_redshift",
										"local.len_redshift_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.redshift",
											"aws_route_table.private",
											"var.single_nat_gateway",
											"var.create_redshift_subnet_route_table",
											"count.index",
										],
									},
									"subnet_id": {
										"references": [
											"aws_subnet.redshift",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "redshift",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route_table_association",
							},
							{
								"address": "aws_route_table_association.redshift_public",
								"count_expression": {
									"references": [
										"local.create_redshift_subnets",
										"var.enable_public_redshift",
										"local.len_redshift_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.redshift",
											"aws_route_table.public",
											"var.single_nat_gateway",
											"var.create_redshift_subnet_route_table",
											"count.index",
										],
									},
									"subnet_id": {
										"references": [
											"aws_subnet.redshift",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "redshift_public",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route_table_association",
							},
							{
								"address": "aws_subnet.database",
								"count_expression": {
									"references": [
										"local.create_database_subnets",
										"local.len_database_subnets",
									],
								},
								"expressions": {
									"assign_ipv6_address_on_creation": {
										"references": [
											"var.enable_ipv6",
											"var.database_subnet_ipv6_native",
											"var.database_subnet_assign_ipv6_address_on_creation",
										],
									},
									"availability_zone": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"availability_zone_id": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"cidr_block": {
										"references": [
											"var.database_subnet_ipv6_native",
											"var.database_subnets",
											"count.index",
										],
									},
									"enable_dns64": {
										"references": [
											"var.enable_ipv6",
											"var.database_subnet_enable_dns64",
										],
									},
									"enable_resource_name_dns_a_record_on_launch": {
										"references": [
											"var.database_subnet_ipv6_native",
											"var.database_subnet_enable_resource_name_dns_a_record_on_launch",
										],
									},
									"enable_resource_name_dns_aaaa_record_on_launch": {
										"references": [
											"var.enable_ipv6",
											"var.database_subnet_enable_resource_name_dns_aaaa_record_on_launch",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.enable_ipv6",
											"var.database_subnet_ipv6_prefixes",
											"aws_vpc.this[0].ipv6_cidr_block",
											"aws_vpc.this[0]",
											"aws_vpc.this",
											"var.database_subnet_ipv6_prefixes",
											"count.index",
										],
									},
									"ipv6_native": {
										"references": [
											"var.enable_ipv6",
											"var.database_subnet_ipv6_native",
										],
									},
									"private_dns_hostname_type_on_launch": {
										"references": [
											"var.database_subnet_private_dns_hostname_type_on_launch",
										],
									},
									"tags": {
										"references": [
											"var.database_subnet_names",
											"count.index",
											"var.name",
											"var.database_subnet_suffix",
											"var.azs",
											"count.index",
											"var.tags",
											"var.database_subnet_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "database",
								"provider_config_key": "aws",
								"schema_version":      1,
								"type":                "aws_subnet",
							},
							{
								"address": "aws_subnet.elasticache",
								"count_expression": {
									"references": [
										"local.create_elasticache_subnets",
										"local.len_elasticache_subnets",
									],
								},
								"expressions": {
									"assign_ipv6_address_on_creation": {
										"references": [
											"var.enable_ipv6",
											"var.elasticache_subnet_ipv6_native",
											"var.elasticache_subnet_assign_ipv6_address_on_creation",
										],
									},
									"availability_zone": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"availability_zone_id": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"cidr_block": {
										"references": [
											"var.elasticache_subnet_ipv6_native",
											"var.elasticache_subnets",
											"count.index",
										],
									},
									"enable_dns64": {
										"references": [
											"var.enable_ipv6",
											"var.elasticache_subnet_enable_dns64",
										],
									},
									"enable_resource_name_dns_a_record_on_launch": {
										"references": [
											"var.elasticache_subnet_ipv6_native",
											"var.elasticache_subnet_enable_resource_name_dns_a_record_on_launch",
										],
									},
									"enable_resource_name_dns_aaaa_record_on_launch": {
										"references": [
											"var.enable_ipv6",
											"var.elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.enable_ipv6",
											"var.elasticache_subnet_ipv6_prefixes",
											"aws_vpc.this[0].ipv6_cidr_block",
											"aws_vpc.this[0]",
											"aws_vpc.this",
											"var.elasticache_subnet_ipv6_prefixes",
											"count.index",
										],
									},
									"ipv6_native": {
										"references": [
											"var.enable_ipv6",
											"var.elasticache_subnet_ipv6_native",
										],
									},
									"private_dns_hostname_type_on_launch": {
										"references": [
											"var.elasticache_subnet_private_dns_hostname_type_on_launch",
										],
									},
									"tags": {
										"references": [
											"var.elasticache_subnet_names",
											"count.index",
											"var.name",
											"var.elasticache_subnet_suffix",
											"var.azs",
											"count.index",
											"var.tags",
											"var.elasticache_subnet_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "elasticache",
								"provider_config_key": "aws",
								"schema_version":      1,
								"type":                "aws_subnet",
							},
							{
								"address": "aws_subnet.intra",
								"count_expression": {
									"references": [
										"local.create_intra_subnets",
										"local.len_intra_subnets",
									],
								},
								"expressions": {
									"assign_ipv6_address_on_creation": {
										"references": [
											"var.enable_ipv6",
											"var.intra_subnet_ipv6_native",
											"var.intra_subnet_assign_ipv6_address_on_creation",
										],
									},
									"availability_zone": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"availability_zone_id": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"cidr_block": {
										"references": [
											"var.intra_subnet_ipv6_native",
											"var.intra_subnets",
											"count.index",
										],
									},
									"enable_dns64": {
										"references": [
											"var.enable_ipv6",
											"var.intra_subnet_enable_dns64",
										],
									},
									"enable_resource_name_dns_a_record_on_launch": {
										"references": [
											"var.intra_subnet_ipv6_native",
											"var.intra_subnet_enable_resource_name_dns_a_record_on_launch",
										],
									},
									"enable_resource_name_dns_aaaa_record_on_launch": {
										"references": [
											"var.enable_ipv6",
											"var.intra_subnet_enable_resource_name_dns_aaaa_record_on_launch",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.enable_ipv6",
											"var.intra_subnet_ipv6_prefixes",
											"aws_vpc.this[0].ipv6_cidr_block",
											"aws_vpc.this[0]",
											"aws_vpc.this",
											"var.intra_subnet_ipv6_prefixes",
											"count.index",
										],
									},
									"ipv6_native": {
										"references": [
											"var.enable_ipv6",
											"var.intra_subnet_ipv6_native",
										],
									},
									"private_dns_hostname_type_on_launch": {
										"references": [
											"var.intra_subnet_private_dns_hostname_type_on_launch",
										],
									},
									"tags": {
										"references": [
											"var.intra_subnet_names",
											"count.index",
											"var.name",
											"var.intra_subnet_suffix",
											"var.azs",
											"count.index",
											"var.tags",
											"var.intra_subnet_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "intra",
								"provider_config_key": "aws",
								"schema_version":      1,
								"type":                "aws_subnet",
							},
							{
								"address": "aws_subnet.outpost",
								"count_expression": {
									"references": [
										"local.create_outpost_subnets",
										"local.len_outpost_subnets",
									],
								},
								"expressions": {
									"assign_ipv6_address_on_creation": {
										"references": [
											"var.enable_ipv6",
											"var.outpost_subnet_ipv6_native",
											"var.outpost_subnet_assign_ipv6_address_on_creation",
										],
									},
									"availability_zone": {
										"references": [
											"var.outpost_az",
										],
									},
									"cidr_block": {
										"references": [
											"var.outpost_subnet_ipv6_native",
											"var.outpost_subnets",
											"count.index",
										],
									},
									"customer_owned_ipv4_pool": {
										"references": [
											"var.customer_owned_ipv4_pool",
										],
									},
									"enable_dns64": {
										"references": [
											"var.enable_ipv6",
											"var.outpost_subnet_enable_dns64",
										],
									},
									"enable_resource_name_dns_a_record_on_launch": {
										"references": [
											"var.outpost_subnet_ipv6_native",
											"var.outpost_subnet_enable_resource_name_dns_a_record_on_launch",
										],
									},
									"enable_resource_name_dns_aaaa_record_on_launch": {
										"references": [
											"var.enable_ipv6",
											"var.outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.enable_ipv6",
											"var.outpost_subnet_ipv6_prefixes",
											"aws_vpc.this[0].ipv6_cidr_block",
											"aws_vpc.this[0]",
											"aws_vpc.this",
											"var.outpost_subnet_ipv6_prefixes",
											"count.index",
										],
									},
									"ipv6_native": {
										"references": [
											"var.enable_ipv6",
											"var.outpost_subnet_ipv6_native",
										],
									},
									"map_customer_owned_ip_on_launch": {
										"references": [
											"var.map_customer_owned_ip_on_launch",
										],
									},
									"outpost_arn": {
										"references": [
											"var.outpost_arn",
										],
									},
									"private_dns_hostname_type_on_launch": {
										"references": [
											"var.outpost_subnet_private_dns_hostname_type_on_launch",
										],
									},
									"tags": {
										"references": [
											"var.outpost_subnet_names",
											"count.index",
											"var.name",
											"var.outpost_subnet_suffix",
											"var.outpost_az",
											"var.tags",
											"var.outpost_subnet_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "outpost",
								"provider_config_key": "aws",
								"schema_version":      1,
								"type":                "aws_subnet",
							},
							{
								"address": "aws_subnet.private",
								"count_expression": {
									"references": [
										"local.create_private_subnets",
										"local.len_private_subnets",
									],
								},
								"expressions": {
									"assign_ipv6_address_on_creation": {
										"references": [
											"var.enable_ipv6",
											"var.private_subnet_ipv6_native",
											"var.private_subnet_assign_ipv6_address_on_creation",
										],
									},
									"availability_zone": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"availability_zone_id": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"cidr_block": {
										"references": [
											"var.private_subnet_ipv6_native",
											"var.private_subnets",
											"count.index",
										],
									},
									"enable_dns64": {
										"references": [
											"var.enable_ipv6",
											"var.private_subnet_enable_dns64",
										],
									},
									"enable_resource_name_dns_a_record_on_launch": {
										"references": [
											"var.private_subnet_ipv6_native",
											"var.private_subnet_enable_resource_name_dns_a_record_on_launch",
										],
									},
									"enable_resource_name_dns_aaaa_record_on_launch": {
										"references": [
											"var.enable_ipv6",
											"var.private_subnet_enable_resource_name_dns_aaaa_record_on_launch",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.enable_ipv6",
											"var.private_subnet_ipv6_prefixes",
											"aws_vpc.this[0].ipv6_cidr_block",
											"aws_vpc.this[0]",
											"aws_vpc.this",
											"var.private_subnet_ipv6_prefixes",
											"count.index",
										],
									},
									"ipv6_native": {
										"references": [
											"var.enable_ipv6",
											"var.private_subnet_ipv6_native",
										],
									},
									"private_dns_hostname_type_on_launch": {
										"references": [
											"var.private_subnet_private_dns_hostname_type_on_launch",
										],
									},
									"tags": {
										"references": [
											"var.private_subnet_names",
											"count.index",
											"var.name",
											"var.private_subnet_suffix",
											"var.azs",
											"count.index",
											"var.tags",
											"var.private_subnet_tags",
											"var.private_subnet_tags_per_az",
											"var.azs",
											"count.index",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "private",
								"provider_config_key": "aws",
								"schema_version":      1,
								"type":                "aws_subnet",
							},
							{
								"address": "aws_subnet.public",
								"count_expression": {
									"references": [
										"local.create_public_subnets",
										"var.one_nat_gateway_per_az",
										"local.len_public_subnets",
										"var.azs",
										"local.len_public_subnets",
									],
								},
								"expressions": {
									"assign_ipv6_address_on_creation": {
										"references": [
											"var.enable_ipv6",
											"var.public_subnet_ipv6_native",
											"var.public_subnet_assign_ipv6_address_on_creation",
										],
									},
									"availability_zone": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"availability_zone_id": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"cidr_block": {
										"references": [
											"var.public_subnet_ipv6_native",
											"var.public_subnets",
											"count.index",
										],
									},
									"enable_dns64": {
										"references": [
											"var.enable_ipv6",
											"var.public_subnet_enable_dns64",
										],
									},
									"enable_resource_name_dns_a_record_on_launch": {
										"references": [
											"var.public_subnet_ipv6_native",
											"var.public_subnet_enable_resource_name_dns_a_record_on_launch",
										],
									},
									"enable_resource_name_dns_aaaa_record_on_launch": {
										"references": [
											"var.enable_ipv6",
											"var.public_subnet_enable_resource_name_dns_aaaa_record_on_launch",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.enable_ipv6",
											"var.public_subnet_ipv6_prefixes",
											"aws_vpc.this[0].ipv6_cidr_block",
											"aws_vpc.this[0]",
											"aws_vpc.this",
											"var.public_subnet_ipv6_prefixes",
											"count.index",
										],
									},
									"ipv6_native": {
										"references": [
											"var.enable_ipv6",
											"var.public_subnet_ipv6_native",
										],
									},
									"map_public_ip_on_launch": {
										"references": [
											"var.map_public_ip_on_launch",
										],
									},
									"private_dns_hostname_type_on_launch": {
										"references": [
											"var.public_subnet_private_dns_hostname_type_on_launch",
										],
									},
									"tags": {
										"references": [
											"var.public_subnet_names",
											"count.index",
											"var.name",
											"var.public_subnet_suffix",
											"var.azs",
											"count.index",
											"var.tags",
											"var.public_subnet_tags",
											"var.public_subnet_tags_per_az",
											"var.azs",
											"count.index",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "public",
								"provider_config_key": "aws",
								"schema_version":      1,
								"type":                "aws_subnet",
							},
							{
								"address": "aws_subnet.redshift",
								"count_expression": {
									"references": [
										"local.create_redshift_subnets",
										"local.len_redshift_subnets",
									],
								},
								"expressions": {
									"assign_ipv6_address_on_creation": {
										"references": [
											"var.enable_ipv6",
											"var.redshift_subnet_ipv6_native",
											"var.redshift_subnet_assign_ipv6_address_on_creation",
										],
									},
									"availability_zone": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"availability_zone_id": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"cidr_block": {
										"references": [
											"var.redshift_subnet_ipv6_native",
											"var.redshift_subnets",
											"count.index",
										],
									},
									"enable_dns64": {
										"references": [
											"var.enable_ipv6",
											"var.redshift_subnet_enable_dns64",
										],
									},
									"enable_resource_name_dns_a_record_on_launch": {
										"references": [
											"var.redshift_subnet_ipv6_native",
											"var.redshift_subnet_enable_resource_name_dns_a_record_on_launch",
										],
									},
									"enable_resource_name_dns_aaaa_record_on_launch": {
										"references": [
											"var.enable_ipv6",
											"var.redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.enable_ipv6",
											"var.redshift_subnet_ipv6_prefixes",
											"aws_vpc.this[0].ipv6_cidr_block",
											"aws_vpc.this[0]",
											"aws_vpc.this",
											"var.redshift_subnet_ipv6_prefixes",
											"count.index",
										],
									},
									"ipv6_native": {
										"references": [
											"var.enable_ipv6",
											"var.redshift_subnet_ipv6_native",
										],
									},
									"private_dns_hostname_type_on_launch": {
										"references": [
											"var.redshift_subnet_private_dns_hostname_type_on_launch",
										],
									},
									"tags": {
										"references": [
											"var.redshift_subnet_names",
											"count.index",
											"var.name",
											"var.redshift_subnet_suffix",
											"var.azs",
											"count.index",
											"var.tags",
											"var.redshift_subnet_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "redshift",
								"provider_config_key": "aws",
								"schema_version":      1,
								"type":                "aws_subnet",
							},
							{
								"address": "aws_vpc.this",
								"count_expression": {
									"references": [
										"local.create_vpc",
									],
								},
								"expressions": {
									"assign_generated_ipv6_cidr_block": {
										"references": [
											"var.enable_ipv6",
											"var.use_ipam_pool",
										],
									},
									"cidr_block": {
										"references": [
											"var.use_ipam_pool",
											"var.cidr",
										],
									},
									"enable_dns_hostnames": {
										"references": [
											"var.enable_dns_hostnames",
										],
									},
									"enable_dns_support": {
										"references": [
											"var.enable_dns_support",
										],
									},
									"enable_network_address_usage_metrics": {
										"references": [
											"var.enable_network_address_usage_metrics",
										],
									},
									"instance_tenancy": {
										"references": [
											"var.instance_tenancy",
										],
									},
									"ipv4_ipam_pool_id": {
										"references": [
											"var.ipv4_ipam_pool_id",
										],
									},
									"ipv4_netmask_length": {
										"references": [
											"var.ipv4_netmask_length",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.ipv6_cidr",
										],
									},
									"ipv6_cidr_block_network_border_group": {
										"references": [
											"var.ipv6_cidr_block_network_border_group",
										],
									},
									"ipv6_ipam_pool_id": {
										"references": [
											"var.ipv6_ipam_pool_id",
										],
									},
									"ipv6_netmask_length": {
										"references": [
											"var.ipv6_netmask_length",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"var.tags",
											"var.vpc_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      1,
								"type":                "aws_vpc",
							},
							{
								"address": "aws_vpc_block_public_access_exclusion.this",
								"expressions": {
									"internet_gateway_exclusion_mode": {
										"references": [
											"each.value.internet_gateway_exclusion_mode",
											"each.value",
										],
									},
									"subnet_id": {
										"references": [
											"each.value",
											"aws_subnet.private",
											"aws_subnet.public",
											"aws_subnet.database",
											"aws_subnet.redshift",
											"aws_subnet.elasticache",
											"aws_subnet.intra",
											"aws_subnet.outpost",
											"each.value.subnet_type",
											"each.value",
											"each.value.subnet_index",
											"each.value",
										],
									},
									"tags": {
										"references": [
											"var.tags",
										],
									},
									"vpc_id": {
										"references": [
											"each.value",
											"local.vpc_id",
										],
									},
								},
								"for_each_expression": {
									"references": [
										"var.vpc_block_public_access_exclusions",
										"local.create_vpc",
									],
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_block_public_access_exclusion",
							},
							{
								"address": "aws_vpc_block_public_access_options.this",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.vpc_block_public_access_options",
									],
								},
								"expressions": {
									"internet_gateway_block_mode": {
										"references": [
											"var.vpc_block_public_access_options[\"internet_gateway_block_mode\"]",
											"var.vpc_block_public_access_options",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_block_public_access_options",
							},
							{
								"address": "aws_vpc_dhcp_options.this",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.enable_dhcp_options",
									],
								},
								"expressions": {
									"domain_name": {
										"references": [
											"var.dhcp_options_domain_name",
										],
									},
									"domain_name_servers": {
										"references": [
											"var.dhcp_options_domain_name_servers",
										],
									},
									"ipv6_address_preferred_lease_time": {
										"references": [
											"var.dhcp_options_ipv6_address_preferred_lease_time",
										],
									},
									"netbios_name_servers": {
										"references": [
											"var.dhcp_options_netbios_name_servers",
										],
									},
									"netbios_node_type": {
										"references": [
											"var.dhcp_options_netbios_node_type",
										],
									},
									"ntp_servers": {
										"references": [
											"var.dhcp_options_ntp_servers",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"var.tags",
											"var.dhcp_options_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_dhcp_options",
							},
							{
								"address": "aws_vpc_dhcp_options_association.this",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.enable_dhcp_options",
									],
								},
								"expressions": {
									"dhcp_options_id": {
										"references": [
											"aws_vpc_dhcp_options.this[0].id",
											"aws_vpc_dhcp_options.this[0]",
											"aws_vpc_dhcp_options.this",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_dhcp_options_association",
							},
							{
								"address": "aws_vpc_ipv4_cidr_block_association.this",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.secondary_cidr_blocks",
										"var.secondary_cidr_blocks",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.secondary_cidr_blocks",
											"count.index",
										],
									},
									"vpc_id": {
										"references": [
											"aws_vpc.this[0].id",
											"aws_vpc.this[0]",
											"aws_vpc.this",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_ipv4_cidr_block_association",
							},
							{
								"address": "aws_vpn_gateway.this",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.enable_vpn_gateway",
									],
								},
								"expressions": {
									"amazon_side_asn": {
										"references": [
											"var.amazon_side_asn",
										],
									},
									"availability_zone": {
										"references": [
											"var.vpn_gateway_az",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"var.tags",
											"var.vpn_gateway_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpn_gateway",
							},
							{
								"address": "aws_vpn_gateway_attachment.this",
								"count_expression": {
									"references": [
										"var.vpn_gateway_id",
									],
								},
								"expressions": {
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
									"vpn_gateway_id": {
										"references": [
											"var.vpn_gateway_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpn_gateway_attachment",
							},
							{
								"address": "aws_vpn_gateway_route_propagation.intra",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.propagate_intra_route_tables_vgw",
										"var.enable_vpn_gateway",
										"var.vpn_gateway_id",
										"local.len_intra_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.intra",
											"count.index",
										],
									},
									"vpn_gateway_id": {
										"references": [
											"aws_vpn_gateway.this",
											"aws_vpn_gateway_attachment.this",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "intra",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpn_gateway_route_propagation",
							},
							{
								"address": "aws_vpn_gateway_route_propagation.private",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.propagate_private_route_tables_vgw",
										"var.enable_vpn_gateway",
										"var.vpn_gateway_id",
										"local.len_private_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.private",
											"count.index",
										],
									},
									"vpn_gateway_id": {
										"references": [
											"aws_vpn_gateway.this",
											"aws_vpn_gateway_attachment.this",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "private",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpn_gateway_route_propagation",
							},
							{
								"address": "aws_vpn_gateway_route_propagation.public",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.propagate_public_route_tables_vgw",
										"var.enable_vpn_gateway",
										"var.vpn_gateway_id",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.public",
											"count.index",
										],
									},
									"vpn_gateway_id": {
										"references": [
											"aws_vpn_gateway.this",
											"aws_vpn_gateway_attachment.this",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "public",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpn_gateway_route_propagation",
							},
							{
								"address": "data.aws_caller_identity.current",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_flow_log",
									],
								},
								"mode":                "data",
								"name":                "current",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_caller_identity",
							},
							{
								"address": "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role",
								"count_expression": {
									"references": [
										"local.create_flow_log_cloudwatch_iam_role",
									],
								},
								"expressions": {
									"statement": [
										{
											"actions": {
												"constant_value": [
													"sts:AssumeRole",
												],
											},
											"effect": {
												"constant_value": "Allow",
											},
											"principals": [
												{
													"identifiers": {
														"constant_value": [
															"vpc-flow-logs.amazonaws.com",
														],
													},
													"type": {
														"constant_value": "Service",
													},
												},
											],
											"sid": {
												"constant_value": "AWSVPCFlowLogsAssumeRole",
											},
										},
									],
								},
								"mode":                "data",
								"name":                "flow_log_cloudwatch_assume_role",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_iam_policy_document",
							},
							{
								"address": "data.aws_iam_policy_document.vpc_flow_log_cloudwatch",
								"count_expression": {
									"references": [
										"local.create_flow_log_cloudwatch_iam_role",
									],
								},
								"expressions": {
									"statement": [
										{
											"actions": {
												"constant_value": [
													"logs:CreateLogStream",
													"logs:PutLogEvents",
													"logs:DescribeLogGroups",
													"logs:DescribeLogStreams",
												],
											},
											"effect": {
												"constant_value": "Allow",
											},
											"resources": {
												"references": [
													"local.flow_log_group_arns",
												],
											},
											"sid": {
												"constant_value": "AWSVPCFlowLogsPushToCloudWatch",
											},
										},
									],
								},
								"mode":                "data",
								"name":                "vpc_flow_log_cloudwatch",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_iam_policy_document",
							},
							{
								"address": "data.aws_partition.current",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_flow_log",
									],
								},
								"mode":                "data",
								"name":                "current",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_partition",
							},
							{
								"address": "data.aws_region.current",
								"count_expression": {
									"references": [
										"var.create_vpc",
										"var.enable_flow_log",
									],
								},
								"mode":                "data",
								"name":                "current",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_region",
							},
						],
						"variables": {
							"amazon_side_asn": {
								"default":     "64512",
								"description": "The Autonomous System Number (ASN) for the Amazon side of the gateway. By default the virtual private gateway is created with the current default Amazon ASN",
							},
							"azs": {
								"default":     [],
								"description": "A list of availability zones names or ids in the region",
							},
							"cidr": {
								"default":     "10.0.0.0/16",
								"description": "(Optional) The IPv4 CIDR block for the VPC. CIDR can be explicitly set or it can be derived from IPAM using `ipv4_netmask_length` & `ipv4_ipam_pool_id`",
							},
							"create_database_internet_gateway_route": {
								"default":     false,
								"description": "Controls if an internet gateway route for public database access should be created",
							},
							"create_database_nat_gateway_route": {
								"default":     false,
								"description": "Controls if a nat gateway route should be created to give internet access to the database subnets",
							},
							"create_database_subnet_group": {
								"default":     true,
								"description": "Controls if database subnet group should be created (n.b. database_subnets must also be set)",
							},
							"create_database_subnet_route_table": {
								"default":     false,
								"description": "Controls if separate route table for database should be created",
							},
							"create_egress_only_igw": {
								"default":     true,
								"description": "Controls if an Egress Only Internet Gateway is created and its related routes",
							},
							"create_elasticache_subnet_group": {
								"default":     true,
								"description": "Controls if elasticache subnet group should be created",
							},
							"create_elasticache_subnet_route_table": {
								"default":     false,
								"description": "Controls if separate route table for elasticache should be created",
							},
							"create_flow_log_cloudwatch_iam_role": {
								"default":     false,
								"description": "Whether to create IAM role for VPC Flow Logs",
							},
							"create_flow_log_cloudwatch_log_group": {
								"default":     false,
								"description": "Whether to create CloudWatch log group for VPC Flow Logs",
							},
							"create_igw": {
								"default":     true,
								"description": "Controls if an Internet Gateway is created for public subnets and the related routes that connect them",
							},
							"create_multiple_intra_route_tables": {
								"default":     false,
								"description": "Indicates whether to create a separate route table for each intra subnet. Default: `false`",
							},
							"create_multiple_public_route_tables": {
								"default":     false,
								"description": "Indicates whether to create a separate route table for each public subnet. Default: `false`",
							},
							"create_private_nat_gateway_route": {
								"default":     true,
								"description": "Controls if a nat gateway route should be created to give internet access to the private subnets",
							},
							"create_redshift_subnet_group": {
								"default":     true,
								"description": "Controls if redshift subnet group should be created",
							},
							"create_redshift_subnet_route_table": {
								"default":     false,
								"description": "Controls if separate route table for redshift should be created",
							},
							"create_vpc": {
								"default":     true,
								"description": "Controls if VPC should be created (it affects almost all resources)",
							},
							"customer_gateway_tags": {
								"default":     {},
								"description": "Additional tags for the Customer Gateway",
							},
							"customer_gateways": {
								"default":     {},
								"description": "Maps of Customer Gateway's attributes (BGP ASN and Gateway's Internet-routable external IP address)",
							},
							"customer_owned_ipv4_pool": {
								"description": "The customer owned IPv4 address pool. Typically used with the `map_customer_owned_ip_on_launch` argument. The `outpost_arn` argument must be specified when configured",
							},
							"database_acl_tags": {
								"default":     {},
								"description": "Additional tags for the database subnets network ACL",
							},
							"database_dedicated_network_acl": {
								"default":     false,
								"description": "Whether to use dedicated network ACL (not default) and custom rules for database subnets",
							},
							"database_inbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Database subnets inbound network ACL rules",
							},
							"database_outbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Database subnets outbound network ACL rules",
							},
							"database_route_table_tags": {
								"default":     {},
								"description": "Additional tags for the database route tables",
							},
							"database_subnet_assign_ipv6_address_on_creation": {
								"default":     false,
								"description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`",
							},
							"database_subnet_enable_dns64": {
								"default":     true,
								"description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`",
							},
							"database_subnet_enable_resource_name_dns_a_record_on_launch": {
								"default":     false,
								"description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`",
							},
							"database_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
								"default":     true,
								"description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`",
							},
							"database_subnet_group_name": {
								"description": "Name of database subnet group",
							},
							"database_subnet_group_tags": {
								"default":     {},
								"description": "Additional tags for the database subnet group",
							},
							"database_subnet_ipv6_native": {
								"default":     false,
								"description": "Indicates whether to create an IPv6-only subnet. Default: `false`",
							},
							"database_subnet_ipv6_prefixes": {
								"default":     [],
								"description": "Assigns IPv6 database subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
							},
							"database_subnet_names": {
								"default":     [],
								"description": "Explicit values to use in the Name tag on database subnets. If empty, Name tags are generated",
							},
							"database_subnet_private_dns_hostname_type_on_launch": {
								"description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`",
							},
							"database_subnet_suffix": {
								"default":     "db",
								"description": "Suffix to append to database subnets name",
							},
							"database_subnet_tags": {
								"default":     {},
								"description": "Additional tags for the database subnets",
							},
							"database_subnets": {
								"default":     [],
								"description": "A list of database subnets inside the VPC",
							},
							"default_network_acl_egress": {
								"default": [
									{
										"action":     "allow",
										"cidr_block": "0.0.0.0/0",
										"from_port":  "0",
										"protocol":   "-1",
										"rule_no":    "100",
										"to_port":    "0",
									},
									{
										"action":          "allow",
										"from_port":       "0",
										"ipv6_cidr_block": "::/0",
										"protocol":        "-1",
										"rule_no":         "101",
										"to_port":         "0",
									},
								],
								"description": "List of maps of egress rules to set on the Default Network ACL",
							},
							"default_network_acl_ingress": {
								"default": [
									{
										"action":     "allow",
										"cidr_block": "0.0.0.0/0",
										"from_port":  "0",
										"protocol":   "-1",
										"rule_no":    "100",
										"to_port":    "0",
									},
									{
										"action":          "allow",
										"from_port":       "0",
										"ipv6_cidr_block": "::/0",
										"protocol":        "-1",
										"rule_no":         "101",
										"to_port":         "0",
									},
								],
								"description": "List of maps of ingress rules to set on the Default Network ACL",
							},
							"default_network_acl_name": {
								"description": "Name to be used on the Default Network ACL",
							},
							"default_network_acl_tags": {
								"default":     {},
								"description": "Additional tags for the Default Network ACL",
							},
							"default_route_table_name": {
								"description": "Name to be used on the default route table",
							},
							"default_route_table_propagating_vgws": {
								"default":     [],
								"description": "List of virtual gateways for propagation",
							},
							"default_route_table_routes": {
								"default":     [],
								"description": "Configuration block of routes. See https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_route_table#route",
							},
							"default_route_table_tags": {
								"default":     {},
								"description": "Additional tags for the default route table",
							},
							"default_security_group_egress": {
								"default":     [],
								"description": "List of maps of egress rules to set on the default security group",
							},
							"default_security_group_ingress": {
								"default":     [],
								"description": "List of maps of ingress rules to set on the default security group",
							},
							"default_security_group_name": {
								"description": "Name to be used on the default security group",
							},
							"default_security_group_tags": {
								"default":     {},
								"description": "Additional tags for the default security group",
							},
							"default_vpc_enable_dns_hostnames": {
								"default":     true,
								"description": "Should be true to enable DNS hostnames in the Default VPC",
							},
							"default_vpc_enable_dns_support": {
								"default":     true,
								"description": "Should be true to enable DNS support in the Default VPC",
							},
							"default_vpc_name": {
								"description": "Name to be used on the Default VPC",
							},
							"default_vpc_tags": {
								"default":     {},
								"description": "Additional tags for the Default VPC",
							},
							"dhcp_options_domain_name": {
								"default":     "",
								"description": "Specifies DNS name for DHCP options set (requires enable_dhcp_options set to true)",
							},
							"dhcp_options_domain_name_servers": {
								"default": [
									"AmazonProvidedDNS",
								],
								"description": "Specify a list of DNS server addresses for DHCP options set, default to AWS provided (requires enable_dhcp_options set to true)",
							},
							"dhcp_options_ipv6_address_preferred_lease_time": {
								"description": "How frequently, in seconds, a running instance with an IPv6 assigned to it goes through DHCPv6 lease renewal (requires enable_dhcp_options set to true)",
							},
							"dhcp_options_netbios_name_servers": {
								"default":     [],
								"description": "Specify a list of netbios servers for DHCP options set (requires enable_dhcp_options set to true)",
							},
							"dhcp_options_netbios_node_type": {
								"default":     "",
								"description": "Specify netbios node_type for DHCP options set (requires enable_dhcp_options set to true)",
							},
							"dhcp_options_ntp_servers": {
								"default":     [],
								"description": "Specify a list of NTP servers for DHCP options set (requires enable_dhcp_options set to true)",
							},
							"dhcp_options_tags": {
								"default":     {},
								"description": "Additional tags for the DHCP option set (requires enable_dhcp_options set to true)",
							},
							"elasticache_acl_tags": {
								"default":     {},
								"description": "Additional tags for the elasticache subnets network ACL",
							},
							"elasticache_dedicated_network_acl": {
								"default":     false,
								"description": "Whether to use dedicated network ACL (not default) and custom rules for elasticache subnets",
							},
							"elasticache_inbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Elasticache subnets inbound network ACL rules",
							},
							"elasticache_outbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Elasticache subnets outbound network ACL rules",
							},
							"elasticache_route_table_tags": {
								"default":     {},
								"description": "Additional tags for the elasticache route tables",
							},
							"elasticache_subnet_assign_ipv6_address_on_creation": {
								"default":     false,
								"description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`",
							},
							"elasticache_subnet_enable_dns64": {
								"default":     true,
								"description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`",
							},
							"elasticache_subnet_enable_resource_name_dns_a_record_on_launch": {
								"default":     false,
								"description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`",
							},
							"elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
								"default":     true,
								"description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`",
							},
							"elasticache_subnet_group_name": {
								"description": "Name of elasticache subnet group",
							},
							"elasticache_subnet_group_tags": {
								"default":     {},
								"description": "Additional tags for the elasticache subnet group",
							},
							"elasticache_subnet_ipv6_native": {
								"default":     false,
								"description": "Indicates whether to create an IPv6-only subnet. Default: `false`",
							},
							"elasticache_subnet_ipv6_prefixes": {
								"default":     [],
								"description": "Assigns IPv6 elasticache subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
							},
							"elasticache_subnet_names": {
								"default":     [],
								"description": "Explicit values to use in the Name tag on elasticache subnets. If empty, Name tags are generated",
							},
							"elasticache_subnet_private_dns_hostname_type_on_launch": {
								"description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`",
							},
							"elasticache_subnet_suffix": {
								"default":     "elasticache",
								"description": "Suffix to append to elasticache subnets name",
							},
							"elasticache_subnet_tags": {
								"default":     {},
								"description": "Additional tags for the elasticache subnets",
							},
							"elasticache_subnets": {
								"default":     [],
								"description": "A list of elasticache subnets inside the VPC",
							},
							"enable_dhcp_options": {
								"default":     false,
								"description": "Should be true if you want to specify a DHCP options set with a custom domain name, DNS servers, NTP servers, netbios servers, and/or netbios server type",
							},
							"enable_dns_hostnames": {
								"default":     true,
								"description": "Should be true to enable DNS hostnames in the VPC",
							},
							"enable_dns_support": {
								"default":     true,
								"description": "Should be true to enable DNS support in the VPC",
							},
							"enable_flow_log": {
								"default":     false,
								"description": "Whether or not to enable VPC Flow Logs",
							},
							"enable_ipv6": {
								"default":     false,
								"description": "Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block",
							},
							"enable_nat_gateway": {
								"default":     false,
								"description": "Should be true if you want to provision NAT Gateways for each of your private networks",
							},
							"enable_network_address_usage_metrics": {
								"description": "Determines whether network address usage metrics are enabled for the VPC",
							},
							"enable_public_redshift": {
								"default":     false,
								"description": "Controls if redshift should have public routing table",
							},
							"enable_vpn_gateway": {
								"default":     false,
								"description": "Should be true if you want to create a new VPN Gateway resource and attach it to the VPC",
							},
							"external_nat_ip_ids": {
								"default":     [],
								"description": "List of EIP IDs to be assigned to the NAT Gateways (used in combination with reuse_nat_ips)",
							},
							"external_nat_ips": {
								"default":     [],
								"description": "List of EIPs to be used for `nat_public_ips` output (used in combination with reuse_nat_ips and external_nat_ip_ids)",
							},
							"flow_log_cloudwatch_iam_role_arn": {
								"default":     "",
								"description": "The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group. When flow_log_destination_arn is set to ARN of Cloudwatch Logs, this argument needs to be provided",
							},
							"flow_log_cloudwatch_iam_role_conditions": {
								"default":     [],
								"description": "Additional conditions of the CloudWatch role assumption policy",
							},
							"flow_log_cloudwatch_log_group_class": {
								"description": "Specified the log class of the log group. Possible values are: STANDARD or INFREQUENT_ACCESS",
							},
							"flow_log_cloudwatch_log_group_kms_key_id": {
								"description": "The ARN of the KMS Key to use when encrypting log data for VPC flow logs",
							},
							"flow_log_cloudwatch_log_group_name_prefix": {
								"default":     "/aws/vpc-flow-log/",
								"description": "Specifies the name prefix of CloudWatch Log Group for VPC flow logs",
							},
							"flow_log_cloudwatch_log_group_name_suffix": {
								"default":     "",
								"description": "Specifies the name suffix of CloudWatch Log Group for VPC flow logs",
							},
							"flow_log_cloudwatch_log_group_retention_in_days": {
								"description": "Specifies the number of days you want to retain log events in the specified log group for VPC flow logs",
							},
							"flow_log_cloudwatch_log_group_skip_destroy": {
								"default":     false,
								"description": " Set to true if you do not wish the log group (and any logs it may contain) to be deleted at destroy time, and instead just remove the log group from the Terraform state",
							},
							"flow_log_deliver_cross_account_role": {
								"description": "(Optional) ARN of the IAM role that allows Amazon EC2 to publish flow logs across accounts.",
							},
							"flow_log_destination_arn": {
								"default":     "",
								"description": "The ARN of the CloudWatch log group or S3 bucket where VPC Flow Logs will be pushed. If this ARN is a S3 bucket the appropriate permissions need to be set on that bucket's policy. When create_flow_log_cloudwatch_log_group is set to false this argument must be provided",
							},
							"flow_log_destination_type": {
								"default":     "cloud-watch-logs",
								"description": "Type of flow log destination. Can be s3, kinesis-data-firehose or cloud-watch-logs",
							},
							"flow_log_file_format": {
								"description": "(Optional) The format for the flow log. Valid values: `plain-text`, `parquet`",
							},
							"flow_log_hive_compatible_partitions": {
								"default":     false,
								"description": "(Optional) Indicates whether to use Hive-compatible prefixes for flow logs stored in Amazon S3",
							},
							"flow_log_log_format": {
								"description": "The fields to include in the flow log record, in the order in which they should appear",
							},
							"flow_log_max_aggregation_interval": {
								"default":     600,
								"description": "The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. Valid Values: `60` seconds or `600` seconds",
							},
							"flow_log_per_hour_partition": {
								"default":     false,
								"description": "(Optional) Indicates whether to partition the flow log per hour. This reduces the cost and response time for queries",
							},
							"flow_log_traffic_type": {
								"default":     "ALL",
								"description": "The type of traffic to capture. Valid values: ACCEPT, REJECT, ALL",
							},
							"igw_tags": {
								"default":     {},
								"description": "Additional tags for the internet gateway",
							},
							"instance_tenancy": {
								"default":     "default",
								"description": "A tenancy option for instances launched into the VPC",
							},
							"intra_acl_tags": {
								"default":     {},
								"description": "Additional tags for the intra subnets network ACL",
							},
							"intra_dedicated_network_acl": {
								"default":     false,
								"description": "Whether to use dedicated network ACL (not default) and custom rules for intra subnets",
							},
							"intra_inbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Intra subnets inbound network ACLs",
							},
							"intra_outbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Intra subnets outbound network ACLs",
							},
							"intra_route_table_tags": {
								"default":     {},
								"description": "Additional tags for the intra route tables",
							},
							"intra_subnet_assign_ipv6_address_on_creation": {
								"default":     false,
								"description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`",
							},
							"intra_subnet_enable_dns64": {
								"default":     true,
								"description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`",
							},
							"intra_subnet_enable_resource_name_dns_a_record_on_launch": {
								"default":     false,
								"description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`",
							},
							"intra_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
								"default":     true,
								"description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`",
							},
							"intra_subnet_ipv6_native": {
								"default":     false,
								"description": "Indicates whether to create an IPv6-only subnet. Default: `false`",
							},
							"intra_subnet_ipv6_prefixes": {
								"default":     [],
								"description": "Assigns IPv6 intra subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
							},
							"intra_subnet_names": {
								"default":     [],
								"description": "Explicit values to use in the Name tag on intra subnets. If empty, Name tags are generated",
							},
							"intra_subnet_private_dns_hostname_type_on_launch": {
								"description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`",
							},
							"intra_subnet_suffix": {
								"default":     "intra",
								"description": "Suffix to append to intra subnets name",
							},
							"intra_subnet_tags": {
								"default":     {},
								"description": "Additional tags for the intra subnets",
							},
							"intra_subnets": {
								"default":     [],
								"description": "A list of intra subnets inside the VPC",
							},
							"ipv4_ipam_pool_id": {
								"description": "(Optional) The ID of an IPv4 IPAM pool you want to use for allocating this VPC's CIDR",
							},
							"ipv4_netmask_length": {
								"description": "(Optional) The netmask length of the IPv4 CIDR you want to allocate to this VPC. Requires specifying a ipv4_ipam_pool_id",
							},
							"ipv6_cidr": {
								"description": "(Optional) IPv6 CIDR block to request from an IPAM Pool. Can be set explicitly or derived from IPAM using `ipv6_netmask_length`",
							},
							"ipv6_cidr_block_network_border_group": {
								"description": "By default when an IPv6 CIDR is assigned to a VPC a default ipv6_cidr_block_network_border_group will be set to the region of the VPC. This can be changed to restrict advertisement of public addresses to specific Network Border Groups such as LocalZones",
							},
							"ipv6_ipam_pool_id": {
								"description": "(Optional) IPAM Pool ID for a IPv6 pool. Conflicts with `assign_generated_ipv6_cidr_block`",
							},
							"ipv6_netmask_length": {
								"description": "(Optional) Netmask length to request from IPAM Pool. Conflicts with `ipv6_cidr_block`. This can be omitted if IPAM pool as a `allocation_default_netmask_length` set. Valid values: `56`",
							},
							"manage_default_network_acl": {
								"default":     true,
								"description": "Should be true to adopt and manage Default Network ACL",
							},
							"manage_default_route_table": {
								"default":     true,
								"description": "Should be true to manage default route table",
							},
							"manage_default_security_group": {
								"default":     true,
								"description": "Should be true to adopt and manage default security group",
							},
							"manage_default_vpc": {
								"default":     false,
								"description": "Should be true to adopt and manage Default VPC",
							},
							"map_customer_owned_ip_on_launch": {
								"default":     false,
								"description": "Specify true to indicate that network interfaces created in the subnet should be assigned a customer owned IP address. The `customer_owned_ipv4_pool` and `outpost_arn` arguments must be specified when set to `true`. Default is `false`",
							},
							"map_public_ip_on_launch": {
								"default":     false,
								"description": "Specify true to indicate that instances launched into the subnet should be assigned a public IP address. Default is `false`",
							},
							"name": {
								"default":     "",
								"description": "Name to be used on all the resources as identifier",
							},
							"nat_eip_tags": {
								"default":     {},
								"description": "Additional tags for the NAT EIP",
							},
							"nat_gateway_destination_cidr_block": {
								"default":     "0.0.0.0/0",
								"description": "Used to pass a custom destination route for private NAT Gateway. If not specified, the default 0.0.0.0/0 is used as a destination route",
							},
							"nat_gateway_tags": {
								"default":     {},
								"description": "Additional tags for the NAT gateways",
							},
							"one_nat_gateway_per_az": {
								"default":     false,
								"description": "Should be true if you want only one NAT Gateway per availability zone. Requires `var.azs` to be set, and the number of `public_subnets` created to be greater than or equal to the number of availability zones specified in `var.azs`",
							},
							"outpost_acl_tags": {
								"default":     {},
								"description": "Additional tags for the outpost subnets network ACL",
							},
							"outpost_arn": {
								"description": "ARN of Outpost you want to create a subnet in",
							},
							"outpost_az": {
								"description": "AZ where Outpost is anchored",
							},
							"outpost_dedicated_network_acl": {
								"default":     false,
								"description": "Whether to use dedicated network ACL (not default) and custom rules for outpost subnets",
							},
							"outpost_inbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Outpost subnets inbound network ACLs",
							},
							"outpost_outbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Outpost subnets outbound network ACLs",
							},
							"outpost_subnet_assign_ipv6_address_on_creation": {
								"default":     false,
								"description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`",
							},
							"outpost_subnet_enable_dns64": {
								"default":     true,
								"description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`",
							},
							"outpost_subnet_enable_resource_name_dns_a_record_on_launch": {
								"default":     false,
								"description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`",
							},
							"outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
								"default":     true,
								"description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`",
							},
							"outpost_subnet_ipv6_native": {
								"default":     false,
								"description": "Indicates whether to create an IPv6-only subnet. Default: `false`",
							},
							"outpost_subnet_ipv6_prefixes": {
								"default":     [],
								"description": "Assigns IPv6 outpost subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
							},
							"outpost_subnet_names": {
								"default":     [],
								"description": "Explicit values to use in the Name tag on outpost subnets. If empty, Name tags are generated",
							},
							"outpost_subnet_private_dns_hostname_type_on_launch": {
								"description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`",
							},
							"outpost_subnet_suffix": {
								"default":     "outpost",
								"description": "Suffix to append to outpost subnets name",
							},
							"outpost_subnet_tags": {
								"default":     {},
								"description": "Additional tags for the outpost subnets",
							},
							"outpost_subnets": {
								"default":     [],
								"description": "A list of outpost subnets inside the VPC",
							},
							"private_acl_tags": {
								"default":     {},
								"description": "Additional tags for the private subnets network ACL",
							},
							"private_dedicated_network_acl": {
								"default":     false,
								"description": "Whether to use dedicated network ACL (not default) and custom rules for private subnets",
							},
							"private_inbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Private subnets inbound network ACLs",
							},
							"private_outbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Private subnets outbound network ACLs",
							},
							"private_route_table_tags": {
								"default":     {},
								"description": "Additional tags for the private route tables",
							},
							"private_subnet_assign_ipv6_address_on_creation": {
								"default":     false,
								"description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`",
							},
							"private_subnet_enable_dns64": {
								"default":     true,
								"description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`",
							},
							"private_subnet_enable_resource_name_dns_a_record_on_launch": {
								"default":     false,
								"description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`",
							},
							"private_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
								"default":     true,
								"description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`",
							},
							"private_subnet_ipv6_native": {
								"default":     false,
								"description": "Indicates whether to create an IPv6-only subnet. Default: `false`",
							},
							"private_subnet_ipv6_prefixes": {
								"default":     [],
								"description": "Assigns IPv6 private subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
							},
							"private_subnet_names": {
								"default":     [],
								"description": "Explicit values to use in the Name tag on private subnets. If empty, Name tags are generated",
							},
							"private_subnet_private_dns_hostname_type_on_launch": {
								"description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`",
							},
							"private_subnet_suffix": {
								"default":     "private",
								"description": "Suffix to append to private subnets name",
							},
							"private_subnet_tags": {
								"default":     {},
								"description": "Additional tags for the private subnets",
							},
							"private_subnet_tags_per_az": {
								"default":     {},
								"description": "Additional tags for the private subnets where the primary key is the AZ",
							},
							"private_subnets": {
								"default":     [],
								"description": "A list of private subnets inside the VPC",
							},
							"propagate_intra_route_tables_vgw": {
								"default":     false,
								"description": "Should be true if you want route table propagation",
							},
							"propagate_private_route_tables_vgw": {
								"default":     false,
								"description": "Should be true if you want route table propagation",
							},
							"propagate_public_route_tables_vgw": {
								"default":     false,
								"description": "Should be true if you want route table propagation",
							},
							"public_acl_tags": {
								"default":     {},
								"description": "Additional tags for the public subnets network ACL",
							},
							"public_dedicated_network_acl": {
								"default":     false,
								"description": "Whether to use dedicated network ACL (not default) and custom rules for public subnets",
							},
							"public_inbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Public subnets inbound network ACLs",
							},
							"public_outbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Public subnets outbound network ACLs",
							},
							"public_route_table_tags": {
								"default":     {},
								"description": "Additional tags for the public route tables",
							},
							"public_subnet_assign_ipv6_address_on_creation": {
								"default":     false,
								"description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`",
							},
							"public_subnet_enable_dns64": {
								"default":     true,
								"description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`",
							},
							"public_subnet_enable_resource_name_dns_a_record_on_launch": {
								"default":     false,
								"description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`",
							},
							"public_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
								"default":     true,
								"description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`",
							},
							"public_subnet_ipv6_native": {
								"default":     false,
								"description": "Indicates whether to create an IPv6-only subnet. Default: `false`",
							},
							"public_subnet_ipv6_prefixes": {
								"default":     [],
								"description": "Assigns IPv6 public subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
							},
							"public_subnet_names": {
								"default":     [],
								"description": "Explicit values to use in the Name tag on public subnets. If empty, Name tags are generated",
							},
							"public_subnet_private_dns_hostname_type_on_launch": {
								"description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`",
							},
							"public_subnet_suffix": {
								"default":     "public",
								"description": "Suffix to append to public subnets name",
							},
							"public_subnet_tags": {
								"default":     {},
								"description": "Additional tags for the public subnets",
							},
							"public_subnet_tags_per_az": {
								"default":     {},
								"description": "Additional tags for the public subnets where the primary key is the AZ",
							},
							"public_subnets": {
								"default":     [],
								"description": "A list of public subnets inside the VPC",
							},
							"putin_khuylo": {
								"default":     true,
								"description": "Do you agree that Putin doesn't respect Ukrainian sovereignty and territorial integrity? More info: https://en.wikipedia.org/wiki/Putin_khuylo!",
							},
							"redshift_acl_tags": {
								"default":     {},
								"description": "Additional tags for the redshift subnets network ACL",
							},
							"redshift_dedicated_network_acl": {
								"default":     false,
								"description": "Whether to use dedicated network ACL (not default) and custom rules for redshift subnets",
							},
							"redshift_inbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Redshift subnets inbound network ACL rules",
							},
							"redshift_outbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Redshift subnets outbound network ACL rules",
							},
							"redshift_route_table_tags": {
								"default":     {},
								"description": "Additional tags for the redshift route tables",
							},
							"redshift_subnet_assign_ipv6_address_on_creation": {
								"default":     false,
								"description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`",
							},
							"redshift_subnet_enable_dns64": {
								"default":     true,
								"description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`",
							},
							"redshift_subnet_enable_resource_name_dns_a_record_on_launch": {
								"default":     false,
								"description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`",
							},
							"redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
								"default":     true,
								"description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`",
							},
							"redshift_subnet_group_name": {
								"description": "Name of redshift subnet group",
							},
							"redshift_subnet_group_tags": {
								"default":     {},
								"description": "Additional tags for the redshift subnet group",
							},
							"redshift_subnet_ipv6_native": {
								"default":     false,
								"description": "Indicates whether to create an IPv6-only subnet. Default: `false`",
							},
							"redshift_subnet_ipv6_prefixes": {
								"default":     [],
								"description": "Assigns IPv6 redshift subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
							},
							"redshift_subnet_names": {
								"default":     [],
								"description": "Explicit values to use in the Name tag on redshift subnets. If empty, Name tags are generated",
							},
							"redshift_subnet_private_dns_hostname_type_on_launch": {
								"description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`",
							},
							"redshift_subnet_suffix": {
								"default":     "redshift",
								"description": "Suffix to append to redshift subnets name",
							},
							"redshift_subnet_tags": {
								"default":     {},
								"description": "Additional tags for the redshift subnets",
							},
							"redshift_subnets": {
								"default":     [],
								"description": "A list of redshift subnets inside the VPC",
							},
							"reuse_nat_ips": {
								"default":     false,
								"description": "Should be true if you don't want EIPs to be created for your NAT Gateways and will instead pass them in via the 'external_nat_ip_ids' variable",
							},
							"secondary_cidr_blocks": {
								"default":     [],
								"description": "List of secondary CIDR blocks to associate with the VPC to extend the IP Address pool",
							},
							"single_nat_gateway": {
								"default":     false,
								"description": "Should be true if you want to provision a single shared NAT Gateway across all of your private networks",
							},
							"tags": {
								"default":     {},
								"description": "A map of tags to add to all resources",
							},
							"use_ipam_pool": {
								"default":     false,
								"description": "Determines whether IPAM pool is used for CIDR allocation",
							},
							"vpc_block_public_access_exclusions": {
								"default":     {},
								"description": "A map of VPC block public access exclusions",
							},
							"vpc_block_public_access_options": {
								"default":     {},
								"description": "A map of VPC block public access options",
							},
							"vpc_flow_log_iam_policy_name": {
								"default":     "vpc-flow-log-to-cloudwatch",
								"description": "Name of the IAM policy",
							},
							"vpc_flow_log_iam_policy_use_name_prefix": {
								"default":     true,
								"description": "Determines whether the name of the IAM policy (`vpc_flow_log_iam_policy_name`) is used as a prefix",
							},
							"vpc_flow_log_iam_role_name": {
								"default":     "vpc-flow-log-role",
								"description": "Name to use on the VPC Flow Log IAM role created",
							},
							"vpc_flow_log_iam_role_use_name_prefix": {
								"default":     true,
								"description": "Determines whether the IAM role name (`vpc_flow_log_iam_role_name_name`) is used as a prefix",
							},
							"vpc_flow_log_permissions_boundary": {
								"description": "The ARN of the Permissions Boundary for the VPC Flow Log IAM Role",
							},
							"vpc_flow_log_tags": {
								"default":     {},
								"description": "Additional tags for the VPC Flow Logs",
							},
							"vpc_tags": {
								"default":     {},
								"description": "Additional tags for the VPC",
							},
							"vpn_gateway_az": {
								"description": "The Availability Zone for the VPN Gateway",
							},
							"vpn_gateway_id": {
								"default":     "",
								"description": "ID of VPN Gateway to attach to the VPC",
							},
							"vpn_gateway_tags": {
								"default":     {},
								"description": "Additional tags for the VPN gateway",
							},
						},
					},
					"source": "terraform-aws-modules/vpc/aws",
				},
			},
			"outputs": {
				"ec2_instance_connect_url": {
					"expression": {
						"references": [
							"aws_instance.agent.id",
							"aws_instance.agent",
						],
					},
				},
			},
			"resources": [
				{
					"address": "aws_instance.agent",
					"expressions": {
						"ami": {
							"constant_value": "ami-0c41542cdc0e23561",
						},
						"associate_public_ip_address": {
							"constant_value": true,
						},
						"instance_type": {
							"constant_value": "t4g.nano",
						},
						"subnet_id": {
							"references": [
								"module.vpc.public_subnets[0]",
								"module.vpc.public_subnets",
								"module.vpc",
							],
						},
						"user_data": {
							"references": [
								"var.tfc_agent_token",
							],
						},
						"vpc_security_group_ids": {
							"references": [
								"aws_security_group.ec2_instance_connect.id",
								"aws_security_group.ec2_instance_connect",
								"aws_security_group.outbound_http.id",
								"aws_security_group.outbound_http",
							],
						},
					},
					"mode":                "managed",
					"name":                "agent",
					"provider_config_key": "aws",
					"schema_version":      1,
					"type":                "aws_instance",
				},
				{
					"address": "aws_security_group.ec2_instance_connect",
					"expressions": {
						"description": {
							"constant_value": "Allow EC2 Instance Connect to access this host",
						},
						"ingress": {
							"references": [
								"data.aws_ip_ranges.ec2_instance_connect.cidr_blocks",
								"data.aws_ip_ranges.ec2_instance_connect",
								"data.aws_ip_ranges.ec2_instance_connect.ipv6_cidr_blocks",
								"data.aws_ip_ranges.ec2_instance_connect",
							],
						},
						"name": {
							"constant_value": "ec2_instance_connect",
						},
						"tags": {
							"references": [
								"data.aws_ip_ranges.ec2_instance_connect.create_date",
								"data.aws_ip_ranges.ec2_instance_connect",
								"data.aws_ip_ranges.ec2_instance_connect.sync_token",
								"data.aws_ip_ranges.ec2_instance_connect",
							],
						},
						"vpc_id": {
							"references": [
								"module.vpc.vpc_id",
								"module.vpc",
							],
						},
					},
					"mode":                "managed",
					"name":                "ec2_instance_connect",
					"provider_config_key": "aws",
					"schema_version":      1,
					"type":                "aws_security_group",
				},
				{
					"address": "aws_security_group.outbound_http",
					"expressions": {
						"description": {
							"constant_value": "Allow outbound HTTP(S) access to everywhere",
						},
						"egress": {
							"constant_value": [
								{
									"cidr_blocks": [
										"0.0.0.0/0",
									],
									"description": null,
									"from_port":   443,
									"ipv6_cidr_blocks": [
										"::/0",
									],
									"prefix_list_ids": null,
									"protocol":        "tcp",
									"security_groups": null,
									"self":            null,
									"to_port":         443,
								},
								{
									"cidr_blocks": [
										"0.0.0.0/0",
									],
									"description": null,
									"from_port":   80,
									"ipv6_cidr_blocks": [
										"::/0",
									],
									"prefix_list_ids": null,
									"protocol":        "tcp",
									"security_groups": null,
									"self":            null,
									"to_port":         80,
								},
							],
						},
						"name": {
							"constant_value": "outbound_http",
						},
						"vpc_id": {
							"references": [
								"module.vpc.vpc_id",
								"module.vpc",
							],
						},
					},
					"mode":                "managed",
					"name":                "outbound_http",
					"provider_config_key": "aws",
					"schema_version":      1,
					"type":                "aws_security_group",
				},
				{
					"address":             "null_resource.exec",
					"mode":                "managed",
					"name":                "exec",
					"provider_config_key": "null",
					"schema_version":      0,
					"type":                "null_resource",
				},
				{
					"address": "data.aws_availability_zones.available",
					"expressions": {
						"state": {
							"constant_value": "available",
						},
					},
					"mode":                "data",
					"name":                "available",
					"provider_config_key": "aws",
					"schema_version":      0,
					"type":                "aws_availability_zones",
				},
				{
					"address": "data.aws_ip_ranges.ec2_instance_connect",
					"expressions": {
						"regions": {
							"references": [
								"data.aws_region.current.name",
								"data.aws_region.current",
							],
						},
						"services": {
							"constant_value": [
								"ec2_instance_connect",
							],
						},
					},
					"mode":                "data",
					"name":                "ec2_instance_connect",
					"provider_config_key": "aws",
					"schema_version":      0,
					"type":                "aws_ip_ranges",
				},
				{
					"address":             "data.aws_region.current",
					"mode":                "data",
					"name":                "current",
					"provider_config_key": "aws",
					"schema_version":      0,
					"type":                "aws_region",
				},
				{
					"address":             "data.tfe_ip_ranges.addresses",
					"mode":                "data",
					"name":                "addresses",
					"provider_config_key": "tfe",
					"schema_version":      0,
					"type":                "tfe_ip_ranges",
				},
			],
			"variables": {
				"tfc_agent_token": {
					"default":   "AGENT_TOKEN",
					"sensitive": true,
				},
			},
		},
	},
	"format_version": "1.2",
	"output_changes": {
		"ec2_instance_connect_url": {
			"actions": [
				"no-op",
			],
			"after":            "https://eu-west-2.console.aws.amazon.com/ec2/home?region=eu-west-2#ConnectToInstance:instanceId=i-092ab9a8394c1849a",
			"after_sensitive":  false,
			"after_unknown":    false,
			"before":           "https://eu-west-2.console.aws.amazon.com/ec2/home?region=eu-west-2#ConnectToInstance:instanceId=i-092ab9a8394c1849a",
			"before_sensitive": false,
		},
	},
	"planned_values": {
		"outputs": {
			"ec2_instance_connect_url": {
				"sensitive": false,
				"value":     "https://eu-west-2.console.aws.amazon.com/ec2/home?region=eu-west-2#ConnectToInstance:instanceId=i-092ab9a8394c1849a",
			},
		},
		"root_module": {
			"child_modules": [
				{
					"address": "module.vpc",
					"resources": [
						{
							"address":        "module.vpc.aws_default_network_acl.this[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "this",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"egress": [
									{},
									{},
								],
								"ingress": [
									{},
									{},
								],
								"subnet_ids": [
									false,
									false,
									false,
								],
								"tags":     {},
								"tags_all": {},
							},
							"type": "aws_default_network_acl",
							"values": {
								"arn": "arn:aws:ec2:eu-west-2:564784738291:network-acl/acl-047c9b8117d436487",
								"default_network_acl_id": "acl-047c9b8117d436487",
								"egress": [
									{
										"action":          "allow",
										"cidr_block":      "",
										"from_port":       0,
										"icmp_code":       0,
										"icmp_type":       0,
										"ipv6_cidr_block": "::/0",
										"protocol":        "-1",
										"rule_no":         101,
										"to_port":         0,
									},
									{
										"action":          "allow",
										"cidr_block":      "0.0.0.0/0",
										"from_port":       0,
										"icmp_code":       0,
										"icmp_type":       0,
										"ipv6_cidr_block": "",
										"protocol":        "-1",
										"rule_no":         100,
										"to_port":         0,
									},
								],
								"id": "acl-047c9b8117d436487",
								"ingress": [
									{
										"action":          "allow",
										"cidr_block":      "",
										"from_port":       0,
										"icmp_code":       0,
										"icmp_type":       0,
										"ipv6_cidr_block": "::/0",
										"protocol":        "-1",
										"rule_no":         101,
										"to_port":         0,
									},
									{
										"action":          "allow",
										"cidr_block":      "0.0.0.0/0",
										"from_port":       0,
										"icmp_code":       0,
										"icmp_type":       0,
										"ipv6_cidr_block": "",
										"protocol":        "-1",
										"rule_no":         100,
										"to_port":         0,
									},
								],
								"owner_id": "564784738291",
								"subnet_ids": [
									"subnet-0892042fd9b88c443",
									"subnet-0b6efa305ddee152c",
									"subnet-0b74cf6d52312b7de",
								],
								"tags": {
									"Name": "agent-vpc-default",
								},
								"tags_all": {
									"Name":      "agent-vpc-default",
									"Owner":     "Lucy",
									"Purpose":   "Test TFC Agents",
									"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
									"TTL":       "Ephemeral Workspace",
									"Terraform": "true",
									"Workspace": "tf-agent-pool",
								},
								"vpc_id": "vpc-0475656c1f1de9f54",
							},
						},
						{
							"address":        "module.vpc.aws_default_route_table.default[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "default",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"propagating_vgws": [],
								"route":            [],
								"tags":             {},
								"tags_all":         {},
								"timeouts":         {},
							},
							"type": "aws_default_route_table",
							"values": {
								"arn": "arn:aws:ec2:eu-west-2:564784738291:route-table/rtb-087b68f71c1fbb116",
								"default_route_table_id": "rtb-087b68f71c1fbb116",
								"id":               "rtb-087b68f71c1fbb116",
								"owner_id":         "564784738291",
								"propagating_vgws": [],
								"route":            [],
								"tags": {
									"Name": "agent-vpc-default",
								},
								"tags_all": {
									"Name":      "agent-vpc-default",
									"Owner":     "Lucy",
									"Purpose":   "Test TFC Agents",
									"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
									"TTL":       "Ephemeral Workspace",
									"Terraform": "true",
									"Workspace": "tf-agent-pool",
								},
								"timeouts": {
									"create": "5m",
									"update": "5m",
								},
								"vpc_id": "vpc-0475656c1f1de9f54",
							},
						},
						{
							"address":        "module.vpc.aws_default_security_group.this[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "this",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"sensitive_values": {
								"egress":   [],
								"ingress":  [],
								"tags":     {},
								"tags_all": {},
							},
							"type": "aws_default_security_group",
							"values": {
								"arn":                    "arn:aws:ec2:eu-west-2:564784738291:security-group/sg-02f76aa6f404e5bf1",
								"description":            "default VPC security group",
								"egress":                 [],
								"id":                     "sg-02f76aa6f404e5bf1",
								"ingress":                [],
								"name":                   "default",
								"name_prefix":            "",
								"owner_id":               "564784738291",
								"revoke_rules_on_delete": false,
								"tags": {
									"Name": "agent-vpc-default",
								},
								"tags_all": {
									"Name":      "agent-vpc-default",
									"Owner":     "Lucy",
									"Purpose":   "Test TFC Agents",
									"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
									"TTL":       "Ephemeral Workspace",
									"Terraform": "true",
									"Workspace": "tf-agent-pool",
								},
								"vpc_id": "vpc-0475656c1f1de9f54",
							},
						},
						{
							"address":        "module.vpc.aws_internet_gateway.this[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "this",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"tags":     {},
								"tags_all": {},
							},
							"type": "aws_internet_gateway",
							"values": {
								"arn":      "arn:aws:ec2:eu-west-2:564784738291:internet-gateway/igw-0adceafb47eb02050",
								"id":       "igw-0adceafb47eb02050",
								"owner_id": "564784738291",
								"tags": {
									"Name": "agent-vpc",
								},
								"tags_all": {
									"Name":      "agent-vpc",
									"Owner":     "Lucy",
									"Purpose":   "Test TFC Agents",
									"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
									"TTL":       "Ephemeral Workspace",
									"Terraform": "true",
									"Workspace": "tf-agent-pool",
								},
								"timeouts": null,
								"vpc_id":   "vpc-0475656c1f1de9f54",
							},
						},
						{
							"address":        "module.vpc.aws_route.public_internet_gateway[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "public_internet_gateway",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"timeouts": {},
							},
							"type": "aws_route",
							"values": {
								"carrier_gateway_id":          "",
								"core_network_arn":            "",
								"destination_cidr_block":      "0.0.0.0/0",
								"destination_ipv6_cidr_block": "",
								"destination_prefix_list_id":  "",
								"egress_only_gateway_id":      "",
								"gateway_id":                  "igw-0adceafb47eb02050",
								"id":                          "r-rtb-034dbc5284e92440a1080289494",
								"instance_id":                 "",
								"instance_owner_id":           "",
								"local_gateway_id":            "",
								"nat_gateway_id":              "",
								"network_interface_id":        "",
								"origin":                      "CreateRoute",
								"route_table_id":              "rtb-034dbc5284e92440a",
								"state":                       "active",
								"timeouts": {
									"create": "5m",
									"delete": null,
									"update": null,
								},
								"transit_gateway_id":        "",
								"vpc_endpoint_id":           "",
								"vpc_peering_connection_id": "",
							},
						},
						{
							"address":        "module.vpc.aws_route_table.public[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "public",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"propagating_vgws": [],
								"route": [
									{},
								],
								"tags":     {},
								"tags_all": {},
							},
							"type": "aws_route_table",
							"values": {
								"arn":              "arn:aws:ec2:eu-west-2:564784738291:route-table/rtb-034dbc5284e92440a",
								"id":               "rtb-034dbc5284e92440a",
								"owner_id":         "564784738291",
								"propagating_vgws": [],
								"route": [
									{
										"carrier_gateway_id":         "",
										"cidr_block":                 "0.0.0.0/0",
										"core_network_arn":           "",
										"destination_prefix_list_id": "",
										"egress_only_gateway_id":     "",
										"gateway_id":                 "igw-0adceafb47eb02050",
										"ipv6_cidr_block":            "",
										"local_gateway_id":           "",
										"nat_gateway_id":             "",
										"network_interface_id":       "",
										"transit_gateway_id":         "",
										"vpc_endpoint_id":            "",
										"vpc_peering_connection_id":  "",
									},
								],
								"tags": {
									"Name": "agent-vpc-public",
								},
								"tags_all": {
									"Name":      "agent-vpc-public",
									"Owner":     "Lucy",
									"Purpose":   "Test TFC Agents",
									"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
									"TTL":       "Ephemeral Workspace",
									"Terraform": "true",
									"Workspace": "tf-agent-pool",
								},
								"timeouts": null,
								"vpc_id":   "vpc-0475656c1f1de9f54",
							},
						},
						{
							"address":          "module.vpc.aws_route_table_association.public[0]",
							"index":            0,
							"mode":             "managed",
							"name":             "public",
							"provider_name":    "registry.terraform.io/hashicorp/aws",
							"schema_version":   0,
							"sensitive_values": {},
							"type":             "aws_route_table_association",
							"values": {
								"gateway_id":     "",
								"id":             "rtbassoc-0dab61280ace868b3",
								"route_table_id": "rtb-034dbc5284e92440a",
								"subnet_id":      "subnet-0b6efa305ddee152c",
								"timeouts":       null,
							},
						},
						{
							"address":          "module.vpc.aws_route_table_association.public[1]",
							"index":            1,
							"mode":             "managed",
							"name":             "public",
							"provider_name":    "registry.terraform.io/hashicorp/aws",
							"schema_version":   0,
							"sensitive_values": {},
							"type":             "aws_route_table_association",
							"values": {
								"gateway_id":     "",
								"id":             "rtbassoc-0fd62eb231eb0aef9",
								"route_table_id": "rtb-034dbc5284e92440a",
								"subnet_id":      "subnet-0892042fd9b88c443",
								"timeouts":       null,
							},
						},
						{
							"address":          "module.vpc.aws_route_table_association.public[2]",
							"index":            2,
							"mode":             "managed",
							"name":             "public",
							"provider_name":    "registry.terraform.io/hashicorp/aws",
							"schema_version":   0,
							"sensitive_values": {},
							"type":             "aws_route_table_association",
							"values": {
								"gateway_id":     "",
								"id":             "rtbassoc-0b1e1130e180dc2fe",
								"route_table_id": "rtb-034dbc5284e92440a",
								"subnet_id":      "subnet-0b74cf6d52312b7de",
								"timeouts":       null,
							},
						},
						{
							"address":        "module.vpc.aws_subnet.public[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "public",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"sensitive_values": {
								"tags":     {},
								"tags_all": {},
							},
							"type": "aws_subnet",
							"values": {
								"arn": "arn:aws:ec2:eu-west-2:564784738291:subnet/subnet-0b6efa305ddee152c",
								"assign_ipv6_address_on_creation":                false,
								"availability_zone":                              "eu-west-2a",
								"availability_zone_id":                           "euw2-az2",
								"cidr_block":                                     "10.0.101.0/24",
								"customer_owned_ipv4_pool":                       "",
								"enable_dns64":                                   false,
								"enable_lni_at_device_index":                     0,
								"enable_resource_name_dns_a_record_on_launch":    false,
								"enable_resource_name_dns_aaaa_record_on_launch": false,
								"id":                                  "subnet-0b6efa305ddee152c",
								"ipv6_cidr_block":                     "",
								"ipv6_cidr_block_association_id":      "",
								"ipv6_native":                         false,
								"map_customer_owned_ip_on_launch":     false,
								"map_public_ip_on_launch":             false,
								"outpost_arn":                         "",
								"owner_id":                            "564784738291",
								"private_dns_hostname_type_on_launch": "ip-name",
								"tags": {
									"Name": "agent-vpc-public-eu-west-2a",
								},
								"tags_all": {
									"Name":      "agent-vpc-public-eu-west-2a",
									"Owner":     "Lucy",
									"Purpose":   "Test TFC Agents",
									"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
									"TTL":       "Ephemeral Workspace",
									"Terraform": "true",
									"Workspace": "tf-agent-pool",
								},
								"timeouts": null,
								"vpc_id":   "vpc-0475656c1f1de9f54",
							},
						},
						{
							"address":        "module.vpc.aws_subnet.public[1]",
							"index":          1,
							"mode":           "managed",
							"name":           "public",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"sensitive_values": {
								"tags":     {},
								"tags_all": {},
							},
							"type": "aws_subnet",
							"values": {
								"arn": "arn:aws:ec2:eu-west-2:564784738291:subnet/subnet-0892042fd9b88c443",
								"assign_ipv6_address_on_creation":                false,
								"availability_zone":                              "eu-west-2b",
								"availability_zone_id":                           "euw2-az3",
								"cidr_block":                                     "10.0.102.0/24",
								"customer_owned_ipv4_pool":                       "",
								"enable_dns64":                                   false,
								"enable_lni_at_device_index":                     0,
								"enable_resource_name_dns_a_record_on_launch":    false,
								"enable_resource_name_dns_aaaa_record_on_launch": false,
								"id":                                  "subnet-0892042fd9b88c443",
								"ipv6_cidr_block":                     "",
								"ipv6_cidr_block_association_id":      "",
								"ipv6_native":                         false,
								"map_customer_owned_ip_on_launch":     false,
								"map_public_ip_on_launch":             false,
								"outpost_arn":                         "",
								"owner_id":                            "564784738291",
								"private_dns_hostname_type_on_launch": "ip-name",
								"tags": {
									"Name": "agent-vpc-public-eu-west-2b",
								},
								"tags_all": {
									"Name":      "agent-vpc-public-eu-west-2b",
									"Owner":     "Lucy",
									"Purpose":   "Test TFC Agents",
									"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
									"TTL":       "Ephemeral Workspace",
									"Terraform": "true",
									"Workspace": "tf-agent-pool",
								},
								"timeouts": null,
								"vpc_id":   "vpc-0475656c1f1de9f54",
							},
						},
						{
							"address":        "module.vpc.aws_subnet.public[2]",
							"index":          2,
							"mode":           "managed",
							"name":           "public",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"sensitive_values": {
								"tags":     {},
								"tags_all": {},
							},
							"type": "aws_subnet",
							"values": {
								"arn": "arn:aws:ec2:eu-west-2:564784738291:subnet/subnet-0b74cf6d52312b7de",
								"assign_ipv6_address_on_creation":                false,
								"availability_zone":                              "eu-west-2c",
								"availability_zone_id":                           "euw2-az1",
								"cidr_block":                                     "10.0.103.0/24",
								"customer_owned_ipv4_pool":                       "",
								"enable_dns64":                                   false,
								"enable_lni_at_device_index":                     0,
								"enable_resource_name_dns_a_record_on_launch":    false,
								"enable_resource_name_dns_aaaa_record_on_launch": false,
								"id":                                  "subnet-0b74cf6d52312b7de",
								"ipv6_cidr_block":                     "",
								"ipv6_cidr_block_association_id":      "",
								"ipv6_native":                         false,
								"map_customer_owned_ip_on_launch":     false,
								"map_public_ip_on_launch":             false,
								"outpost_arn":                         "",
								"owner_id":                            "564784738291",
								"private_dns_hostname_type_on_launch": "ip-name",
								"tags": {
									"Name": "agent-vpc-public-eu-west-2c",
								},
								"tags_all": {
									"Name":      "agent-vpc-public-eu-west-2c",
									"Owner":     "Lucy",
									"Purpose":   "Test TFC Agents",
									"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
									"TTL":       "Ephemeral Workspace",
									"Terraform": "true",
									"Workspace": "tf-agent-pool",
								},
								"timeouts": null,
								"vpc_id":   "vpc-0475656c1f1de9f54",
							},
						},
						{
							"address":        "module.vpc.aws_vpc.this[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "this",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"sensitive_values": {
								"tags":     {},
								"tags_all": {},
							},
							"type": "aws_vpc",
							"values": {
								"arn": "arn:aws:ec2:eu-west-2:564784738291:vpc/vpc-0475656c1f1de9f54",
								"assign_generated_ipv6_cidr_block":     false,
								"cidr_block":                           "10.0.0.0/16",
								"default_network_acl_id":               "acl-047c9b8117d436487",
								"default_route_table_id":               "rtb-087b68f71c1fbb116",
								"default_security_group_id":            "sg-02f76aa6f404e5bf1",
								"dhcp_options_id":                      "dopt-0bb7c3f05a56647e9",
								"enable_dns_hostnames":                 true,
								"enable_dns_support":                   true,
								"enable_network_address_usage_metrics": false,
								"id":                                   "vpc-0475656c1f1de9f54",
								"instance_tenancy":                     "default",
								"ipv4_ipam_pool_id":                    null,
								"ipv4_netmask_length":                  null,
								"ipv6_association_id":                  "",
								"ipv6_cidr_block":                      "",
								"ipv6_cidr_block_network_border_group": "",
								"ipv6_ipam_pool_id":                    "",
								"ipv6_netmask_length":                  0,
								"main_route_table_id":                  "rtb-087b68f71c1fbb116",
								"owner_id":                             "564784738291",
								"tags": {
									"Name": "agent-vpc",
								},
								"tags_all": {
									"Name":      "agent-vpc",
									"Owner":     "Lucy",
									"Purpose":   "Test TFC Agents",
									"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
									"TTL":       "Ephemeral Workspace",
									"Terraform": "true",
									"Workspace": "tf-agent-pool",
								},
							},
						},
					],
				},
			],
			"resources": [
				{
					"address":        "aws_instance.agent",
					"mode":           "managed",
					"name":           "agent",
					"provider_name":  "registry.terraform.io/hashicorp/aws",
					"schema_version": 1,
					"sensitive_values": {
						"capacity_reservation_specification": [
							{
								"capacity_reservation_target": [],
							},
						],
						"cpu_options": [
							{},
						],
						"credit_specification": [
							{},
						],
						"ebs_block_device": [],
						"enclave_options": [
							{},
						],
						"ephemeral_block_device":  [],
						"instance_market_options": [],
						"ipv6_addresses":          [],
						"launch_template":         [],
						"maintenance_options": [
							{},
						],
						"metadata_options": [
							{},
						],
						"network_interface": [],
						"private_dns_name_options": [
							{},
						],
						"root_block_device": [
							{
								"tags":     {},
								"tags_all": {},
							},
						],
						"secondary_private_ips": [],
						"security_groups":       [],
						"tags":                  {},
						"tags_all":              {},
						"user_data":             true,
						"vpc_security_group_ids": [
							false,
							false,
						],
					},
					"type": "aws_instance",
					"values": {
						"ami": "ami-0c41542cdc0e23561",
						"arn": "arn:aws:ec2:eu-west-2:564784738291:instance/i-092ab9a8394c1849a",
						"associate_public_ip_address": true,
						"availability_zone":           "eu-west-2a",
						"capacity_reservation_specification": [
							{
								"capacity_reservation_preference": "open",
								"capacity_reservation_target":     [],
							},
						],
						"cpu_core_count": 2,
						"cpu_options": [
							{
								"amd_sev_snp":      "",
								"core_count":       2,
								"threads_per_core": 1,
							},
						],
						"cpu_threads_per_core": 1,
						"credit_specification": [
							{
								"cpu_credits": "unlimited",
							},
						],
						"disable_api_stop":        false,
						"disable_api_termination": false,
						"ebs_block_device":        [],
						"ebs_optimized":           false,
						"enable_primary_ipv6":     null,
						"enclave_options": [
							{
								"enabled": false,
							},
						],
						"ephemeral_block_device":  [],
						"get_password_data":       false,
						"hibernation":             false,
						"host_id":                 "",
						"host_resource_group_arn": null,
						"iam_instance_profile":    "",
						"id": "i-092ab9a8394c1849a",
						"instance_initiated_shutdown_behavior": "stop",
						"instance_lifecycle":                   "",
						"instance_market_options":              [],
						"instance_state":                       "running",
						"instance_type":                        "t4g.nano",
						"ipv6_address_count":                   0,
						"ipv6_addresses":                       [],
						"key_name":                             "",
						"launch_template":                      [],
						"maintenance_options": [
							{
								"auto_recovery": "default",
							},
						],
						"metadata_options": [
							{
								"http_endpoint":               "enabled",
								"http_protocol_ipv6":          "disabled",
								"http_put_response_hop_limit": 2,
								"http_tokens":                 "required",
								"instance_metadata_tags":      "disabled",
							},
						],
						"monitoring":                   false,
						"network_interface":            [],
						"outpost_arn":                  "",
						"password_data":                "",
						"placement_group":              "",
						"placement_partition_number":   0,
						"primary_network_interface_id": "eni-0eeb14909b2c30913",
						"private_dns":                  "ip-10-0-101-104.eu-west-2.compute.internal",
						"private_dns_name_options": [
							{
								"enable_resource_name_dns_a_record":    false,
								"enable_resource_name_dns_aaaa_record": false,
								"hostname_type":                        "ip-name",
							},
						],
						"private_ip": "10.0.101.104",
						"public_dns": "ec2-13-40-68-231.eu-west-2.compute.amazonaws.com",
						"public_ip":  "13.40.68.231",
						"root_block_device": [
							{
								"delete_on_termination": true,
								"device_name":           "/dev/xvda",
								"encrypted":             false,
								"iops":                  3000,
								"kms_key_id":            "",
								"tags": {
									"Name":      "Test TFC Agents",
									"Owner":     "Lucy",
									"Purpose":   "Test TFC Agents",
									"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
									"TTL":       "Ephemeral Workspace",
									"Terraform": "true",
									"Workspace": "tf-agent-pool",
								},
								"tags_all": {
									"Name":      "Test TFC Agents",
									"Owner":     "Lucy",
									"Purpose":   "Test TFC Agents",
									"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
									"TTL":       "Ephemeral Workspace",
									"Terraform": "true",
									"Workspace": "tf-agent-pool",
								},
								"throughput":  125,
								"volume_id":   "vol-01205027ba0d5ab15",
								"volume_size": 8,
								"volume_type": "gp3",
							},
						],
						"secondary_private_ips":    [],
						"security_groups":          [],
						"source_dest_check":        true,
						"spot_instance_request_id": "",
						"subnet_id":                "subnet-0b6efa305ddee152c",
						"tags":                     {},
						"tags_all": {
							"Name":      "Test TFC Agents",
							"Owner":     "Lucy",
							"Purpose":   "Test TFC Agents",
							"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
							"TTL":       "Ephemeral Workspace",
							"Terraform": "true",
							"Workspace": "tf-agent-pool",
						},
						"tenancy":                     "default",
						"timeouts":                    null,
						"user_data":                   "REDACTED_SENSITIVE",
						"user_data_base64":            null,
						"user_data_replace_on_change": false,
						"volume_tags":                 null,
						"vpc_security_group_ids": [
							"sg-0241af841da648da0",
							"sg-077ef699c0cf2cd42",
						],
					},
				},
				{
					"address":        "aws_security_group.ec2_instance_connect",
					"mode":           "managed",
					"name":           "ec2_instance_connect",
					"provider_name":  "registry.terraform.io/hashicorp/aws",
					"schema_version": 1,
					"sensitive_values": {
						"egress": [],
						"ingress": [
							{
								"cidr_blocks": [
									false,
								],
								"ipv6_cidr_blocks": [
									false,
								],
								"prefix_list_ids": [],
								"security_groups": [],
							},
						],
						"tags":     {},
						"tags_all": {},
					},
					"type": "aws_security_group",
					"values": {
						"arn":         "arn:aws:ec2:eu-west-2:564784738291:security-group/sg-0241af841da648da0",
						"description": "Allow EC2 Instance Connect to access this host",
						"egress":      [],
						"id":          "sg-0241af841da648da0",
						"ingress": [
							{
								"cidr_blocks": [
									"3.8.37.24/29",
								],
								"description": "",
								"from_port":   22,
								"ipv6_cidr_blocks": [
									"2a05:d01c:4ac:3100::/56",
								],
								"prefix_list_ids": [],
								"protocol":        "tcp",
								"security_groups": [],
								"self":            false,
								"to_port":         22,
							},
						],
						"name":                   "ec2_instance_connect",
						"name_prefix":            "",
						"owner_id":               "564784738291",
						"revoke_rules_on_delete": false,
						"tags": {
							"CreateDate": "2025-03-25-23-23-16",
							"SyncToken":  "1742944996",
						},
						"tags_all": {
							"CreateDate": "2025-03-25-23-23-16",
							"Name":       "Test TFC Agents",
							"Owner":      "Lucy",
							"Purpose":    "Test TFC Agents",
							"Source":     "https://github.com/hashi-strawb/tf-agent-pool",
							"SyncToken":  "1742944996",
							"TTL":        "Ephemeral Workspace",
							"Terraform":  "true",
							"Workspace":  "tf-agent-pool",
						},
						"timeouts": null,
						"vpc_id":   "vpc-0475656c1f1de9f54",
					},
				},
				{
					"address":        "aws_security_group.outbound_http",
					"mode":           "managed",
					"name":           "outbound_http",
					"provider_name":  "registry.terraform.io/hashicorp/aws",
					"schema_version": 1,
					"sensitive_values": {
						"egress": [
							{
								"cidr_blocks": [
									false,
								],
								"ipv6_cidr_blocks": [
									false,
								],
								"prefix_list_ids": [],
								"security_groups": [],
							},
							{
								"cidr_blocks": [
									false,
								],
								"ipv6_cidr_blocks": [
									false,
								],
								"prefix_list_ids": [],
								"security_groups": [],
							},
						],
						"ingress":  [],
						"tags":     {},
						"tags_all": {},
					},
					"type": "aws_security_group",
					"values": {
						"arn":         "arn:aws:ec2:eu-west-2:564784738291:security-group/sg-077ef699c0cf2cd42",
						"description": "Allow outbound HTTP(S) access to everywhere",
						"egress": [
							{
								"cidr_blocks": [
									"0.0.0.0/0",
								],
								"description": "",
								"from_port":   443,
								"ipv6_cidr_blocks": [
									"::/0",
								],
								"prefix_list_ids": [],
								"protocol":        "tcp",
								"security_groups": [],
								"self":            false,
								"to_port":         443,
							},
							{
								"cidr_blocks": [
									"0.0.0.0/0",
								],
								"description": "",
								"from_port":   80,
								"ipv6_cidr_blocks": [
									"::/0",
								],
								"prefix_list_ids": [],
								"protocol":        "tcp",
								"security_groups": [],
								"self":            false,
								"to_port":         80,
							},
						],
						"id":                     "sg-077ef699c0cf2cd42",
						"ingress":                [],
						"name":                   "outbound_http",
						"name_prefix":            "",
						"owner_id":               "564784738291",
						"revoke_rules_on_delete": false,
						"tags": {},
						"tags_all": {
							"Name":      "Test TFC Agents",
							"Owner":     "Lucy",
							"Purpose":   "Test TFC Agents",
							"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
							"TTL":       "Ephemeral Workspace",
							"Terraform": "true",
							"Workspace": "tf-agent-pool",
						},
						"timeouts": null,
						"vpc_id":   "vpc-0475656c1f1de9f54",
					},
				},
				{
					"address":          "null_resource.exec",
					"mode":             "managed",
					"name":             "exec",
					"provider_name":    "registry.terraform.io/hashicorp/null",
					"schema_version":   0,
					"sensitive_values": {},
					"type":             "null_resource",
					"values": {
						"triggers": null,
					},
				},
			],
		},
	},
	"prior_state": {
		"format_version":    "1.0",
		"terraform_version": "1.11.2",
		"values": {
			"outputs": {
				"ec2_instance_connect_url": {
					"sensitive": false,
					"value":     "https://eu-west-2.console.aws.amazon.com/ec2/home?region=eu-west-2#ConnectToInstance:instanceId=i-092ab9a8394c1849a",
				},
			},
			"root_module": {
				"child_modules": [
					{
						"address": "module.vpc",
						"resources": [
							{
								"address": "module.vpc.aws_default_network_acl.this[0]",
								"depends_on": [
									"module.vpc.aws_vpc.this",
								],
								"index":          0,
								"mode":           "managed",
								"name":           "this",
								"provider_name":  "registry.terraform.io/hashicorp/aws",
								"schema_version": 0,
								"sensitive_values": {
									"egress": [
										{},
										{},
									],
									"ingress": [
										{},
										{},
									],
									"subnet_ids": [
										false,
										false,
										false,
									],
									"tags":     {},
									"tags_all": {},
								},
								"type": "aws_default_network_acl",
								"values": {
									"arn": "arn:aws:ec2:eu-west-2:564784738291:network-acl/acl-047c9b8117d436487",
									"default_network_acl_id": "acl-047c9b8117d436487",
									"egress": [
										{
											"action":          "allow",
											"cidr_block":      "",
											"from_port":       0,
											"icmp_code":       0,
											"icmp_type":       0,
											"ipv6_cidr_block": "::/0",
											"protocol":        "-1",
											"rule_no":         101,
											"to_port":         0,
										},
										{
											"action":          "allow",
											"cidr_block":      "0.0.0.0/0",
											"from_port":       0,
											"icmp_code":       0,
											"icmp_type":       0,
											"ipv6_cidr_block": "",
											"protocol":        "-1",
											"rule_no":         100,
											"to_port":         0,
										},
									],
									"id": "acl-047c9b8117d436487",
									"ingress": [
										{
											"action":          "allow",
											"cidr_block":      "",
											"from_port":       0,
											"icmp_code":       0,
											"icmp_type":       0,
											"ipv6_cidr_block": "::/0",
											"protocol":        "-1",
											"rule_no":         101,
											"to_port":         0,
										},
										{
											"action":          "allow",
											"cidr_block":      "0.0.0.0/0",
											"from_port":       0,
											"icmp_code":       0,
											"icmp_type":       0,
											"ipv6_cidr_block": "",
											"protocol":        "-1",
											"rule_no":         100,
											"to_port":         0,
										},
									],
									"owner_id": "564784738291",
									"subnet_ids": [
										"subnet-0892042fd9b88c443",
										"subnet-0b6efa305ddee152c",
										"subnet-0b74cf6d52312b7de",
									],
									"tags": {
										"Name": "agent-vpc-default",
									},
									"tags_all": {
										"Name":      "agent-vpc-default",
										"Owner":     "Lucy",
										"Purpose":   "Test TFC Agents",
										"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
										"TTL":       "Ephemeral Workspace",
										"Terraform": "true",
										"Workspace": "tf-agent-pool",
									},
									"vpc_id": "vpc-0475656c1f1de9f54",
								},
							},
							{
								"address": "module.vpc.aws_default_route_table.default[0]",
								"depends_on": [
									"module.vpc.aws_vpc.this",
								],
								"index":          0,
								"mode":           "managed",
								"name":           "default",
								"provider_name":  "registry.terraform.io/hashicorp/aws",
								"schema_version": 0,
								"sensitive_values": {
									"propagating_vgws": [],
									"route":            [],
									"tags":             {},
									"tags_all":         {},
									"timeouts":         {},
								},
								"type": "aws_default_route_table",
								"values": {
									"arn": "arn:aws:ec2:eu-west-2:564784738291:route-table/rtb-087b68f71c1fbb116",
									"default_route_table_id": "rtb-087b68f71c1fbb116",
									"id":               "rtb-087b68f71c1fbb116",
									"owner_id":         "564784738291",
									"propagating_vgws": [],
									"route":            [],
									"tags": {
										"Name": "agent-vpc-default",
									},
									"tags_all": {
										"Name":      "agent-vpc-default",
										"Owner":     "Lucy",
										"Purpose":   "Test TFC Agents",
										"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
										"TTL":       "Ephemeral Workspace",
										"Terraform": "true",
										"Workspace": "tf-agent-pool",
									},
									"timeouts": {
										"create": "5m",
										"update": "5m",
									},
									"vpc_id": "vpc-0475656c1f1de9f54",
								},
							},
							{
								"address": "module.vpc.aws_default_security_group.this[0]",
								"depends_on": [
									"module.vpc.aws_vpc.this",
								],
								"index":          0,
								"mode":           "managed",
								"name":           "this",
								"provider_name":  "registry.terraform.io/hashicorp/aws",
								"schema_version": 1,
								"sensitive_values": {
									"egress":   [],
									"ingress":  [],
									"tags":     {},
									"tags_all": {},
								},
								"type": "aws_default_security_group",
								"values": {
									"arn":                    "arn:aws:ec2:eu-west-2:564784738291:security-group/sg-02f76aa6f404e5bf1",
									"description":            "default VPC security group",
									"egress":                 [],
									"id":                     "sg-02f76aa6f404e5bf1",
									"ingress":                [],
									"name":                   "default",
									"name_prefix":            "",
									"owner_id":               "564784738291",
									"revoke_rules_on_delete": false,
									"tags": {
										"Name": "agent-vpc-default",
									},
									"tags_all": {
										"Name":      "agent-vpc-default",
										"Owner":     "Lucy",
										"Purpose":   "Test TFC Agents",
										"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
										"TTL":       "Ephemeral Workspace",
										"Terraform": "true",
										"Workspace": "tf-agent-pool",
									},
									"vpc_id": "vpc-0475656c1f1de9f54",
								},
							},
							{
								"address": "module.vpc.aws_internet_gateway.this[0]",
								"depends_on": [
									"module.vpc.aws_vpc.this",
									"module.vpc.aws_vpc_ipv4_cidr_block_association.this",
								],
								"index":          0,
								"mode":           "managed",
								"name":           "this",
								"provider_name":  "registry.terraform.io/hashicorp/aws",
								"schema_version": 0,
								"sensitive_values": {
									"tags":     {},
									"tags_all": {},
								},
								"type": "aws_internet_gateway",
								"values": {
									"arn":      "arn:aws:ec2:eu-west-2:564784738291:internet-gateway/igw-0adceafb47eb02050",
									"id":       "igw-0adceafb47eb02050",
									"owner_id": "564784738291",
									"tags": {
										"Name": "agent-vpc",
									},
									"tags_all": {
										"Name":      "agent-vpc",
										"Owner":     "Lucy",
										"Purpose":   "Test TFC Agents",
										"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
										"TTL":       "Ephemeral Workspace",
										"Terraform": "true",
										"Workspace": "tf-agent-pool",
									},
									"timeouts": null,
									"vpc_id":   "vpc-0475656c1f1de9f54",
								},
							},
							{
								"address": "module.vpc.aws_route.public_internet_gateway[0]",
								"depends_on": [
									"data.aws_availability_zones.available",
									"module.vpc.aws_internet_gateway.this",
									"module.vpc.aws_route_table.public",
									"module.vpc.aws_vpc.this",
									"module.vpc.aws_vpc_ipv4_cidr_block_association.this",
								],
								"index":          0,
								"mode":           "managed",
								"name":           "public_internet_gateway",
								"provider_name":  "registry.terraform.io/hashicorp/aws",
								"schema_version": 0,
								"sensitive_values": {
									"timeouts": {},
								},
								"type": "aws_route",
								"values": {
									"carrier_gateway_id":          "",
									"core_network_arn":            "",
									"destination_cidr_block":      "0.0.0.0/0",
									"destination_ipv6_cidr_block": "",
									"destination_prefix_list_id":  "",
									"egress_only_gateway_id":      "",
									"gateway_id":                  "igw-0adceafb47eb02050",
									"id":                          "r-rtb-034dbc5284e92440a1080289494",
									"instance_id":                 "",
									"instance_owner_id":           "",
									"local_gateway_id":            "",
									"nat_gateway_id":              "",
									"network_interface_id":        "",
									"origin":                      "CreateRoute",
									"route_table_id":              "rtb-034dbc5284e92440a",
									"state":                       "active",
									"timeouts": {
										"create": "5m",
										"delete": null,
										"update": null,
									},
									"transit_gateway_id":        "",
									"vpc_endpoint_id":           "",
									"vpc_peering_connection_id": "",
								},
							},
							{
								"address": "module.vpc.aws_route_table.public[0]",
								"depends_on": [
									"data.aws_availability_zones.available",
									"module.vpc.aws_vpc.this",
									"module.vpc.aws_vpc_ipv4_cidr_block_association.this",
								],
								"index":          0,
								"mode":           "managed",
								"name":           "public",
								"provider_name":  "registry.terraform.io/hashicorp/aws",
								"schema_version": 0,
								"sensitive_values": {
									"propagating_vgws": [],
									"route": [
										{},
									],
									"tags":     {},
									"tags_all": {},
								},
								"type": "aws_route_table",
								"values": {
									"arn":              "arn:aws:ec2:eu-west-2:564784738291:route-table/rtb-034dbc5284e92440a",
									"id":               "rtb-034dbc5284e92440a",
									"owner_id":         "564784738291",
									"propagating_vgws": [],
									"route": [
										{
											"carrier_gateway_id":         "",
											"cidr_block":                 "0.0.0.0/0",
											"core_network_arn":           "",
											"destination_prefix_list_id": "",
											"egress_only_gateway_id":     "",
											"gateway_id":                 "igw-0adceafb47eb02050",
											"ipv6_cidr_block":            "",
											"local_gateway_id":           "",
											"nat_gateway_id":             "",
											"network_interface_id":       "",
											"transit_gateway_id":         "",
											"vpc_endpoint_id":            "",
											"vpc_peering_connection_id":  "",
										},
									],
									"tags": {
										"Name": "agent-vpc-public",
									},
									"tags_all": {
										"Name":      "agent-vpc-public",
										"Owner":     "Lucy",
										"Purpose":   "Test TFC Agents",
										"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
										"TTL":       "Ephemeral Workspace",
										"Terraform": "true",
										"Workspace": "tf-agent-pool",
									},
									"timeouts": null,
									"vpc_id":   "vpc-0475656c1f1de9f54",
								},
							},
							{
								"address": "module.vpc.aws_route_table_association.public[0]",
								"depends_on": [
									"data.aws_availability_zones.available",
									"module.vpc.aws_route_table.public",
									"module.vpc.aws_subnet.public",
									"module.vpc.aws_vpc.this",
									"module.vpc.aws_vpc_ipv4_cidr_block_association.this",
								],
								"index":            0,
								"mode":             "managed",
								"name":             "public",
								"provider_name":    "registry.terraform.io/hashicorp/aws",
								"schema_version":   0,
								"sensitive_values": {},
								"type":             "aws_route_table_association",
								"values": {
									"gateway_id":     "",
									"id":             "rtbassoc-0dab61280ace868b3",
									"route_table_id": "rtb-034dbc5284e92440a",
									"subnet_id":      "subnet-0b6efa305ddee152c",
									"timeouts":       null,
								},
							},
							{
								"address": "module.vpc.aws_route_table_association.public[1]",
								"depends_on": [
									"data.aws_availability_zones.available",
									"module.vpc.aws_route_table.public",
									"module.vpc.aws_subnet.public",
									"module.vpc.aws_vpc.this",
									"module.vpc.aws_vpc_ipv4_cidr_block_association.this",
								],
								"index":            1,
								"mode":             "managed",
								"name":             "public",
								"provider_name":    "registry.terraform.io/hashicorp/aws",
								"schema_version":   0,
								"sensitive_values": {},
								"type":             "aws_route_table_association",
								"values": {
									"gateway_id":     "",
									"id":             "rtbassoc-0fd62eb231eb0aef9",
									"route_table_id": "rtb-034dbc5284e92440a",
									"subnet_id":      "subnet-0892042fd9b88c443",
									"timeouts":       null,
								},
							},
							{
								"address": "module.vpc.aws_route_table_association.public[2]",
								"depends_on": [
									"data.aws_availability_zones.available",
									"module.vpc.aws_route_table.public",
									"module.vpc.aws_subnet.public",
									"module.vpc.aws_vpc.this",
									"module.vpc.aws_vpc_ipv4_cidr_block_association.this",
								],
								"index":            2,
								"mode":             "managed",
								"name":             "public",
								"provider_name":    "registry.terraform.io/hashicorp/aws",
								"schema_version":   0,
								"sensitive_values": {},
								"type":             "aws_route_table_association",
								"values": {
									"gateway_id":     "",
									"id":             "rtbassoc-0b1e1130e180dc2fe",
									"route_table_id": "rtb-034dbc5284e92440a",
									"subnet_id":      "subnet-0b74cf6d52312b7de",
									"timeouts":       null,
								},
							},
							{
								"address": "module.vpc.aws_subnet.public[0]",
								"depends_on": [
									"data.aws_availability_zones.available",
									"module.vpc.aws_vpc.this",
									"module.vpc.aws_vpc_ipv4_cidr_block_association.this",
								],
								"index":          0,
								"mode":           "managed",
								"name":           "public",
								"provider_name":  "registry.terraform.io/hashicorp/aws",
								"schema_version": 1,
								"sensitive_values": {
									"tags":     {},
									"tags_all": {},
								},
								"type": "aws_subnet",
								"values": {
									"arn": "arn:aws:ec2:eu-west-2:564784738291:subnet/subnet-0b6efa305ddee152c",
									"assign_ipv6_address_on_creation":                false,
									"availability_zone":                              "eu-west-2a",
									"availability_zone_id":                           "euw2-az2",
									"cidr_block":                                     "10.0.101.0/24",
									"customer_owned_ipv4_pool":                       "",
									"enable_dns64":                                   false,
									"enable_lni_at_device_index":                     0,
									"enable_resource_name_dns_a_record_on_launch":    false,
									"enable_resource_name_dns_aaaa_record_on_launch": false,
									"id":                                  "subnet-0b6efa305ddee152c",
									"ipv6_cidr_block":                     "",
									"ipv6_cidr_block_association_id":      "",
									"ipv6_native":                         false,
									"map_customer_owned_ip_on_launch":     false,
									"map_public_ip_on_launch":             false,
									"outpost_arn":                         "",
									"owner_id":                            "564784738291",
									"private_dns_hostname_type_on_launch": "ip-name",
									"tags": {
										"Name": "agent-vpc-public-eu-west-2a",
									},
									"tags_all": {
										"Name":      "agent-vpc-public-eu-west-2a",
										"Owner":     "Lucy",
										"Purpose":   "Test TFC Agents",
										"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
										"TTL":       "Ephemeral Workspace",
										"Terraform": "true",
										"Workspace": "tf-agent-pool",
									},
									"timeouts": null,
									"vpc_id":   "vpc-0475656c1f1de9f54",
								},
							},
							{
								"address": "module.vpc.aws_subnet.public[1]",
								"depends_on": [
									"data.aws_availability_zones.available",
									"module.vpc.aws_vpc.this",
									"module.vpc.aws_vpc_ipv4_cidr_block_association.this",
								],
								"index":          1,
								"mode":           "managed",
								"name":           "public",
								"provider_name":  "registry.terraform.io/hashicorp/aws",
								"schema_version": 1,
								"sensitive_values": {
									"tags":     {},
									"tags_all": {},
								},
								"type": "aws_subnet",
								"values": {
									"arn": "arn:aws:ec2:eu-west-2:564784738291:subnet/subnet-0892042fd9b88c443",
									"assign_ipv6_address_on_creation":                false,
									"availability_zone":                              "eu-west-2b",
									"availability_zone_id":                           "euw2-az3",
									"cidr_block":                                     "10.0.102.0/24",
									"customer_owned_ipv4_pool":                       "",
									"enable_dns64":                                   false,
									"enable_lni_at_device_index":                     0,
									"enable_resource_name_dns_a_record_on_launch":    false,
									"enable_resource_name_dns_aaaa_record_on_launch": false,
									"id":                                  "subnet-0892042fd9b88c443",
									"ipv6_cidr_block":                     "",
									"ipv6_cidr_block_association_id":      "",
									"ipv6_native":                         false,
									"map_customer_owned_ip_on_launch":     false,
									"map_public_ip_on_launch":             false,
									"outpost_arn":                         "",
									"owner_id":                            "564784738291",
									"private_dns_hostname_type_on_launch": "ip-name",
									"tags": {
										"Name": "agent-vpc-public-eu-west-2b",
									},
									"tags_all": {
										"Name":      "agent-vpc-public-eu-west-2b",
										"Owner":     "Lucy",
										"Purpose":   "Test TFC Agents",
										"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
										"TTL":       "Ephemeral Workspace",
										"Terraform": "true",
										"Workspace": "tf-agent-pool",
									},
									"timeouts": null,
									"vpc_id":   "vpc-0475656c1f1de9f54",
								},
							},
							{
								"address": "module.vpc.aws_subnet.public[2]",
								"depends_on": [
									"data.aws_availability_zones.available",
									"module.vpc.aws_vpc.this",
									"module.vpc.aws_vpc_ipv4_cidr_block_association.this",
								],
								"index":          2,
								"mode":           "managed",
								"name":           "public",
								"provider_name":  "registry.terraform.io/hashicorp/aws",
								"schema_version": 1,
								"sensitive_values": {
									"tags":     {},
									"tags_all": {},
								},
								"type": "aws_subnet",
								"values": {
									"arn": "arn:aws:ec2:eu-west-2:564784738291:subnet/subnet-0b74cf6d52312b7de",
									"assign_ipv6_address_on_creation":                false,
									"availability_zone":                              "eu-west-2c",
									"availability_zone_id":                           "euw2-az1",
									"cidr_block":                                     "10.0.103.0/24",
									"customer_owned_ipv4_pool":                       "",
									"enable_dns64":                                   false,
									"enable_lni_at_device_index":                     0,
									"enable_resource_name_dns_a_record_on_launch":    false,
									"enable_resource_name_dns_aaaa_record_on_launch": false,
									"id":                                  "subnet-0b74cf6d52312b7de",
									"ipv6_cidr_block":                     "",
									"ipv6_cidr_block_association_id":      "",
									"ipv6_native":                         false,
									"map_customer_owned_ip_on_launch":     false,
									"map_public_ip_on_launch":             false,
									"outpost_arn":                         "",
									"owner_id":                            "564784738291",
									"private_dns_hostname_type_on_launch": "ip-name",
									"tags": {
										"Name": "agent-vpc-public-eu-west-2c",
									},
									"tags_all": {
										"Name":      "agent-vpc-public-eu-west-2c",
										"Owner":     "Lucy",
										"Purpose":   "Test TFC Agents",
										"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
										"TTL":       "Ephemeral Workspace",
										"Terraform": "true",
										"Workspace": "tf-agent-pool",
									},
									"timeouts": null,
									"vpc_id":   "vpc-0475656c1f1de9f54",
								},
							},
							{
								"address":        "module.vpc.aws_vpc.this[0]",
								"index":          0,
								"mode":           "managed",
								"name":           "this",
								"provider_name":  "registry.terraform.io/hashicorp/aws",
								"schema_version": 1,
								"sensitive_values": {
									"tags":     {},
									"tags_all": {},
								},
								"type": "aws_vpc",
								"values": {
									"arn": "arn:aws:ec2:eu-west-2:564784738291:vpc/vpc-0475656c1f1de9f54",
									"assign_generated_ipv6_cidr_block":     false,
									"cidr_block":                           "10.0.0.0/16",
									"default_network_acl_id":               "acl-047c9b8117d436487",
									"default_route_table_id":               "rtb-087b68f71c1fbb116",
									"default_security_group_id":            "sg-02f76aa6f404e5bf1",
									"dhcp_options_id":                      "dopt-0bb7c3f05a56647e9",
									"enable_dns_hostnames":                 true,
									"enable_dns_support":                   true,
									"enable_network_address_usage_metrics": false,
									"id":                                   "vpc-0475656c1f1de9f54",
									"instance_tenancy":                     "default",
									"ipv4_ipam_pool_id":                    null,
									"ipv4_netmask_length":                  null,
									"ipv6_association_id":                  "",
									"ipv6_cidr_block":                      "",
									"ipv6_cidr_block_network_border_group": "",
									"ipv6_ipam_pool_id":                    "",
									"ipv6_netmask_length":                  0,
									"main_route_table_id":                  "rtb-087b68f71c1fbb116",
									"owner_id":                             "564784738291",
									"tags": {
										"Name": "agent-vpc",
									},
									"tags_all": {
										"Name":      "agent-vpc",
										"Owner":     "Lucy",
										"Purpose":   "Test TFC Agents",
										"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
										"TTL":       "Ephemeral Workspace",
										"Terraform": "true",
										"Workspace": "tf-agent-pool",
									},
								},
							},
						],
					},
				],
				"resources": [
					{
						"address":        "data.aws_availability_zones.available",
						"mode":           "data",
						"name":           "available",
						"provider_name":  "registry.terraform.io/hashicorp/aws",
						"schema_version": 0,
						"sensitive_values": {
							"group_names": [
								false,
							],
							"names": [
								false,
								false,
								false,
							],
							"zone_ids": [
								false,
								false,
								false,
							],
						},
						"type": "aws_availability_zones",
						"values": {
							"all_availability_zones": null,
							"exclude_names":          null,
							"exclude_zone_ids":       null,
							"filter":                 null,
							"group_names": [
								"eu-west-2-zg-1",
							],
							"id": "eu-west-2",
							"names": [
								"eu-west-2a",
								"eu-west-2b",
								"eu-west-2c",
							],
							"state":    "available",
							"timeouts": null,
							"zone_ids": [
								"euw2-az2",
								"euw2-az3",
								"euw2-az1",
							],
						},
					},
					{
						"address":        "data.aws_ip_ranges.ec2_instance_connect",
						"mode":           "data",
						"name":           "ec2_instance_connect",
						"provider_name":  "registry.terraform.io/hashicorp/aws",
						"schema_version": 0,
						"sensitive_values": {
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [
								false,
							],
							"regions": [
								false,
							],
							"services": [
								false,
							],
						},
						"type": "aws_ip_ranges",
						"values": {
							"cidr_blocks": [
								"3.8.37.24/29",
							],
							"create_date": "2025-03-25-23-23-16",
							"id":          "1742944996",
							"ipv6_cidr_blocks": [
								"2a05:d01c:4ac:3100::/56",
							],
							"regions": [
								"eu-west-2",
							],
							"services": [
								"ec2_instance_connect",
							],
							"sync_token": 1742944996,
							"url":        "https://ip-ranges.amazonaws.com/ip-ranges.json",
						},
					},
					{
						"address":          "data.aws_region.current",
						"mode":             "data",
						"name":             "current",
						"provider_name":    "registry.terraform.io/hashicorp/aws",
						"schema_version":   0,
						"sensitive_values": {},
						"type":             "aws_region",
						"values": {
							"description": "Europe (London)",
							"endpoint":    "ec2.eu-west-2.amazonaws.com",
							"id":          "eu-west-2",
							"name":        "eu-west-2",
						},
					},
					{
						"address":        "data.tfe_ip_ranges.addresses",
						"mode":           "data",
						"name":           "addresses",
						"provider_name":  "registry.terraform.io/hashicorp/tfe",
						"schema_version": 0,
						"sensitive_values": {
							"api": [
								false,
								false,
							],
							"notifications": [
								false,
								false,
								false,
								false,
								false,
								false,
							],
							"sentinel": [
								false,
								false,
								false,
								false,
								false,
								false,
							],
							"vcs": [
								false,
								false,
								false,
								false,
								false,
								false,
							],
						},
						"type": "tfe_ip_ranges",
						"values": {
							"api": [
								"75.2.98.97/32",
								"99.83.150.238/32",
							],
							"id": "ip-ranges",
							"notifications": [
								"52.86.200.106/32",
								"52.86.201.227/32",
								"52.70.186.109/32",
								"44.236.246.186/32",
								"54.185.161.84/32",
								"44.238.78.236/32",
							],
							"sentinel": [
								"52.86.200.106/32",
								"52.86.201.227/32",
								"52.70.186.109/32",
								"44.236.246.186/32",
								"54.185.161.84/32",
								"44.238.78.236/32",
							],
							"vcs": [
								"52.86.200.106/32",
								"52.86.201.227/32",
								"52.70.186.109/32",
								"44.236.246.186/32",
								"54.185.161.84/32",
								"44.238.78.236/32",
							],
						},
					},
					{
						"address": "aws_instance.agent",
						"depends_on": [
							"aws_security_group.ec2_instance_connect",
							"aws_security_group.outbound_http",
							"data.aws_availability_zones.available",
							"data.aws_ip_ranges.ec2_instance_connect",
							"data.aws_region.current",
							"module.vpc.aws_subnet.public",
							"module.vpc.aws_vpc.this",
							"module.vpc.aws_vpc_ipv4_cidr_block_association.this",
						],
						"mode":           "managed",
						"name":           "agent",
						"provider_name":  "registry.terraform.io/hashicorp/aws",
						"schema_version": 1,
						"sensitive_values": {
							"capacity_reservation_specification": [
								{
									"capacity_reservation_target": [],
								},
							],
							"cpu_options": [
								{},
							],
							"credit_specification": [
								{},
							],
							"ebs_block_device": [],
							"enclave_options": [
								{},
							],
							"ephemeral_block_device":  [],
							"instance_market_options": [],
							"ipv6_addresses":          [],
							"launch_template":         [],
							"maintenance_options": [
								{},
							],
							"metadata_options": [
								{},
							],
							"network_interface": [],
							"private_dns_name_options": [
								{},
							],
							"root_block_device": [
								{
									"tags":     {},
									"tags_all": {},
								},
							],
							"secondary_private_ips": [],
							"security_groups":       [],
							"tags":                  {},
							"tags_all":              {},
							"user_data":             true,
							"vpc_security_group_ids": [
								false,
								false,
							],
						},
						"type": "aws_instance",
						"values": {
							"ami": "ami-0c41542cdc0e23561",
							"arn": "arn:aws:ec2:eu-west-2:564784738291:instance/i-092ab9a8394c1849a",
							"associate_public_ip_address": true,
							"availability_zone":           "eu-west-2a",
							"capacity_reservation_specification": [
								{
									"capacity_reservation_preference": "open",
									"capacity_reservation_target":     [],
								},
							],
							"cpu_core_count": 2,
							"cpu_options": [
								{
									"amd_sev_snp":      "",
									"core_count":       2,
									"threads_per_core": 1,
								},
							],
							"cpu_threads_per_core": 1,
							"credit_specification": [
								{
									"cpu_credits": "unlimited",
								},
							],
							"disable_api_stop":        false,
							"disable_api_termination": false,
							"ebs_block_device":        [],
							"ebs_optimized":           false,
							"enable_primary_ipv6":     null,
							"enclave_options": [
								{
									"enabled": false,
								},
							],
							"ephemeral_block_device":  [],
							"get_password_data":       false,
							"hibernation":             false,
							"host_id":                 "",
							"host_resource_group_arn": null,
							"iam_instance_profile":    "",
							"id": "i-092ab9a8394c1849a",
							"instance_initiated_shutdown_behavior": "stop",
							"instance_lifecycle":                   "",
							"instance_market_options":              [],
							"instance_state":                       "running",
							"instance_type":                        "t4g.nano",
							"ipv6_address_count":                   0,
							"ipv6_addresses":                       [],
							"key_name":                             "",
							"launch_template":                      [],
							"maintenance_options": [
								{
									"auto_recovery": "default",
								},
							],
							"metadata_options": [
								{
									"http_endpoint":               "enabled",
									"http_protocol_ipv6":          "disabled",
									"http_put_response_hop_limit": 2,
									"http_tokens":                 "required",
									"instance_metadata_tags":      "disabled",
								},
							],
							"monitoring":                   false,
							"network_interface":            [],
							"outpost_arn":                  "",
							"password_data":                "",
							"placement_group":              "",
							"placement_partition_number":   0,
							"primary_network_interface_id": "eni-0eeb14909b2c30913",
							"private_dns":                  "ip-10-0-101-104.eu-west-2.compute.internal",
							"private_dns_name_options": [
								{
									"enable_resource_name_dns_a_record":    false,
									"enable_resource_name_dns_aaaa_record": false,
									"hostname_type":                        "ip-name",
								},
							],
							"private_ip": "10.0.101.104",
							"public_dns": "ec2-13-40-68-231.eu-west-2.compute.amazonaws.com",
							"public_ip":  "13.40.68.231",
							"root_block_device": [
								{
									"delete_on_termination": true,
									"device_name":           "/dev/xvda",
									"encrypted":             false,
									"iops":                  3000,
									"kms_key_id":            "",
									"tags": {
										"Name":      "Test TFC Agents",
										"Owner":     "Lucy",
										"Purpose":   "Test TFC Agents",
										"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
										"TTL":       "Ephemeral Workspace",
										"Terraform": "true",
										"Workspace": "tf-agent-pool",
									},
									"tags_all": {
										"Name":      "Test TFC Agents",
										"Owner":     "Lucy",
										"Purpose":   "Test TFC Agents",
										"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
										"TTL":       "Ephemeral Workspace",
										"Terraform": "true",
										"Workspace": "tf-agent-pool",
									},
									"throughput":  125,
									"volume_id":   "vol-01205027ba0d5ab15",
									"volume_size": 8,
									"volume_type": "gp3",
								},
							],
							"secondary_private_ips":    [],
							"security_groups":          [],
							"source_dest_check":        true,
							"spot_instance_request_id": "",
							"subnet_id":                "subnet-0b6efa305ddee152c",
							"tags":                     {},
							"tags_all": {
								"Name":      "Test TFC Agents",
								"Owner":     "Lucy",
								"Purpose":   "Test TFC Agents",
								"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
								"TTL":       "Ephemeral Workspace",
								"Terraform": "true",
								"Workspace": "tf-agent-pool",
							},
							"tenancy":                     "default",
							"timeouts":                    null,
							"user_data":                   "REDACTED_SENSITIVE",
							"user_data_base64":            null,
							"user_data_replace_on_change": false,
							"volume_tags":                 null,
							"vpc_security_group_ids": [
								"sg-0241af841da648da0",
								"sg-077ef699c0cf2cd42",
							],
						},
					},
					{
						"address": "aws_security_group.ec2_instance_connect",
						"depends_on": [
							"data.aws_ip_ranges.ec2_instance_connect",
							"data.aws_region.current",
							"module.vpc.aws_vpc.this",
						],
						"mode":           "managed",
						"name":           "ec2_instance_connect",
						"provider_name":  "registry.terraform.io/hashicorp/aws",
						"schema_version": 1,
						"sensitive_values": {
							"egress": [],
							"ingress": [
								{
									"cidr_blocks": [
										false,
									],
									"ipv6_cidr_blocks": [
										false,
									],
									"prefix_list_ids": [],
									"security_groups": [],
								},
							],
							"tags":     {},
							"tags_all": {},
						},
						"type": "aws_security_group",
						"values": {
							"arn":         "arn:aws:ec2:eu-west-2:564784738291:security-group/sg-0241af841da648da0",
							"description": "Allow EC2 Instance Connect to access this host",
							"egress":      [],
							"id":          "sg-0241af841da648da0",
							"ingress": [
								{
									"cidr_blocks": [
										"3.8.37.24/29",
									],
									"description": "",
									"from_port":   22,
									"ipv6_cidr_blocks": [
										"2a05:d01c:4ac:3100::/56",
									],
									"prefix_list_ids": [],
									"protocol":        "tcp",
									"security_groups": [],
									"self":            false,
									"to_port":         22,
								},
							],
							"name":                   "ec2_instance_connect",
							"name_prefix":            "",
							"owner_id":               "564784738291",
							"revoke_rules_on_delete": false,
							"tags": {
								"CreateDate": "2025-03-25-23-23-16",
								"SyncToken":  "1742944996",
							},
							"tags_all": {
								"CreateDate": "2025-03-25-23-23-16",
								"Name":       "Test TFC Agents",
								"Owner":      "Lucy",
								"Purpose":    "Test TFC Agents",
								"Source":     "https://github.com/hashi-strawb/tf-agent-pool",
								"SyncToken":  "1742944996",
								"TTL":        "Ephemeral Workspace",
								"Terraform":  "true",
								"Workspace":  "tf-agent-pool",
							},
							"timeouts": null,
							"vpc_id":   "vpc-0475656c1f1de9f54",
						},
					},
					{
						"address": "aws_security_group.outbound_http",
						"depends_on": [
							"module.vpc.aws_vpc.this",
						],
						"mode":           "managed",
						"name":           "outbound_http",
						"provider_name":  "registry.terraform.io/hashicorp/aws",
						"schema_version": 1,
						"sensitive_values": {
							"egress": [
								{
									"cidr_blocks": [
										false,
									],
									"ipv6_cidr_blocks": [
										false,
									],
									"prefix_list_ids": [],
									"security_groups": [],
								},
								{
									"cidr_blocks": [
										false,
									],
									"ipv6_cidr_blocks": [
										false,
									],
									"prefix_list_ids": [],
									"security_groups": [],
								},
							],
							"ingress":  [],
							"tags":     {},
							"tags_all": {},
						},
						"type": "aws_security_group",
						"values": {
							"arn":         "arn:aws:ec2:eu-west-2:564784738291:security-group/sg-077ef699c0cf2cd42",
							"description": "Allow outbound HTTP(S) access to everywhere",
							"egress": [
								{
									"cidr_blocks": [
										"0.0.0.0/0",
									],
									"description": "",
									"from_port":   443,
									"ipv6_cidr_blocks": [
										"::/0",
									],
									"prefix_list_ids": [],
									"protocol":        "tcp",
									"security_groups": [],
									"self":            false,
									"to_port":         443,
								},
								{
									"cidr_blocks": [
										"0.0.0.0/0",
									],
									"description": "",
									"from_port":   80,
									"ipv6_cidr_blocks": [
										"::/0",
									],
									"prefix_list_ids": [],
									"protocol":        "tcp",
									"security_groups": [],
									"self":            false,
									"to_port":         80,
								},
							],
							"id":                     "sg-077ef699c0cf2cd42",
							"ingress":                [],
							"name":                   "outbound_http",
							"name_prefix":            "",
							"owner_id":               "564784738291",
							"revoke_rules_on_delete": false,
							"tags": {},
							"tags_all": {
								"Name":      "Test TFC Agents",
								"Owner":     "Lucy",
								"Purpose":   "Test TFC Agents",
								"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
								"TTL":       "Ephemeral Workspace",
								"Terraform": "true",
								"Workspace": "tf-agent-pool",
							},
							"timeouts": null,
							"vpc_id":   "vpc-0475656c1f1de9f54",
						},
					},
				],
			},
		},
	},
	"relevant_attributes": [
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route_table.database",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route_table.private",
		},
		{
			"attribute": [
				"names",
			],
			"resource": "data.aws_availability_zones.available",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route_table.elasticache",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_subnet.outpost",
		},
		{
			"attribute": [
				"enable_dns_hostnames",
			],
			"resource": "module.vpc.aws_vpc.this[0]",
		},
		{
			"attribute": [
				"owner_id",
			],
			"resource": "module.vpc.aws_vpc.this[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_nat_gateway.this",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route_table_association.intra",
		},
		{
			"attribute": [
				"arn",
			],
			"resource": "module.vpc.aws_iam_role.vpc_flow_log_cloudwatch[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route_table.redshift",
		},
		{
			"attribute": [
				"cidr_block",
			],
			"resource": "module.vpc.aws_vpc.this[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_egress_only_internet_gateway.this",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_eip.nat",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route_table_association.elasticache",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_subnet.intra",
		},
		{
			"attribute": [
				"default_network_acl_id",
			],
			"resource": "module.vpc.aws_vpc.this[0]",
		},
		{
			"attribute": [
				"enable_dns_support",
			],
			"resource": "module.vpc.aws_vpc.this[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route_table_association.redshift_public",
		},
		{
			"attribute": [
				"ipv6_association_id",
			],
			"resource": "module.vpc.aws_vpc.this[0]",
		},
		{
			"attribute": [
				"ipv6_cidr_block",
			],
			"resource": "module.vpc.aws_vpc.this[0]",
		},
		{
			"attribute": [
				"id",
			],
			"resource": "module.vpc.aws_route.public_internet_gateway[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route_table.public",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_subnet.public",
		},
		{
			"attribute": [
				"default_security_group_id",
			],
			"resource": "module.vpc.aws_vpc.this[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_subnet.database",
		},
		{
			"attribute": [
				"arn",
			],
			"resource": "module.vpc.aws_vpc.this[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_subnet.elasticache",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_customer_gateway.this",
		},
		{
			"attribute": [
				"id",
			],
			"resource": "module.vpc.aws_internet_gateway.this[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route_table_association.database",
		},
		{
			"attribute": [
				"id",
			],
			"resource": "module.vpc.aws_vpc.this[0]",
		},
		{
			"attribute": [
				"instance_tenancy",
			],
			"resource": "module.vpc.aws_vpc.this[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route.private_nat_gateway",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_block_public_access_exclusion.this",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route_table_association.public",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route_table.intra",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_subnet.redshift",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route_table_association.private",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_subnet.private",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route.database_nat_gateway",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route_table_association.redshift",
		},
		{
			"attribute": [
				"arn",
			],
			"resource": "module.vpc.aws_cloudwatch_log_group.flow_log[0]",
		},
		{
			"attribute": [
				"arn",
			],
			"resource": "module.vpc.aws_internet_gateway.this[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route.private_ipv6_egress",
		},
		{
			"attribute": [
				"default_route_table_id",
			],
			"resource": "module.vpc.aws_vpc.this[0]",
		},
		{
			"attribute": [
				"main_route_table_id",
			],
			"resource": "module.vpc.aws_vpc.this[0]",
		},
		{
			"attribute": [
				"vpc_id",
			],
			"resource": "module.vpc.aws_vpc_ipv4_cidr_block_association.this[0]",
		},
	],
	"resource_changes": [
		{
			"address": "aws_instance.agent",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"ami": "ami-0c41542cdc0e23561",
					"arn": "arn:aws:ec2:eu-west-2:564784738291:instance/i-092ab9a8394c1849a",
					"associate_public_ip_address": true,
					"availability_zone":           "eu-west-2a",
					"capacity_reservation_specification": [
						{
							"capacity_reservation_preference": "open",
							"capacity_reservation_target":     [],
						},
					],
					"cpu_core_count": 2,
					"cpu_options": [
						{
							"amd_sev_snp":      "",
							"core_count":       2,
							"threads_per_core": 1,
						},
					],
					"cpu_threads_per_core": 1,
					"credit_specification": [
						{
							"cpu_credits": "unlimited",
						},
					],
					"disable_api_stop":        false,
					"disable_api_termination": false,
					"ebs_block_device":        [],
					"ebs_optimized":           false,
					"enable_primary_ipv6":     null,
					"enclave_options": [
						{
							"enabled": false,
						},
					],
					"ephemeral_block_device":  [],
					"get_password_data":       false,
					"hibernation":             false,
					"host_id":                 "",
					"host_resource_group_arn": null,
					"iam_instance_profile":    "",
					"id": "i-092ab9a8394c1849a",
					"instance_initiated_shutdown_behavior": "stop",
					"instance_lifecycle":                   "",
					"instance_market_options":              [],
					"instance_state":                       "running",
					"instance_type":                        "t4g.nano",
					"ipv6_address_count":                   0,
					"ipv6_addresses":                       [],
					"key_name":                             "",
					"launch_template":                      [],
					"maintenance_options": [
						{
							"auto_recovery": "default",
						},
					],
					"metadata_options": [
						{
							"http_endpoint":               "enabled",
							"http_protocol_ipv6":          "disabled",
							"http_put_response_hop_limit": 2,
							"http_tokens":                 "required",
							"instance_metadata_tags":      "disabled",
						},
					],
					"monitoring":                   false,
					"network_interface":            [],
					"outpost_arn":                  "",
					"password_data":                "",
					"placement_group":              "",
					"placement_partition_number":   0,
					"primary_network_interface_id": "eni-0eeb14909b2c30913",
					"private_dns":                  "ip-10-0-101-104.eu-west-2.compute.internal",
					"private_dns_name_options": [
						{
							"enable_resource_name_dns_a_record":    false,
							"enable_resource_name_dns_aaaa_record": false,
							"hostname_type":                        "ip-name",
						},
					],
					"private_ip": "10.0.101.104",
					"public_dns": "ec2-13-40-68-231.eu-west-2.compute.amazonaws.com",
					"public_ip":  "13.40.68.231",
					"root_block_device": [
						{
							"delete_on_termination": true,
							"device_name":           "/dev/xvda",
							"encrypted":             false,
							"iops":                  3000,
							"kms_key_id":            "",
							"tags": {
								"Name":      "Test TFC Agents",
								"Owner":     "Lucy",
								"Purpose":   "Test TFC Agents",
								"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
								"TTL":       "Ephemeral Workspace",
								"Terraform": "true",
								"Workspace": "tf-agent-pool",
							},
							"tags_all": {
								"Name":      "Test TFC Agents",
								"Owner":     "Lucy",
								"Purpose":   "Test TFC Agents",
								"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
								"TTL":       "Ephemeral Workspace",
								"Terraform": "true",
								"Workspace": "tf-agent-pool",
							},
							"throughput":  125,
							"volume_id":   "vol-01205027ba0d5ab15",
							"volume_size": 8,
							"volume_type": "gp3",
						},
					],
					"secondary_private_ips":    [],
					"security_groups":          [],
					"source_dest_check":        true,
					"spot_instance_request_id": "",
					"subnet_id":                "subnet-0b6efa305ddee152c",
					"tags":                     {},
					"tags_all": {
						"Name":      "Test TFC Agents",
						"Owner":     "Lucy",
						"Purpose":   "Test TFC Agents",
						"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
						"TTL":       "Ephemeral Workspace",
						"Terraform": "true",
						"Workspace": "tf-agent-pool",
					},
					"tenancy":                     "default",
					"timeouts":                    null,
					"user_data":                   "REDACTED_SENSITIVE",
					"user_data_base64":            null,
					"user_data_replace_on_change": false,
					"volume_tags":                 null,
					"vpc_security_group_ids": [
						"sg-0241af841da648da0",
						"sg-077ef699c0cf2cd42",
					],
				},
				"after_sensitive": {
					"capacity_reservation_specification": [
						{
							"capacity_reservation_target": [],
						},
					],
					"cpu_options": [
						{},
					],
					"credit_specification": [
						{},
					],
					"ebs_block_device": [],
					"enclave_options": [
						{},
					],
					"ephemeral_block_device":  [],
					"instance_market_options": [],
					"ipv6_addresses":          [],
					"launch_template":         [],
					"maintenance_options": [
						{},
					],
					"metadata_options": [
						{},
					],
					"network_interface": [],
					"private_dns_name_options": [
						{},
					],
					"root_block_device": [
						{
							"tags":     {},
							"tags_all": {},
						},
					],
					"secondary_private_ips": [],
					"security_groups":       [],
					"tags":                  {},
					"tags_all":              {},
					"user_data":             true,
					"vpc_security_group_ids": [
						false,
						false,
					],
				},
				"after_unknown": {},
				"before": {
					"ami": "ami-0c41542cdc0e23561",
					"arn": "arn:aws:ec2:eu-west-2:564784738291:instance/i-092ab9a8394c1849a",
					"associate_public_ip_address": true,
					"availability_zone":           "eu-west-2a",
					"capacity_reservation_specification": [
						{
							"capacity_reservation_preference": "open",
							"capacity_reservation_target":     [],
						},
					],
					"cpu_core_count": 2,
					"cpu_options": [
						{
							"amd_sev_snp":      "",
							"core_count":       2,
							"threads_per_core": 1,
						},
					],
					"cpu_threads_per_core": 1,
					"credit_specification": [
						{
							"cpu_credits": "unlimited",
						},
					],
					"disable_api_stop":        false,
					"disable_api_termination": false,
					"ebs_block_device":        [],
					"ebs_optimized":           false,
					"enable_primary_ipv6":     null,
					"enclave_options": [
						{
							"enabled": false,
						},
					],
					"ephemeral_block_device":  [],
					"get_password_data":       false,
					"hibernation":             false,
					"host_id":                 "",
					"host_resource_group_arn": null,
					"iam_instance_profile":    "",
					"id": "i-092ab9a8394c1849a",
					"instance_initiated_shutdown_behavior": "stop",
					"instance_lifecycle":                   "",
					"instance_market_options":              [],
					"instance_state":                       "running",
					"instance_type":                        "t4g.nano",
					"ipv6_address_count":                   0,
					"ipv6_addresses":                       [],
					"key_name":                             "",
					"launch_template":                      [],
					"maintenance_options": [
						{
							"auto_recovery": "default",
						},
					],
					"metadata_options": [
						{
							"http_endpoint":               "enabled",
							"http_protocol_ipv6":          "disabled",
							"http_put_response_hop_limit": 2,
							"http_tokens":                 "required",
							"instance_metadata_tags":      "disabled",
						},
					],
					"monitoring":                   false,
					"network_interface":            [],
					"outpost_arn":                  "",
					"password_data":                "",
					"placement_group":              "",
					"placement_partition_number":   0,
					"primary_network_interface_id": "eni-0eeb14909b2c30913",
					"private_dns":                  "ip-10-0-101-104.eu-west-2.compute.internal",
					"private_dns_name_options": [
						{
							"enable_resource_name_dns_a_record":    false,
							"enable_resource_name_dns_aaaa_record": false,
							"hostname_type":                        "ip-name",
						},
					],
					"private_ip": "10.0.101.104",
					"public_dns": "ec2-13-40-68-231.eu-west-2.compute.amazonaws.com",
					"public_ip":  "13.40.68.231",
					"root_block_device": [
						{
							"delete_on_termination": true,
							"device_name":           "/dev/xvda",
							"encrypted":             false,
							"iops":                  3000,
							"kms_key_id":            "",
							"tags": {
								"Name":      "Test TFC Agents",
								"Owner":     "Lucy",
								"Purpose":   "Test TFC Agents",
								"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
								"TTL":       "Ephemeral Workspace",
								"Terraform": "true",
								"Workspace": "tf-agent-pool",
							},
							"tags_all": {
								"Name":      "Test TFC Agents",
								"Owner":     "Lucy",
								"Purpose":   "Test TFC Agents",
								"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
								"TTL":       "Ephemeral Workspace",
								"Terraform": "true",
								"Workspace": "tf-agent-pool",
							},
							"throughput":  125,
							"volume_id":   "vol-01205027ba0d5ab15",
							"volume_size": 8,
							"volume_type": "gp3",
						},
					],
					"secondary_private_ips":    [],
					"security_groups":          [],
					"source_dest_check":        true,
					"spot_instance_request_id": "",
					"subnet_id":                "subnet-0b6efa305ddee152c",
					"tags":                     {},
					"tags_all": {
						"Name":      "Test TFC Agents",
						"Owner":     "Lucy",
						"Purpose":   "Test TFC Agents",
						"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
						"TTL":       "Ephemeral Workspace",
						"Terraform": "true",
						"Workspace": "tf-agent-pool",
					},
					"tenancy":                     "default",
					"timeouts":                    null,
					"user_data":                   "REDACTED_SENSITIVE",
					"user_data_base64":            null,
					"user_data_replace_on_change": false,
					"volume_tags":                 null,
					"vpc_security_group_ids": [
						"sg-0241af841da648da0",
						"sg-077ef699c0cf2cd42",
					],
				},
				"before_sensitive": {
					"capacity_reservation_specification": [
						{
							"capacity_reservation_target": [],
						},
					],
					"cpu_options": [
						{},
					],
					"credit_specification": [
						{},
					],
					"ebs_block_device": [],
					"enclave_options": [
						{},
					],
					"ephemeral_block_device":  [],
					"instance_market_options": [],
					"ipv6_addresses":          [],
					"launch_template":         [],
					"maintenance_options": [
						{},
					],
					"metadata_options": [
						{},
					],
					"network_interface": [],
					"private_dns_name_options": [
						{},
					],
					"root_block_device": [
						{
							"tags":     {},
							"tags_all": {},
						},
					],
					"secondary_private_ips": [],
					"security_groups":       [],
					"tags":                  {},
					"tags_all":              {},
					"user_data":             true,
					"vpc_security_group_ids": [
						false,
						false,
					],
				},
			},
			"mode":          "managed",
			"name":          "agent",
			"provider_name": "registry.terraform.io/hashicorp/aws",
			"type":          "aws_instance",
		},
		{
			"address": "aws_security_group.ec2_instance_connect",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"arn":         "arn:aws:ec2:eu-west-2:564784738291:security-group/sg-0241af841da648da0",
					"description": "Allow EC2 Instance Connect to access this host",
					"egress":      [],
					"id":          "sg-0241af841da648da0",
					"ingress": [
						{
							"cidr_blocks": [
								"3.8.37.24/29",
							],
							"description": "",
							"from_port":   22,
							"ipv6_cidr_blocks": [
								"2a05:d01c:4ac:3100::/56",
							],
							"prefix_list_ids": [],
							"protocol":        "tcp",
							"security_groups": [],
							"self":            false,
							"to_port":         22,
						},
					],
					"name":                   "ec2_instance_connect",
					"name_prefix":            "",
					"owner_id":               "564784738291",
					"revoke_rules_on_delete": false,
					"tags": {
						"CreateDate": "2025-03-25-23-23-16",
						"SyncToken":  "1742944996",
					},
					"tags_all": {
						"CreateDate": "2025-03-25-23-23-16",
						"Name":       "Test TFC Agents",
						"Owner":      "Lucy",
						"Purpose":    "Test TFC Agents",
						"Source":     "https://github.com/hashi-strawb/tf-agent-pool",
						"SyncToken":  "1742944996",
						"TTL":        "Ephemeral Workspace",
						"Terraform":  "true",
						"Workspace":  "tf-agent-pool",
					},
					"timeouts": null,
					"vpc_id":   "vpc-0475656c1f1de9f54",
				},
				"after_sensitive": {
					"egress": [],
					"ingress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [
								false,
							],
							"prefix_list_ids": [],
							"security_groups": [],
						},
					],
					"tags":     {},
					"tags_all": {},
				},
				"after_unknown": {},
				"before": {
					"arn":         "arn:aws:ec2:eu-west-2:564784738291:security-group/sg-0241af841da648da0",
					"description": "Allow EC2 Instance Connect to access this host",
					"egress":      [],
					"id":          "sg-0241af841da648da0",
					"ingress": [
						{
							"cidr_blocks": [
								"3.8.37.24/29",
							],
							"description": "",
							"from_port":   22,
							"ipv6_cidr_blocks": [
								"2a05:d01c:4ac:3100::/56",
							],
							"prefix_list_ids": [],
							"protocol":        "tcp",
							"security_groups": [],
							"self":            false,
							"to_port":         22,
						},
					],
					"name":                   "ec2_instance_connect",
					"name_prefix":            "",
					"owner_id":               "564784738291",
					"revoke_rules_on_delete": false,
					"tags": {
						"CreateDate": "2025-03-25-23-23-16",
						"SyncToken":  "1742944996",
					},
					"tags_all": {
						"CreateDate": "2025-03-25-23-23-16",
						"Name":       "Test TFC Agents",
						"Owner":      "Lucy",
						"Purpose":    "Test TFC Agents",
						"Source":     "https://github.com/hashi-strawb/tf-agent-pool",
						"SyncToken":  "1742944996",
						"TTL":        "Ephemeral Workspace",
						"Terraform":  "true",
						"Workspace":  "tf-agent-pool",
					},
					"timeouts": null,
					"vpc_id":   "vpc-0475656c1f1de9f54",
				},
				"before_sensitive": {
					"egress": [],
					"ingress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [
								false,
							],
							"prefix_list_ids": [],
							"security_groups": [],
						},
					],
					"tags":     {},
					"tags_all": {},
				},
			},
			"mode":          "managed",
			"name":          "ec2_instance_connect",
			"provider_name": "registry.terraform.io/hashicorp/aws",
			"type":          "aws_security_group",
		},
		{
			"address": "aws_security_group.outbound_http",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"arn":         "arn:aws:ec2:eu-west-2:564784738291:security-group/sg-077ef699c0cf2cd42",
					"description": "Allow outbound HTTP(S) access to everywhere",
					"egress": [
						{
							"cidr_blocks": [
								"0.0.0.0/0",
							],
							"description": "",
							"from_port":   443,
							"ipv6_cidr_blocks": [
								"::/0",
							],
							"prefix_list_ids": [],
							"protocol":        "tcp",
							"security_groups": [],
							"self":            false,
							"to_port":         443,
						},
						{
							"cidr_blocks": [
								"0.0.0.0/0",
							],
							"description": "",
							"from_port":   80,
							"ipv6_cidr_blocks": [
								"::/0",
							],
							"prefix_list_ids": [],
							"protocol":        "tcp",
							"security_groups": [],
							"self":            false,
							"to_port":         80,
						},
					],
					"id":                     "sg-077ef699c0cf2cd42",
					"ingress":                [],
					"name":                   "outbound_http",
					"name_prefix":            "",
					"owner_id":               "564784738291",
					"revoke_rules_on_delete": false,
					"tags": {},
					"tags_all": {
						"Name":      "Test TFC Agents",
						"Owner":     "Lucy",
						"Purpose":   "Test TFC Agents",
						"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
						"TTL":       "Ephemeral Workspace",
						"Terraform": "true",
						"Workspace": "tf-agent-pool",
					},
					"timeouts": null,
					"vpc_id":   "vpc-0475656c1f1de9f54",
				},
				"after_sensitive": {
					"egress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [
								false,
							],
							"prefix_list_ids": [],
							"security_groups": [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [
								false,
							],
							"prefix_list_ids": [],
							"security_groups": [],
						},
					],
					"ingress":  [],
					"tags":     {},
					"tags_all": {},
				},
				"after_unknown": {},
				"before": {
					"arn":         "arn:aws:ec2:eu-west-2:564784738291:security-group/sg-077ef699c0cf2cd42",
					"description": "Allow outbound HTTP(S) access to everywhere",
					"egress": [
						{
							"cidr_blocks": [
								"0.0.0.0/0",
							],
							"description": "",
							"from_port":   443,
							"ipv6_cidr_blocks": [
								"::/0",
							],
							"prefix_list_ids": [],
							"protocol":        "tcp",
							"security_groups": [],
							"self":            false,
							"to_port":         443,
						},
						{
							"cidr_blocks": [
								"0.0.0.0/0",
							],
							"description": "",
							"from_port":   80,
							"ipv6_cidr_blocks": [
								"::/0",
							],
							"prefix_list_ids": [],
							"protocol":        "tcp",
							"security_groups": [],
							"self":            false,
							"to_port":         80,
						},
					],
					"id":                     "sg-077ef699c0cf2cd42",
					"ingress":                [],
					"name":                   "outbound_http",
					"name_prefix":            "",
					"owner_id":               "564784738291",
					"revoke_rules_on_delete": false,
					"tags": {},
					"tags_all": {
						"Name":      "Test TFC Agents",
						"Owner":     "Lucy",
						"Purpose":   "Test TFC Agents",
						"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
						"TTL":       "Ephemeral Workspace",
						"Terraform": "true",
						"Workspace": "tf-agent-pool",
					},
					"timeouts": null,
					"vpc_id":   "vpc-0475656c1f1de9f54",
				},
				"before_sensitive": {
					"egress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [
								false,
							],
							"prefix_list_ids": [],
							"security_groups": [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [
								false,
							],
							"prefix_list_ids": [],
							"security_groups": [],
						},
					],
					"ingress":  [],
					"tags":     {},
					"tags_all": {},
				},
			},
			"mode":          "managed",
			"name":          "outbound_http",
			"provider_name": "registry.terraform.io/hashicorp/aws",
			"type":          "aws_security_group",
		},
		{
			"address": "null_resource.exec",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"triggers": null,
				},
				"after_sensitive": {},
				"after_unknown": {
					"id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"mode":          "managed",
			"name":          "exec",
			"provider_name": "registry.terraform.io/hashicorp/null",
			"type":          "null_resource",
		},
		{
			"address": "module.vpc.aws_default_network_acl.this[0]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"arn": "arn:aws:ec2:eu-west-2:564784738291:network-acl/acl-047c9b8117d436487",
					"default_network_acl_id": "acl-047c9b8117d436487",
					"egress": [
						{
							"action":          "allow",
							"cidr_block":      "",
							"from_port":       0,
							"icmp_code":       0,
							"icmp_type":       0,
							"ipv6_cidr_block": "::/0",
							"protocol":        "-1",
							"rule_no":         101,
							"to_port":         0,
						},
						{
							"action":          "allow",
							"cidr_block":      "0.0.0.0/0",
							"from_port":       0,
							"icmp_code":       0,
							"icmp_type":       0,
							"ipv6_cidr_block": "",
							"protocol":        "-1",
							"rule_no":         100,
							"to_port":         0,
						},
					],
					"id": "acl-047c9b8117d436487",
					"ingress": [
						{
							"action":          "allow",
							"cidr_block":      "",
							"from_port":       0,
							"icmp_code":       0,
							"icmp_type":       0,
							"ipv6_cidr_block": "::/0",
							"protocol":        "-1",
							"rule_no":         101,
							"to_port":         0,
						},
						{
							"action":          "allow",
							"cidr_block":      "0.0.0.0/0",
							"from_port":       0,
							"icmp_code":       0,
							"icmp_type":       0,
							"ipv6_cidr_block": "",
							"protocol":        "-1",
							"rule_no":         100,
							"to_port":         0,
						},
					],
					"owner_id": "564784738291",
					"subnet_ids": [
						"subnet-0892042fd9b88c443",
						"subnet-0b6efa305ddee152c",
						"subnet-0b74cf6d52312b7de",
					],
					"tags": {
						"Name": "agent-vpc-default",
					},
					"tags_all": {
						"Name":      "agent-vpc-default",
						"Owner":     "Lucy",
						"Purpose":   "Test TFC Agents",
						"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
						"TTL":       "Ephemeral Workspace",
						"Terraform": "true",
						"Workspace": "tf-agent-pool",
					},
					"vpc_id": "vpc-0475656c1f1de9f54",
				},
				"after_sensitive": {
					"egress": [
						{},
						{},
					],
					"ingress": [
						{},
						{},
					],
					"subnet_ids": [
						false,
						false,
						false,
					],
					"tags":     {},
					"tags_all": {},
				},
				"after_unknown": {},
				"before": {
					"arn": "arn:aws:ec2:eu-west-2:564784738291:network-acl/acl-047c9b8117d436487",
					"default_network_acl_id": "acl-047c9b8117d436487",
					"egress": [
						{
							"action":          "allow",
							"cidr_block":      "",
							"from_port":       0,
							"icmp_code":       0,
							"icmp_type":       0,
							"ipv6_cidr_block": "::/0",
							"protocol":        "-1",
							"rule_no":         101,
							"to_port":         0,
						},
						{
							"action":          "allow",
							"cidr_block":      "0.0.0.0/0",
							"from_port":       0,
							"icmp_code":       0,
							"icmp_type":       0,
							"ipv6_cidr_block": "",
							"protocol":        "-1",
							"rule_no":         100,
							"to_port":         0,
						},
					],
					"id": "acl-047c9b8117d436487",
					"ingress": [
						{
							"action":          "allow",
							"cidr_block":      "",
							"from_port":       0,
							"icmp_code":       0,
							"icmp_type":       0,
							"ipv6_cidr_block": "::/0",
							"protocol":        "-1",
							"rule_no":         101,
							"to_port":         0,
						},
						{
							"action":          "allow",
							"cidr_block":      "0.0.0.0/0",
							"from_port":       0,
							"icmp_code":       0,
							"icmp_type":       0,
							"ipv6_cidr_block": "",
							"protocol":        "-1",
							"rule_no":         100,
							"to_port":         0,
						},
					],
					"owner_id": "564784738291",
					"subnet_ids": [
						"subnet-0892042fd9b88c443",
						"subnet-0b6efa305ddee152c",
						"subnet-0b74cf6d52312b7de",
					],
					"tags": {
						"Name": "agent-vpc-default",
					},
					"tags_all": {
						"Name":      "agent-vpc-default",
						"Owner":     "Lucy",
						"Purpose":   "Test TFC Agents",
						"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
						"TTL":       "Ephemeral Workspace",
						"Terraform": "true",
						"Workspace": "tf-agent-pool",
					},
					"vpc_id": "vpc-0475656c1f1de9f54",
				},
				"before_sensitive": {
					"egress": [
						{},
						{},
					],
					"ingress": [
						{},
						{},
					],
					"subnet_ids": [
						false,
						false,
						false,
					],
					"tags":     {},
					"tags_all": {},
				},
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_default_network_acl",
		},
		{
			"address": "module.vpc.aws_default_route_table.default[0]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"arn": "arn:aws:ec2:eu-west-2:564784738291:route-table/rtb-087b68f71c1fbb116",
					"default_route_table_id": "rtb-087b68f71c1fbb116",
					"id":               "rtb-087b68f71c1fbb116",
					"owner_id":         "564784738291",
					"propagating_vgws": [],
					"route":            [],
					"tags": {
						"Name": "agent-vpc-default",
					},
					"tags_all": {
						"Name":      "agent-vpc-default",
						"Owner":     "Lucy",
						"Purpose":   "Test TFC Agents",
						"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
						"TTL":       "Ephemeral Workspace",
						"Terraform": "true",
						"Workspace": "tf-agent-pool",
					},
					"timeouts": {
						"create": "5m",
						"update": "5m",
					},
					"vpc_id": "vpc-0475656c1f1de9f54",
				},
				"after_sensitive": {
					"propagating_vgws": [],
					"route":            [],
					"tags":             {},
					"tags_all":         {},
					"timeouts":         {},
				},
				"after_unknown": {},
				"before": {
					"arn": "arn:aws:ec2:eu-west-2:564784738291:route-table/rtb-087b68f71c1fbb116",
					"default_route_table_id": "rtb-087b68f71c1fbb116",
					"id":               "rtb-087b68f71c1fbb116",
					"owner_id":         "564784738291",
					"propagating_vgws": [],
					"route":            [],
					"tags": {
						"Name": "agent-vpc-default",
					},
					"tags_all": {
						"Name":      "agent-vpc-default",
						"Owner":     "Lucy",
						"Purpose":   "Test TFC Agents",
						"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
						"TTL":       "Ephemeral Workspace",
						"Terraform": "true",
						"Workspace": "tf-agent-pool",
					},
					"timeouts": {
						"create": "5m",
						"update": "5m",
					},
					"vpc_id": "vpc-0475656c1f1de9f54",
				},
				"before_sensitive": {
					"propagating_vgws": [],
					"route":            [],
					"tags":             {},
					"tags_all":         {},
					"timeouts":         {},
				},
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "default",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_default_route_table",
		},
		{
			"address": "module.vpc.aws_default_security_group.this[0]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"arn":                    "arn:aws:ec2:eu-west-2:564784738291:security-group/sg-02f76aa6f404e5bf1",
					"description":            "default VPC security group",
					"egress":                 [],
					"id":                     "sg-02f76aa6f404e5bf1",
					"ingress":                [],
					"name":                   "default",
					"name_prefix":            "",
					"owner_id":               "564784738291",
					"revoke_rules_on_delete": false,
					"tags": {
						"Name": "agent-vpc-default",
					},
					"tags_all": {
						"Name":      "agent-vpc-default",
						"Owner":     "Lucy",
						"Purpose":   "Test TFC Agents",
						"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
						"TTL":       "Ephemeral Workspace",
						"Terraform": "true",
						"Workspace": "tf-agent-pool",
					},
					"vpc_id": "vpc-0475656c1f1de9f54",
				},
				"after_sensitive": {
					"egress":   [],
					"ingress":  [],
					"tags":     {},
					"tags_all": {},
				},
				"after_unknown": {},
				"before": {
					"arn":                    "arn:aws:ec2:eu-west-2:564784738291:security-group/sg-02f76aa6f404e5bf1",
					"description":            "default VPC security group",
					"egress":                 [],
					"id":                     "sg-02f76aa6f404e5bf1",
					"ingress":                [],
					"name":                   "default",
					"name_prefix":            "",
					"owner_id":               "564784738291",
					"revoke_rules_on_delete": false,
					"tags": {
						"Name": "agent-vpc-default",
					},
					"tags_all": {
						"Name":      "agent-vpc-default",
						"Owner":     "Lucy",
						"Purpose":   "Test TFC Agents",
						"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
						"TTL":       "Ephemeral Workspace",
						"Terraform": "true",
						"Workspace": "tf-agent-pool",
					},
					"vpc_id": "vpc-0475656c1f1de9f54",
				},
				"before_sensitive": {
					"egress":   [],
					"ingress":  [],
					"tags":     {},
					"tags_all": {},
				},
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_default_security_group",
		},
		{
			"address": "module.vpc.aws_internet_gateway.this[0]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"arn":      "arn:aws:ec2:eu-west-2:564784738291:internet-gateway/igw-0adceafb47eb02050",
					"id":       "igw-0adceafb47eb02050",
					"owner_id": "564784738291",
					"tags": {
						"Name": "agent-vpc",
					},
					"tags_all": {
						"Name":      "agent-vpc",
						"Owner":     "Lucy",
						"Purpose":   "Test TFC Agents",
						"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
						"TTL":       "Ephemeral Workspace",
						"Terraform": "true",
						"Workspace": "tf-agent-pool",
					},
					"timeouts": null,
					"vpc_id":   "vpc-0475656c1f1de9f54",
				},
				"after_sensitive": {
					"tags":     {},
					"tags_all": {},
				},
				"after_unknown": {},
				"before": {
					"arn":      "arn:aws:ec2:eu-west-2:564784738291:internet-gateway/igw-0adceafb47eb02050",
					"id":       "igw-0adceafb47eb02050",
					"owner_id": "564784738291",
					"tags": {
						"Name": "agent-vpc",
					},
					"tags_all": {
						"Name":      "agent-vpc",
						"Owner":     "Lucy",
						"Purpose":   "Test TFC Agents",
						"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
						"TTL":       "Ephemeral Workspace",
						"Terraform": "true",
						"Workspace": "tf-agent-pool",
					},
					"timeouts": null,
					"vpc_id":   "vpc-0475656c1f1de9f54",
				},
				"before_sensitive": {
					"tags":     {},
					"tags_all": {},
				},
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_internet_gateway",
		},
		{
			"address": "module.vpc.aws_route.public_internet_gateway[0]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"carrier_gateway_id":          "",
					"core_network_arn":            "",
					"destination_cidr_block":      "0.0.0.0/0",
					"destination_ipv6_cidr_block": "",
					"destination_prefix_list_id":  "",
					"egress_only_gateway_id":      "",
					"gateway_id":                  "igw-0adceafb47eb02050",
					"id":                          "r-rtb-034dbc5284e92440a1080289494",
					"instance_id":                 "",
					"instance_owner_id":           "",
					"local_gateway_id":            "",
					"nat_gateway_id":              "",
					"network_interface_id":        "",
					"origin":                      "CreateRoute",
					"route_table_id":              "rtb-034dbc5284e92440a",
					"state":                       "active",
					"timeouts": {
						"create": "5m",
						"delete": null,
						"update": null,
					},
					"transit_gateway_id":        "",
					"vpc_endpoint_id":           "",
					"vpc_peering_connection_id": "",
				},
				"after_sensitive": {
					"timeouts": {},
				},
				"after_unknown": {},
				"before": {
					"carrier_gateway_id":          "",
					"core_network_arn":            "",
					"destination_cidr_block":      "0.0.0.0/0",
					"destination_ipv6_cidr_block": "",
					"destination_prefix_list_id":  "",
					"egress_only_gateway_id":      "",
					"gateway_id":                  "igw-0adceafb47eb02050",
					"id":                          "r-rtb-034dbc5284e92440a1080289494",
					"instance_id":                 "",
					"instance_owner_id":           "",
					"local_gateway_id":            "",
					"nat_gateway_id":              "",
					"network_interface_id":        "",
					"origin":                      "CreateRoute",
					"route_table_id":              "rtb-034dbc5284e92440a",
					"state":                       "active",
					"timeouts": {
						"create": "5m",
						"delete": null,
						"update": null,
					},
					"transit_gateway_id":        "",
					"vpc_endpoint_id":           "",
					"vpc_peering_connection_id": "",
				},
				"before_sensitive": {
					"timeouts": {},
				},
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public_internet_gateway",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_route",
		},
		{
			"address": "module.vpc.aws_route_table.public[0]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"arn":              "arn:aws:ec2:eu-west-2:564784738291:route-table/rtb-034dbc5284e92440a",
					"id":               "rtb-034dbc5284e92440a",
					"owner_id":         "564784738291",
					"propagating_vgws": [],
					"route": [
						{
							"carrier_gateway_id":         "",
							"cidr_block":                 "0.0.0.0/0",
							"core_network_arn":           "",
							"destination_prefix_list_id": "",
							"egress_only_gateway_id":     "",
							"gateway_id":                 "igw-0adceafb47eb02050",
							"ipv6_cidr_block":            "",
							"local_gateway_id":           "",
							"nat_gateway_id":             "",
							"network_interface_id":       "",
							"transit_gateway_id":         "",
							"vpc_endpoint_id":            "",
							"vpc_peering_connection_id":  "",
						},
					],
					"tags": {
						"Name": "agent-vpc-public",
					},
					"tags_all": {
						"Name":      "agent-vpc-public",
						"Owner":     "Lucy",
						"Purpose":   "Test TFC Agents",
						"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
						"TTL":       "Ephemeral Workspace",
						"Terraform": "true",
						"Workspace": "tf-agent-pool",
					},
					"timeouts": null,
					"vpc_id":   "vpc-0475656c1f1de9f54",
				},
				"after_sensitive": {
					"propagating_vgws": [],
					"route": [
						{},
					],
					"tags":     {},
					"tags_all": {},
				},
				"after_unknown": {},
				"before": {
					"arn":              "arn:aws:ec2:eu-west-2:564784738291:route-table/rtb-034dbc5284e92440a",
					"id":               "rtb-034dbc5284e92440a",
					"owner_id":         "564784738291",
					"propagating_vgws": [],
					"route": [
						{
							"carrier_gateway_id":         "",
							"cidr_block":                 "0.0.0.0/0",
							"core_network_arn":           "",
							"destination_prefix_list_id": "",
							"egress_only_gateway_id":     "",
							"gateway_id":                 "igw-0adceafb47eb02050",
							"ipv6_cidr_block":            "",
							"local_gateway_id":           "",
							"nat_gateway_id":             "",
							"network_interface_id":       "",
							"transit_gateway_id":         "",
							"vpc_endpoint_id":            "",
							"vpc_peering_connection_id":  "",
						},
					],
					"tags": {
						"Name": "agent-vpc-public",
					},
					"tags_all": {
						"Name":      "agent-vpc-public",
						"Owner":     "Lucy",
						"Purpose":   "Test TFC Agents",
						"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
						"TTL":       "Ephemeral Workspace",
						"Terraform": "true",
						"Workspace": "tf-agent-pool",
					},
					"timeouts": null,
					"vpc_id":   "vpc-0475656c1f1de9f54",
				},
				"before_sensitive": {
					"propagating_vgws": [],
					"route": [
						{},
					],
					"tags":     {},
					"tags_all": {},
				},
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_route_table",
		},
		{
			"address": "module.vpc.aws_route_table_association.public[0]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"gateway_id":     "",
					"id":             "rtbassoc-0dab61280ace868b3",
					"route_table_id": "rtb-034dbc5284e92440a",
					"subnet_id":      "subnet-0b6efa305ddee152c",
					"timeouts":       null,
				},
				"after_sensitive": {},
				"after_unknown":   {},
				"before": {
					"gateway_id":     "",
					"id":             "rtbassoc-0dab61280ace868b3",
					"route_table_id": "rtb-034dbc5284e92440a",
					"subnet_id":      "subnet-0b6efa305ddee152c",
					"timeouts":       null,
				},
				"before_sensitive": {},
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_route_table_association",
		},
		{
			"address": "module.vpc.aws_route_table_association.public[1]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"gateway_id":     "",
					"id":             "rtbassoc-0fd62eb231eb0aef9",
					"route_table_id": "rtb-034dbc5284e92440a",
					"subnet_id":      "subnet-0892042fd9b88c443",
					"timeouts":       null,
				},
				"after_sensitive": {},
				"after_unknown":   {},
				"before": {
					"gateway_id":     "",
					"id":             "rtbassoc-0fd62eb231eb0aef9",
					"route_table_id": "rtb-034dbc5284e92440a",
					"subnet_id":      "subnet-0892042fd9b88c443",
					"timeouts":       null,
				},
				"before_sensitive": {},
			},
			"index":          1,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_route_table_association",
		},
		{
			"address": "module.vpc.aws_route_table_association.public[2]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"gateway_id":     "",
					"id":             "rtbassoc-0b1e1130e180dc2fe",
					"route_table_id": "rtb-034dbc5284e92440a",
					"subnet_id":      "subnet-0b74cf6d52312b7de",
					"timeouts":       null,
				},
				"after_sensitive": {},
				"after_unknown":   {},
				"before": {
					"gateway_id":     "",
					"id":             "rtbassoc-0b1e1130e180dc2fe",
					"route_table_id": "rtb-034dbc5284e92440a",
					"subnet_id":      "subnet-0b74cf6d52312b7de",
					"timeouts":       null,
				},
				"before_sensitive": {},
			},
			"index":          2,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_route_table_association",
		},
		{
			"address": "module.vpc.aws_subnet.public[0]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"arn": "arn:aws:ec2:eu-west-2:564784738291:subnet/subnet-0b6efa305ddee152c",
					"assign_ipv6_address_on_creation":                false,
					"availability_zone":                              "eu-west-2a",
					"availability_zone_id":                           "euw2-az2",
					"cidr_block":                                     "10.0.101.0/24",
					"customer_owned_ipv4_pool":                       "",
					"enable_dns64":                                   false,
					"enable_lni_at_device_index":                     0,
					"enable_resource_name_dns_a_record_on_launch":    false,
					"enable_resource_name_dns_aaaa_record_on_launch": false,
					"id":                                  "subnet-0b6efa305ddee152c",
					"ipv6_cidr_block":                     "",
					"ipv6_cidr_block_association_id":      "",
					"ipv6_native":                         false,
					"map_customer_owned_ip_on_launch":     false,
					"map_public_ip_on_launch":             false,
					"outpost_arn":                         "",
					"owner_id":                            "564784738291",
					"private_dns_hostname_type_on_launch": "ip-name",
					"tags": {
						"Name": "agent-vpc-public-eu-west-2a",
					},
					"tags_all": {
						"Name":      "agent-vpc-public-eu-west-2a",
						"Owner":     "Lucy",
						"Purpose":   "Test TFC Agents",
						"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
						"TTL":       "Ephemeral Workspace",
						"Terraform": "true",
						"Workspace": "tf-agent-pool",
					},
					"timeouts": null,
					"vpc_id":   "vpc-0475656c1f1de9f54",
				},
				"after_sensitive": {
					"tags":     {},
					"tags_all": {},
				},
				"after_unknown": {},
				"before": {
					"arn": "arn:aws:ec2:eu-west-2:564784738291:subnet/subnet-0b6efa305ddee152c",
					"assign_ipv6_address_on_creation":                false,
					"availability_zone":                              "eu-west-2a",
					"availability_zone_id":                           "euw2-az2",
					"cidr_block":                                     "10.0.101.0/24",
					"customer_owned_ipv4_pool":                       "",
					"enable_dns64":                                   false,
					"enable_lni_at_device_index":                     0,
					"enable_resource_name_dns_a_record_on_launch":    false,
					"enable_resource_name_dns_aaaa_record_on_launch": false,
					"id":                                  "subnet-0b6efa305ddee152c",
					"ipv6_cidr_block":                     "",
					"ipv6_cidr_block_association_id":      "",
					"ipv6_native":                         false,
					"map_customer_owned_ip_on_launch":     false,
					"map_public_ip_on_launch":             false,
					"outpost_arn":                         "",
					"owner_id":                            "564784738291",
					"private_dns_hostname_type_on_launch": "ip-name",
					"tags": {
						"Name": "agent-vpc-public-eu-west-2a",
					},
					"tags_all": {
						"Name":      "agent-vpc-public-eu-west-2a",
						"Owner":     "Lucy",
						"Purpose":   "Test TFC Agents",
						"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
						"TTL":       "Ephemeral Workspace",
						"Terraform": "true",
						"Workspace": "tf-agent-pool",
					},
					"timeouts": null,
					"vpc_id":   "vpc-0475656c1f1de9f54",
				},
				"before_sensitive": {
					"tags":     {},
					"tags_all": {},
				},
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_subnet",
		},
		{
			"address": "module.vpc.aws_subnet.public[1]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"arn": "arn:aws:ec2:eu-west-2:564784738291:subnet/subnet-0892042fd9b88c443",
					"assign_ipv6_address_on_creation":                false,
					"availability_zone":                              "eu-west-2b",
					"availability_zone_id":                           "euw2-az3",
					"cidr_block":                                     "10.0.102.0/24",
					"customer_owned_ipv4_pool":                       "",
					"enable_dns64":                                   false,
					"enable_lni_at_device_index":                     0,
					"enable_resource_name_dns_a_record_on_launch":    false,
					"enable_resource_name_dns_aaaa_record_on_launch": false,
					"id":                                  "subnet-0892042fd9b88c443",
					"ipv6_cidr_block":                     "",
					"ipv6_cidr_block_association_id":      "",
					"ipv6_native":                         false,
					"map_customer_owned_ip_on_launch":     false,
					"map_public_ip_on_launch":             false,
					"outpost_arn":                         "",
					"owner_id":                            "564784738291",
					"private_dns_hostname_type_on_launch": "ip-name",
					"tags": {
						"Name": "agent-vpc-public-eu-west-2b",
					},
					"tags_all": {
						"Name":      "agent-vpc-public-eu-west-2b",
						"Owner":     "Lucy",
						"Purpose":   "Test TFC Agents",
						"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
						"TTL":       "Ephemeral Workspace",
						"Terraform": "true",
						"Workspace": "tf-agent-pool",
					},
					"timeouts": null,
					"vpc_id":   "vpc-0475656c1f1de9f54",
				},
				"after_sensitive": {
					"tags":     {},
					"tags_all": {},
				},
				"after_unknown": {},
				"before": {
					"arn": "arn:aws:ec2:eu-west-2:564784738291:subnet/subnet-0892042fd9b88c443",
					"assign_ipv6_address_on_creation":                false,
					"availability_zone":                              "eu-west-2b",
					"availability_zone_id":                           "euw2-az3",
					"cidr_block":                                     "10.0.102.0/24",
					"customer_owned_ipv4_pool":                       "",
					"enable_dns64":                                   false,
					"enable_lni_at_device_index":                     0,
					"enable_resource_name_dns_a_record_on_launch":    false,
					"enable_resource_name_dns_aaaa_record_on_launch": false,
					"id":                                  "subnet-0892042fd9b88c443",
					"ipv6_cidr_block":                     "",
					"ipv6_cidr_block_association_id":      "",
					"ipv6_native":                         false,
					"map_customer_owned_ip_on_launch":     false,
					"map_public_ip_on_launch":             false,
					"outpost_arn":                         "",
					"owner_id":                            "564784738291",
					"private_dns_hostname_type_on_launch": "ip-name",
					"tags": {
						"Name": "agent-vpc-public-eu-west-2b",
					},
					"tags_all": {
						"Name":      "agent-vpc-public-eu-west-2b",
						"Owner":     "Lucy",
						"Purpose":   "Test TFC Agents",
						"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
						"TTL":       "Ephemeral Workspace",
						"Terraform": "true",
						"Workspace": "tf-agent-pool",
					},
					"timeouts": null,
					"vpc_id":   "vpc-0475656c1f1de9f54",
				},
				"before_sensitive": {
					"tags":     {},
					"tags_all": {},
				},
			},
			"index":          1,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_subnet",
		},
		{
			"address": "module.vpc.aws_subnet.public[2]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"arn": "arn:aws:ec2:eu-west-2:564784738291:subnet/subnet-0b74cf6d52312b7de",
					"assign_ipv6_address_on_creation":                false,
					"availability_zone":                              "eu-west-2c",
					"availability_zone_id":                           "euw2-az1",
					"cidr_block":                                     "10.0.103.0/24",
					"customer_owned_ipv4_pool":                       "",
					"enable_dns64":                                   false,
					"enable_lni_at_device_index":                     0,
					"enable_resource_name_dns_a_record_on_launch":    false,
					"enable_resource_name_dns_aaaa_record_on_launch": false,
					"id":                                  "subnet-0b74cf6d52312b7de",
					"ipv6_cidr_block":                     "",
					"ipv6_cidr_block_association_id":      "",
					"ipv6_native":                         false,
					"map_customer_owned_ip_on_launch":     false,
					"map_public_ip_on_launch":             false,
					"outpost_arn":                         "",
					"owner_id":                            "564784738291",
					"private_dns_hostname_type_on_launch": "ip-name",
					"tags": {
						"Name": "agent-vpc-public-eu-west-2c",
					},
					"tags_all": {
						"Name":      "agent-vpc-public-eu-west-2c",
						"Owner":     "Lucy",
						"Purpose":   "Test TFC Agents",
						"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
						"TTL":       "Ephemeral Workspace",
						"Terraform": "true",
						"Workspace": "tf-agent-pool",
					},
					"timeouts": null,
					"vpc_id":   "vpc-0475656c1f1de9f54",
				},
				"after_sensitive": {
					"tags":     {},
					"tags_all": {},
				},
				"after_unknown": {},
				"before": {
					"arn": "arn:aws:ec2:eu-west-2:564784738291:subnet/subnet-0b74cf6d52312b7de",
					"assign_ipv6_address_on_creation":                false,
					"availability_zone":                              "eu-west-2c",
					"availability_zone_id":                           "euw2-az1",
					"cidr_block":                                     "10.0.103.0/24",
					"customer_owned_ipv4_pool":                       "",
					"enable_dns64":                                   false,
					"enable_lni_at_device_index":                     0,
					"enable_resource_name_dns_a_record_on_launch":    false,
					"enable_resource_name_dns_aaaa_record_on_launch": false,
					"id":                                  "subnet-0b74cf6d52312b7de",
					"ipv6_cidr_block":                     "",
					"ipv6_cidr_block_association_id":      "",
					"ipv6_native":                         false,
					"map_customer_owned_ip_on_launch":     false,
					"map_public_ip_on_launch":             false,
					"outpost_arn":                         "",
					"owner_id":                            "564784738291",
					"private_dns_hostname_type_on_launch": "ip-name",
					"tags": {
						"Name": "agent-vpc-public-eu-west-2c",
					},
					"tags_all": {
						"Name":      "agent-vpc-public-eu-west-2c",
						"Owner":     "Lucy",
						"Purpose":   "Test TFC Agents",
						"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
						"TTL":       "Ephemeral Workspace",
						"Terraform": "true",
						"Workspace": "tf-agent-pool",
					},
					"timeouts": null,
					"vpc_id":   "vpc-0475656c1f1de9f54",
				},
				"before_sensitive": {
					"tags":     {},
					"tags_all": {},
				},
			},
			"index":          2,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_subnet",
		},
		{
			"address": "module.vpc.aws_vpc.this[0]",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"arn": "arn:aws:ec2:eu-west-2:564784738291:vpc/vpc-0475656c1f1de9f54",
					"assign_generated_ipv6_cidr_block":     false,
					"cidr_block":                           "10.0.0.0/16",
					"default_network_acl_id":               "acl-047c9b8117d436487",
					"default_route_table_id":               "rtb-087b68f71c1fbb116",
					"default_security_group_id":            "sg-02f76aa6f404e5bf1",
					"dhcp_options_id":                      "dopt-0bb7c3f05a56647e9",
					"enable_dns_hostnames":                 true,
					"enable_dns_support":                   true,
					"enable_network_address_usage_metrics": false,
					"id":                                   "vpc-0475656c1f1de9f54",
					"instance_tenancy":                     "default",
					"ipv4_ipam_pool_id":                    null,
					"ipv4_netmask_length":                  null,
					"ipv6_association_id":                  "",
					"ipv6_cidr_block":                      "",
					"ipv6_cidr_block_network_border_group": "",
					"ipv6_ipam_pool_id":                    "",
					"ipv6_netmask_length":                  0,
					"main_route_table_id":                  "rtb-087b68f71c1fbb116",
					"owner_id":                             "564784738291",
					"tags": {
						"Name": "agent-vpc",
					},
					"tags_all": {
						"Name":      "agent-vpc",
						"Owner":     "Lucy",
						"Purpose":   "Test TFC Agents",
						"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
						"TTL":       "Ephemeral Workspace",
						"Terraform": "true",
						"Workspace": "tf-agent-pool",
					},
				},
				"after_sensitive": {
					"tags":     {},
					"tags_all": {},
				},
				"after_unknown": {},
				"before": {
					"arn": "arn:aws:ec2:eu-west-2:564784738291:vpc/vpc-0475656c1f1de9f54",
					"assign_generated_ipv6_cidr_block":     false,
					"cidr_block":                           "10.0.0.0/16",
					"default_network_acl_id":               "acl-047c9b8117d436487",
					"default_route_table_id":               "rtb-087b68f71c1fbb116",
					"default_security_group_id":            "sg-02f76aa6f404e5bf1",
					"dhcp_options_id":                      "dopt-0bb7c3f05a56647e9",
					"enable_dns_hostnames":                 true,
					"enable_dns_support":                   true,
					"enable_network_address_usage_metrics": false,
					"id":                                   "vpc-0475656c1f1de9f54",
					"instance_tenancy":                     "default",
					"ipv4_ipam_pool_id":                    null,
					"ipv4_netmask_length":                  null,
					"ipv6_association_id":                  "",
					"ipv6_cidr_block":                      "",
					"ipv6_cidr_block_network_border_group": "",
					"ipv6_ipam_pool_id":                    "",
					"ipv6_netmask_length":                  0,
					"main_route_table_id":                  "rtb-087b68f71c1fbb116",
					"owner_id":                             "564784738291",
					"tags": {
						"Name": "agent-vpc",
					},
					"tags_all": {
						"Name":      "agent-vpc",
						"Owner":     "Lucy",
						"Purpose":   "Test TFC Agents",
						"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
						"TTL":       "Ephemeral Workspace",
						"Terraform": "true",
						"Workspace": "tf-agent-pool",
					},
				},
				"before_sensitive": {
					"tags":     {},
					"tags_all": {},
				},
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_vpc",
		},
	],
	"resource_drift": [
		{
			"address": "aws_instance.agent",
			"change": {
				"actions": [
					"update",
				],
				"after": {
					"ami": "ami-0c41542cdc0e23561",
					"arn": "arn:aws:ec2:eu-west-2:564784738291:instance/i-092ab9a8394c1849a",
					"associate_public_ip_address": true,
					"availability_zone":           "eu-west-2a",
					"capacity_reservation_specification": [
						{
							"capacity_reservation_preference": "open",
							"capacity_reservation_target":     [],
						},
					],
					"cpu_core_count": 2,
					"cpu_options": [
						{
							"amd_sev_snp":      "",
							"core_count":       2,
							"threads_per_core": 1,
						},
					],
					"cpu_threads_per_core": 1,
					"credit_specification": [
						{
							"cpu_credits": "unlimited",
						},
					],
					"disable_api_stop":        false,
					"disable_api_termination": false,
					"ebs_block_device":        [],
					"ebs_optimized":           false,
					"enable_primary_ipv6":     null,
					"enclave_options": [
						{
							"enabled": false,
						},
					],
					"ephemeral_block_device":  [],
					"get_password_data":       false,
					"hibernation":             false,
					"host_id":                 "",
					"host_resource_group_arn": null,
					"iam_instance_profile":    "",
					"id": "i-092ab9a8394c1849a",
					"instance_initiated_shutdown_behavior": "stop",
					"instance_lifecycle":                   "",
					"instance_market_options":              [],
					"instance_state":                       "running",
					"instance_type":                        "t4g.nano",
					"ipv6_address_count":                   0,
					"ipv6_addresses":                       [],
					"key_name":                             "",
					"launch_template":                      [],
					"maintenance_options": [
						{
							"auto_recovery": "default",
						},
					],
					"metadata_options": [
						{
							"http_endpoint":               "enabled",
							"http_protocol_ipv6":          "disabled",
							"http_put_response_hop_limit": 2,
							"http_tokens":                 "required",
							"instance_metadata_tags":      "disabled",
						},
					],
					"monitoring":                   false,
					"network_interface":            [],
					"outpost_arn":                  "",
					"password_data":                "",
					"placement_group":              "",
					"placement_partition_number":   0,
					"primary_network_interface_id": "eni-0eeb14909b2c30913",
					"private_dns":                  "ip-10-0-101-104.eu-west-2.compute.internal",
					"private_dns_name_options": [
						{
							"enable_resource_name_dns_a_record":    false,
							"enable_resource_name_dns_aaaa_record": false,
							"hostname_type":                        "ip-name",
						},
					],
					"private_ip": "10.0.101.104",
					"public_dns": "ec2-13-40-68-231.eu-west-2.compute.amazonaws.com",
					"public_ip":  "13.40.68.231",
					"root_block_device": [
						{
							"delete_on_termination": true,
							"device_name":           "/dev/xvda",
							"encrypted":             false,
							"iops":                  3000,
							"kms_key_id":            "",
							"tags": {
								"Name":      "Test TFC Agents",
								"Owner":     "Lucy",
								"Purpose":   "Test TFC Agents",
								"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
								"TTL":       "Ephemeral Workspace",
								"Terraform": "true",
								"Workspace": "tf-agent-pool",
							},
							"tags_all": {
								"Name":      "Test TFC Agents",
								"Owner":     "Lucy",
								"Purpose":   "Test TFC Agents",
								"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
								"TTL":       "Ephemeral Workspace",
								"Terraform": "true",
								"Workspace": "tf-agent-pool",
							},
							"throughput":  125,
							"volume_id":   "vol-01205027ba0d5ab15",
							"volume_size": 8,
							"volume_type": "gp3",
						},
					],
					"secondary_private_ips":    [],
					"security_groups":          [],
					"source_dest_check":        true,
					"spot_instance_request_id": "",
					"subnet_id":                "subnet-0b6efa305ddee152c",
					"tags":                     {},
					"tags_all": {
						"Name":      "Test TFC Agents",
						"Owner":     "Lucy",
						"Purpose":   "Test TFC Agents",
						"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
						"TTL":       "Ephemeral Workspace",
						"Terraform": "true",
						"Workspace": "tf-agent-pool",
					},
					"tenancy":                     "default",
					"timeouts":                    null,
					"user_data":                   "aeed59865dcb84fd41cc9aec2405fdf1d41b18c5",
					"user_data_base64":            null,
					"user_data_replace_on_change": false,
					"volume_tags":                 null,
					"vpc_security_group_ids": [
						"sg-0241af841da648da0",
						"sg-077ef699c0cf2cd42",
					],
				},
				"after_sensitive": {
					"capacity_reservation_specification": [
						{
							"capacity_reservation_target": [],
						},
					],
					"cpu_options": [
						{},
					],
					"credit_specification": [
						{},
					],
					"ebs_block_device": [],
					"enclave_options": [
						{},
					],
					"ephemeral_block_device":  [],
					"instance_market_options": [],
					"ipv6_addresses":          [],
					"launch_template":         [],
					"maintenance_options": [
						{},
					],
					"metadata_options": [
						{},
					],
					"network_interface": [],
					"private_dns_name_options": [
						{},
					],
					"root_block_device": [
						{
							"tags":     {},
							"tags_all": {},
						},
					],
					"secondary_private_ips": [],
					"security_groups":       [],
					"tags":                  {},
					"tags_all":              {},
					"user_data":             true,
					"vpc_security_group_ids": [
						false,
						false,
					],
				},
				"after_unknown": {},
				"before": {
					"ami": "ami-0c41542cdc0e23561",
					"arn": "arn:aws:ec2:eu-west-2:564784738291:instance/i-092ab9a8394c1849a",
					"associate_public_ip_address": true,
					"availability_zone":           "eu-west-2a",
					"capacity_reservation_specification": [
						{
							"capacity_reservation_preference": "open",
							"capacity_reservation_target":     [],
						},
					],
					"cpu_core_count": 2,
					"cpu_options": [
						{
							"amd_sev_snp":      "",
							"core_count":       2,
							"threads_per_core": 1,
						},
					],
					"cpu_threads_per_core": 1,
					"credit_specification": [
						{
							"cpu_credits": "unlimited",
						},
					],
					"disable_api_stop":        false,
					"disable_api_termination": false,
					"ebs_block_device":        [],
					"ebs_optimized":           false,
					"enable_primary_ipv6":     null,
					"enclave_options": [
						{
							"enabled": false,
						},
					],
					"ephemeral_block_device":  [],
					"get_password_data":       false,
					"hibernation":             false,
					"host_id":                 "",
					"host_resource_group_arn": null,
					"iam_instance_profile":    "",
					"id": "i-092ab9a8394c1849a",
					"instance_initiated_shutdown_behavior": "stop",
					"instance_lifecycle":                   "",
					"instance_market_options":              [],
					"instance_state":                       "running",
					"instance_type":                        "t4g.nano",
					"ipv6_address_count":                   0,
					"ipv6_addresses":                       [],
					"key_name":                             "",
					"launch_template":                      [],
					"maintenance_options": [
						{
							"auto_recovery": "default",
						},
					],
					"metadata_options": [
						{
							"http_endpoint":               "enabled",
							"http_protocol_ipv6":          "disabled",
							"http_put_response_hop_limit": 2,
							"http_tokens":                 "required",
							"instance_metadata_tags":      "disabled",
						},
					],
					"monitoring":                   false,
					"network_interface":            [],
					"outpost_arn":                  "",
					"password_data":                "",
					"placement_group":              "",
					"placement_partition_number":   0,
					"primary_network_interface_id": "eni-0eeb14909b2c30913",
					"private_dns":                  "ip-10-0-101-104.eu-west-2.compute.internal",
					"private_dns_name_options": [
						{
							"enable_resource_name_dns_a_record":    false,
							"enable_resource_name_dns_aaaa_record": false,
							"hostname_type":                        "ip-name",
						},
					],
					"private_ip": "10.0.101.104",
					"public_dns": "ec2-13-40-68-231.eu-west-2.compute.amazonaws.com",
					"public_ip":  "13.40.68.231",
					"root_block_device": [
						{
							"delete_on_termination": true,
							"device_name":           "/dev/xvda",
							"encrypted":             false,
							"iops":                  3000,
							"kms_key_id":            "",
							"tags": {
								"Name":      "Test TFC Agents",
								"Owner":     "Lucy",
								"Purpose":   "Test TFC Agents",
								"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
								"TTL":       "Ephemeral Workspace",
								"Terraform": "true",
								"Workspace": "tf-agent-pool",
							},
							"tags_all": {
								"Name":      "Test TFC Agents",
								"Owner":     "Lucy",
								"Purpose":   "Test TFC Agents",
								"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
								"TTL":       "Ephemeral Workspace",
								"Terraform": "true",
								"Workspace": "tf-agent-pool",
							},
							"throughput":  125,
							"volume_id":   "vol-01205027ba0d5ab15",
							"volume_size": 8,
							"volume_type": "gp3",
						},
					],
					"secondary_private_ips":    [],
					"security_groups":          [],
					"source_dest_check":        true,
					"spot_instance_request_id": "",
					"subnet_id":                "subnet-0b6efa305ddee152c",
					"tags":                     null,
					"tags_all": {
						"Name":      "Test TFC Agents",
						"Owner":     "Lucy",
						"Purpose":   "Test TFC Agents",
						"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
						"TTL":       "Ephemeral Workspace",
						"Terraform": "true",
						"Workspace": "tf-agent-pool",
					},
					"tenancy":                     "default",
					"timeouts":                    null,
					"user_data":                   "aeed59865dcb84fd41cc9aec2405fdf1d41b18c5",
					"user_data_base64":            null,
					"user_data_replace_on_change": false,
					"volume_tags":                 null,
					"vpc_security_group_ids": [
						"sg-0241af841da648da0",
						"sg-077ef699c0cf2cd42",
					],
				},
				"before_sensitive": {
					"capacity_reservation_specification": [
						{
							"capacity_reservation_target": [],
						},
					],
					"cpu_options": [
						{},
					],
					"credit_specification": [
						{},
					],
					"ebs_block_device": [],
					"enclave_options": [
						{},
					],
					"ephemeral_block_device":  [],
					"instance_market_options": [],
					"ipv6_addresses":          [],
					"launch_template":         [],
					"maintenance_options": [
						{},
					],
					"metadata_options": [
						{},
					],
					"network_interface": [],
					"private_dns_name_options": [
						{},
					],
					"root_block_device": [
						{
							"tags":     {},
							"tags_all": {},
						},
					],
					"secondary_private_ips": [],
					"security_groups":       [],
					"tags_all":              {},
					"user_data":             true,
					"vpc_security_group_ids": [
						false,
						false,
					],
				},
			},
			"mode":          "managed",
			"name":          "agent",
			"provider_name": "registry.terraform.io/hashicorp/aws",
			"type":          "aws_instance",
		},
		{
			"address": "aws_security_group.outbound_http",
			"change": {
				"actions": [
					"update",
				],
				"after": {
					"arn":         "arn:aws:ec2:eu-west-2:564784738291:security-group/sg-077ef699c0cf2cd42",
					"description": "Allow outbound HTTP(S) access to everywhere",
					"egress": [
						{
							"cidr_blocks": [
								"0.0.0.0/0",
							],
							"description": "",
							"from_port":   443,
							"ipv6_cidr_blocks": [
								"::/0",
							],
							"prefix_list_ids": [],
							"protocol":        "tcp",
							"security_groups": [],
							"self":            false,
							"to_port":         443,
						},
						{
							"cidr_blocks": [
								"0.0.0.0/0",
							],
							"description": "",
							"from_port":   80,
							"ipv6_cidr_blocks": [
								"::/0",
							],
							"prefix_list_ids": [],
							"protocol":        "tcp",
							"security_groups": [],
							"self":            false,
							"to_port":         80,
						},
					],
					"id":                     "sg-077ef699c0cf2cd42",
					"ingress":                [],
					"name":                   "outbound_http",
					"name_prefix":            "",
					"owner_id":               "564784738291",
					"revoke_rules_on_delete": false,
					"tags": {},
					"tags_all": {
						"Name":      "Test TFC Agents",
						"Owner":     "Lucy",
						"Purpose":   "Test TFC Agents",
						"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
						"TTL":       "Ephemeral Workspace",
						"Terraform": "true",
						"Workspace": "tf-agent-pool",
					},
					"timeouts": null,
					"vpc_id":   "vpc-0475656c1f1de9f54",
				},
				"after_sensitive": {
					"egress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [
								false,
							],
							"prefix_list_ids": [],
							"security_groups": [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [
								false,
							],
							"prefix_list_ids": [],
							"security_groups": [],
						},
					],
					"ingress":  [],
					"tags":     {},
					"tags_all": {},
				},
				"after_unknown": {},
				"before": {
					"arn":         "arn:aws:ec2:eu-west-2:564784738291:security-group/sg-077ef699c0cf2cd42",
					"description": "Allow outbound HTTP(S) access to everywhere",
					"egress": [
						{
							"cidr_blocks": [
								"0.0.0.0/0",
							],
							"description": "",
							"from_port":   443,
							"ipv6_cidr_blocks": [
								"::/0",
							],
							"prefix_list_ids": [],
							"protocol":        "tcp",
							"security_groups": [],
							"self":            false,
							"to_port":         443,
						},
						{
							"cidr_blocks": [
								"0.0.0.0/0",
							],
							"description": "",
							"from_port":   80,
							"ipv6_cidr_blocks": [
								"::/0",
							],
							"prefix_list_ids": [],
							"protocol":        "tcp",
							"security_groups": [],
							"self":            false,
							"to_port":         80,
						},
					],
					"id":                     "sg-077ef699c0cf2cd42",
					"ingress":                [],
					"name":                   "outbound_http",
					"name_prefix":            "",
					"owner_id":               "564784738291",
					"revoke_rules_on_delete": false,
					"tags": null,
					"tags_all": {
						"Name":      "Test TFC Agents",
						"Owner":     "Lucy",
						"Purpose":   "Test TFC Agents",
						"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
						"TTL":       "Ephemeral Workspace",
						"Terraform": "true",
						"Workspace": "tf-agent-pool",
					},
					"timeouts": null,
					"vpc_id":   "vpc-0475656c1f1de9f54",
				},
				"before_sensitive": {
					"egress": [
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [
								false,
							],
							"prefix_list_ids": [],
							"security_groups": [],
						},
						{
							"cidr_blocks": [
								false,
							],
							"ipv6_cidr_blocks": [
								false,
							],
							"prefix_list_ids": [],
							"security_groups": [],
						},
					],
					"ingress":  [],
					"tags_all": {},
				},
			},
			"mode":          "managed",
			"name":          "outbound_http",
			"provider_name": "registry.terraform.io/hashicorp/aws",
			"type":          "aws_security_group",
		},
		{
			"address": "module.vpc.aws_default_network_acl.this[0]",
			"change": {
				"actions": [
					"update",
				],
				"after": {
					"arn": "arn:aws:ec2:eu-west-2:564784738291:network-acl/acl-047c9b8117d436487",
					"default_network_acl_id": "acl-047c9b8117d436487",
					"egress": [
						{
							"action":          "allow",
							"cidr_block":      "",
							"from_port":       0,
							"icmp_code":       0,
							"icmp_type":       0,
							"ipv6_cidr_block": "::/0",
							"protocol":        "-1",
							"rule_no":         101,
							"to_port":         0,
						},
						{
							"action":          "allow",
							"cidr_block":      "0.0.0.0/0",
							"from_port":       0,
							"icmp_code":       0,
							"icmp_type":       0,
							"ipv6_cidr_block": "",
							"protocol":        "-1",
							"rule_no":         100,
							"to_port":         0,
						},
					],
					"id": "acl-047c9b8117d436487",
					"ingress": [
						{
							"action":          "allow",
							"cidr_block":      "",
							"from_port":       0,
							"icmp_code":       0,
							"icmp_type":       0,
							"ipv6_cidr_block": "::/0",
							"protocol":        "-1",
							"rule_no":         101,
							"to_port":         0,
						},
						{
							"action":          "allow",
							"cidr_block":      "0.0.0.0/0",
							"from_port":       0,
							"icmp_code":       0,
							"icmp_type":       0,
							"ipv6_cidr_block": "",
							"protocol":        "-1",
							"rule_no":         100,
							"to_port":         0,
						},
					],
					"owner_id": "564784738291",
					"subnet_ids": [
						"subnet-0892042fd9b88c443",
						"subnet-0b6efa305ddee152c",
						"subnet-0b74cf6d52312b7de",
					],
					"tags": {
						"Name": "agent-vpc-default",
					},
					"tags_all": {
						"Name":      "agent-vpc-default",
						"Owner":     "Lucy",
						"Purpose":   "Test TFC Agents",
						"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
						"TTL":       "Ephemeral Workspace",
						"Terraform": "true",
						"Workspace": "tf-agent-pool",
					},
					"vpc_id": "vpc-0475656c1f1de9f54",
				},
				"after_sensitive": {
					"egress": [
						{},
						{},
					],
					"ingress": [
						{},
						{},
					],
					"subnet_ids": [
						false,
						false,
						false,
					],
					"tags":     {},
					"tags_all": {},
				},
				"after_unknown": {},
				"before": {
					"arn": "arn:aws:ec2:eu-west-2:564784738291:network-acl/acl-047c9b8117d436487",
					"default_network_acl_id": "acl-047c9b8117d436487",
					"egress": [
						{
							"action":          "allow",
							"cidr_block":      "",
							"from_port":       0,
							"icmp_code":       null,
							"icmp_type":       null,
							"ipv6_cidr_block": "::/0",
							"protocol":        "-1",
							"rule_no":         101,
							"to_port":         0,
						},
						{
							"action":          "allow",
							"cidr_block":      "0.0.0.0/0",
							"from_port":       0,
							"icmp_code":       null,
							"icmp_type":       null,
							"ipv6_cidr_block": "",
							"protocol":        "-1",
							"rule_no":         100,
							"to_port":         0,
						},
					],
					"id": "acl-047c9b8117d436487",
					"ingress": [
						{
							"action":          "allow",
							"cidr_block":      "",
							"from_port":       0,
							"icmp_code":       null,
							"icmp_type":       null,
							"ipv6_cidr_block": "::/0",
							"protocol":        "-1",
							"rule_no":         101,
							"to_port":         0,
						},
						{
							"action":          "allow",
							"cidr_block":      "0.0.0.0/0",
							"from_port":       0,
							"icmp_code":       null,
							"icmp_type":       null,
							"ipv6_cidr_block": "",
							"protocol":        "-1",
							"rule_no":         100,
							"to_port":         0,
						},
					],
					"owner_id": "564784738291",
					"subnet_ids": [
						"subnet-0892042fd9b88c443",
						"subnet-0b6efa305ddee152c",
						"subnet-0b74cf6d52312b7de",
					],
					"tags": {
						"Name": "agent-vpc-default",
					},
					"tags_all": {
						"Name":      "agent-vpc-default",
						"Owner":     "Lucy",
						"Purpose":   "Test TFC Agents",
						"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
						"TTL":       "Ephemeral Workspace",
						"Terraform": "true",
						"Workspace": "tf-agent-pool",
					},
					"vpc_id": "vpc-0475656c1f1de9f54",
				},
				"before_sensitive": {
					"egress": [
						{},
						{},
					],
					"ingress": [
						{},
						{},
					],
					"subnet_ids": [
						false,
						false,
						false,
					],
					"tags":     {},
					"tags_all": {},
				},
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_default_network_acl",
		},
		{
			"address": "module.vpc.aws_default_route_table.default[0]",
			"change": {
				"actions": [
					"update",
				],
				"after": {
					"arn": "arn:aws:ec2:eu-west-2:564784738291:route-table/rtb-087b68f71c1fbb116",
					"default_route_table_id": "rtb-087b68f71c1fbb116",
					"id":               "rtb-087b68f71c1fbb116",
					"owner_id":         "564784738291",
					"propagating_vgws": [],
					"route":            [],
					"tags": {
						"Name": "agent-vpc-default",
					},
					"tags_all": {
						"Name":      "agent-vpc-default",
						"Owner":     "Lucy",
						"Purpose":   "Test TFC Agents",
						"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
						"TTL":       "Ephemeral Workspace",
						"Terraform": "true",
						"Workspace": "tf-agent-pool",
					},
					"timeouts": {
						"create": "5m",
						"update": "5m",
					},
					"vpc_id": "vpc-0475656c1f1de9f54",
				},
				"after_sensitive": {
					"propagating_vgws": [],
					"route":            [],
					"tags":             {},
					"tags_all":         {},
					"timeouts":         {},
				},
				"after_unknown": {},
				"before": {
					"arn": "arn:aws:ec2:eu-west-2:564784738291:route-table/rtb-087b68f71c1fbb116",
					"default_route_table_id": "rtb-087b68f71c1fbb116",
					"id":               "rtb-087b68f71c1fbb116",
					"owner_id":         "564784738291",
					"propagating_vgws": null,
					"route":            [],
					"tags": {
						"Name": "agent-vpc-default",
					},
					"tags_all": {
						"Name":      "agent-vpc-default",
						"Owner":     "Lucy",
						"Purpose":   "Test TFC Agents",
						"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
						"TTL":       "Ephemeral Workspace",
						"Terraform": "true",
						"Workspace": "tf-agent-pool",
					},
					"timeouts": {
						"create": "5m",
						"update": "5m",
					},
					"vpc_id": "vpc-0475656c1f1de9f54",
				},
				"before_sensitive": {
					"route":    [],
					"tags":     {},
					"tags_all": {},
					"timeouts": {},
				},
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "default",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_default_route_table",
		},
		{
			"address": "module.vpc.aws_route_table.public[0]",
			"change": {
				"actions": [
					"update",
				],
				"after": {
					"arn":              "arn:aws:ec2:eu-west-2:564784738291:route-table/rtb-034dbc5284e92440a",
					"id":               "rtb-034dbc5284e92440a",
					"owner_id":         "564784738291",
					"propagating_vgws": [],
					"route": [
						{
							"carrier_gateway_id":         "",
							"cidr_block":                 "0.0.0.0/0",
							"core_network_arn":           "",
							"destination_prefix_list_id": "",
							"egress_only_gateway_id":     "",
							"gateway_id":                 "igw-0adceafb47eb02050",
							"ipv6_cidr_block":            "",
							"local_gateway_id":           "",
							"nat_gateway_id":             "",
							"network_interface_id":       "",
							"transit_gateway_id":         "",
							"vpc_endpoint_id":            "",
							"vpc_peering_connection_id":  "",
						},
					],
					"tags": {
						"Name": "agent-vpc-public",
					},
					"tags_all": {
						"Name":      "agent-vpc-public",
						"Owner":     "Lucy",
						"Purpose":   "Test TFC Agents",
						"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
						"TTL":       "Ephemeral Workspace",
						"Terraform": "true",
						"Workspace": "tf-agent-pool",
					},
					"timeouts": null,
					"vpc_id":   "vpc-0475656c1f1de9f54",
				},
				"after_sensitive": {
					"propagating_vgws": [],
					"route": [
						{},
					],
					"tags":     {},
					"tags_all": {},
				},
				"after_unknown": {},
				"before": {
					"arn":              "arn:aws:ec2:eu-west-2:564784738291:route-table/rtb-034dbc5284e92440a",
					"id":               "rtb-034dbc5284e92440a",
					"owner_id":         "564784738291",
					"propagating_vgws": [],
					"route":            [],
					"tags": {
						"Name": "agent-vpc-public",
					},
					"tags_all": {
						"Name":      "agent-vpc-public",
						"Owner":     "Lucy",
						"Purpose":   "Test TFC Agents",
						"Source":    "https://github.com/hashi-strawb/tf-agent-pool",
						"TTL":       "Ephemeral Workspace",
						"Terraform": "true",
						"Workspace": "tf-agent-pool",
					},
					"timeouts": null,
					"vpc_id":   "vpc-0475656c1f1de9f54",
				},
				"before_sensitive": {
					"propagating_vgws": [],
					"route":            [],
					"tags":             {},
					"tags_all":         {},
				},
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_route_table",
		},
	],
	"terraform_version": "1.11.2",
	"timestamp":         "2025-03-26T16:42:12Z",
	"variables": {
		"tfc_agent_token": {
			"value": "REDACTED_SENSITIVE",
		},
	},
}
